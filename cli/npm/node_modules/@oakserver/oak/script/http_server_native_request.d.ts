/// <reference types="node" />
import * as dntShim from "./_dnt.shims.js";
import type { RequestEvent, ServerRequest, ServerRequestBody, UpgradeWebSocketFn, UpgradeWebSocketOptions } from "./types";
export declare const DomResponse: typeof dntShim.Response;
export declare function isNativeRequest(r: ServerRequest): r is NativeRequest;
export interface NativeRequestOptions {
    conn?: dntShim.Deno.Conn;
    upgradeWebSocket?: UpgradeWebSocketFn;
}
/** An internal oak abstraction for handling a Deno native request. Most users
 * of oak do not need to worry about this abstraction. */
export declare class NativeRequest implements ServerRequest {
    #private;
    constructor(requestEvent: RequestEvent, options?: NativeRequestOptions);
    get body(): dntShim.ReadableStream<Uint8Array> | null;
    get donePromise(): Promise<void>;
    get headers(): dntShim.Headers;
    get method(): string;
    get remoteAddr(): string | undefined;
    get request(): dntShim.Request;
    get url(): string;
    get rawUrl(): string;
    error(reason?: any): void;
    getBody(): ServerRequestBody;
    respond(response: dntShim.Response): Promise<void>;
    upgrade(options?: UpgradeWebSocketOptions): WebSocket;
}

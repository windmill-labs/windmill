"use strict";
// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
var _MultiReader_readers, _MultiReader_currentIndex;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultiReader = void 0;
const tslib_1 = require("tslib");
/**
 * Reader utility for combining multiple readers
 *
 * @deprecated (will be removed after 1.0.0) Use the [Web Streams API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Streams_API} instead.
 */
class MultiReader {
    constructor(readers) {
        _MultiReader_readers.set(this, void 0);
        _MultiReader_currentIndex.set(this, 0);
        tslib_1.__classPrivateFieldSet(this, _MultiReader_readers, [...readers], "f");
    }
    async read(p) {
        var _a;
        const r = tslib_1.__classPrivateFieldGet(this, _MultiReader_readers, "f")[tslib_1.__classPrivateFieldGet(this, _MultiReader_currentIndex, "f")];
        if (!r)
            return null;
        const result = await r.read(p);
        if (result === null) {
            tslib_1.__classPrivateFieldSet(this, _MultiReader_currentIndex, (_a = tslib_1.__classPrivateFieldGet(this, _MultiReader_currentIndex, "f"), _a++, _a), "f");
            return 0;
        }
        return result;
    }
}
exports.MultiReader = MultiReader;
_MultiReader_readers = new WeakMap(), _MultiReader_currentIndex = new WeakMap();

/// <reference types="node" />
import * as dntShim from "./_dnt.shims.js";
export type StructuredClonable = {
    [key: string]: StructuredClonable;
} | Array<StructuredClonable> | ArrayBuffer | ArrayBufferView | BigInt | bigint | dntShim.Blob | Boolean | boolean | Date | Error | EvalError | Map<StructuredClonable, StructuredClonable> | Number | number | RangeError | ReferenceError | RegExp | Set<StructuredClonable> | String | string | SyntaxError | TypeError | URIError;
/** Clones a state object, skipping any values that cannot be cloned. */
export declare function cloneState<S extends Record<string, any>>(state: S): S;

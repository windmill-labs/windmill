/// <reference types="node" />
import * as dntShim from "../../../../_dnt.shims.js";
/**
 * A transform stream that only transforms from the zero-indexed `start` and
 * `end` bytes (both inclusive).
 *
 * @example
 * ```ts
 * import { ByteSliceStream } from "https://deno.land/std@$STD_VERSION/streams/byte_slice_stream.ts";
 *
 * const response = await fetch("https://example.com");
 * const rangedStream = response.body!
 *   .pipeThrough(new ByteSliceStream(3, 8));
 * ```
 */
export declare class ByteSliceStream extends dntShim.TransformStream<Uint8Array, Uint8Array> {
    #private;
    /** Constructs a new instance. */
    constructor(start?: number, end?: number);
}

/// <reference types="node" />
import * as dntShim from "../../../../_dnt.shims.js";
import type { DelimiterStreamOptions } from "./delimiter_stream.js";
/**
 * Transform a stream into a stream where each chunk is divided by a given delimiter.
 *
 * @example
 * ```ts
 * import { TextDelimiterStream } from "https://deno.land/std@$STD_VERSION/streams/text_delimiter_stream.ts";
 * const res = await fetch("https://example.com");
 * const parts = res.body!
 *   .pipeThrough(new TextDecoderStream())
 *   .pipeThrough(new TextDelimiterStream("foo"));
 * ```
 */
export declare class TextDelimiterStream extends dntShim.TransformStream<string, string> {
    #private;
    /** Constructs a new instance. */
    constructor(delimiter: string, options?: DelimiterStreamOptions);
}

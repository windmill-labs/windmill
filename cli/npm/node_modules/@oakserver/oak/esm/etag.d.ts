/**
 * A collection of oak specific APIs for management of ETags.
 *
 * @module
 */
import * as dntShim from "./_dnt.shims.js";
import type { State } from "./application.js";
import type { Context } from "./context.js";
import { type ETagOptions } from "./deps.js";
import type { Middleware } from "./middleware.js";
export { calculate, type ETagOptions, type FileInfo, ifMatch, ifNoneMatch, } from "./deps.js";
/** For a given Context, try to determine the response body entity that an ETag
 * can be calculated from. */
export declare function getEntity<S extends State = Record<string, any>>(context: Context<S>): Promise<string | Uint8Array | dntShim.Deno.FileInfo | undefined>;
/**
 * Create middleware that will attempt to decode the response.body into
 * something that can be used to generate an `ETag` and add the `ETag` header to
 * the response.
 */
export declare function factory<S extends State = Record<string, any>>(options?: ETagOptions): Middleware<S>;

'use strict';

var string = require('../string.js');

String.compare = string.compare;
String.random = string.random;
if (typeof String.dedent === "undefined") {
    String.dedent = string.dedent;
}
String.prototype.count = function count(sub) {
    return string.count(String(this), sub);
};
String.prototype.capitalize = function capitalize(all) {
    return string.capitalize(String(this), all);
};
String.prototype.hyphenate = function capitalize() {
    return string.hyphenate(String(this));
};
String.prototype.bytes = function bytes() {
    return string.bytes(String(this));
};
String.prototype.chars = function chars() {
    return string.chars(String(this));
};
String.prototype.words = function words() {
    return string.words(String(this));
};
String.prototype.lines = function lines() {
    return string.lines(String(this));
};
String.prototype.chunk = function chunk(length) {
    return string.chunk(String(this), length);
};
String.prototype.truncate = function truncate(length) {
    return string.truncate(String(this), length);
};
String.prototype.trim = function trim(chars = "") {
    return string.trim(String(this), chars);
};
String.prototype.trimEnd = function trimEnd(chars = "") {
    return string.trimEnd(String(this), chars);
};
String.prototype.trimStart = function trimStart(chars = "") {
    return string.trimStart(String(this), chars);
};
String.prototype.stripEnd = function stripEnd(suffix) {
    return string.stripEnd(String(this), suffix);
};
String.prototype.stripStart = function stripStart(prefix) {
    return string.stripStart(String(this), prefix);
};
if (typeof String.prototype.dedent === "undefined") {
    String.prototype.dedent = function dedent() {
        return string.dedent(String(this));
    };
}
String.prototype.byteLength = function byteLength() {
    return string.byteLength(String(this));
};
String.prototype.isAscii = function isAscii(printableOnly = false) {
    return string.isAscii(String(this), printableOnly);
};
String.prototype.isEmoji = function isEmoji() {
    return string.isEmoji(String(this));
};
//# sourceMappingURL=string.js.map

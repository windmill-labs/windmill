{"version":3,"file":"sse.js","sources":["../sse.ts"],"sourcesContent":["var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n/**\n * This module provides tools for working with server-sent events.\n *\n * The {@link EventEndpoint} is used to handle SSE requests on the server\n * and send messages to the client, while the {@link EventSource} and the\n * {@link EventConsumer} are used to read and process messages sent by the\n * server.\n *\n * Despite their names, these classes can be used in both the browser/client\n * and the server environments.\n *\n * NOTE: This module depends on the Fetch API and Web Streams API, in Node.js,\n * it requires Node.js v18.0 or above.\n *\n * @module\n * @experimental\n */\nimport \"./external/event-target-polyfill/index.ts\";\nimport { createCloseEvent, createErrorEvent } from \"./event.ts\";\nimport { isBun, isDeno } from \"./env.ts\";\nimport runtime, { customInspect } from \"./runtime.ts\";\nimport _try from \"./try.ts\";\nif (typeof MessageEvent !== \"function\" || runtime().identity === \"workerd\") {\n    // Worker environments does not implement or only partially implement the MessageEvent, \n    // we need to implement it ourselves.\n    globalThis.MessageEvent = class MessageEvent extends Event {\n        constructor(type, eventInitDict = undefined) {\n            var _o, _p, _q;\n            super(type, eventInitDict);\n            this.data = undefined;\n            this.lastEventId = \"\";\n            this.origin = \"\";\n            this.ports = [];\n            this.source = null;\n            if (eventInitDict) {\n                this.data = eventInitDict.data;\n                this.lastEventId = (_o = eventInitDict.lastEventId) !== null && _o !== void 0 ? _o : \"\";\n                this.origin = (_p = eventInitDict.origin) !== null && _p !== void 0 ? _p : \"\";\n                this.ports = (_q = eventInitDict.ports) !== null && _q !== void 0 ? _q : [];\n            }\n        }\n        initMessageEvent(type, bubbles = false, cancelable = false, data = null, origin = \"\", lastEventId = \"\", source = null, ports = []) {\n            this.initEvent(type, bubbles !== null && bubbles !== void 0 ? bubbles : false, cancelable !== null && cancelable !== void 0 ? cancelable : false);\n            Object.assign(this, { data, origin, lastEventId, source, ports });\n        }\n    };\n}\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nconst SSEMarkClosed = new Set();\nconst _closed = Symbol.for(\"closed\");\nconst _request = Symbol.for(\"request\");\nconst _response = Symbol.for(\"response\");\nconst _writer = Symbol.for(\"writer\");\nconst _lastEventId = Symbol.for(\"lastEventId\");\nconst _reconnectionTime = Symbol.for(\"reconnectionTime\");\nconst _retry = Symbol.for(\"retry\");\nconst _timer = Symbol.for(\"timer\");\nconst _controller = Symbol.for(\"controller\");\nconst _onopen = Symbol.for(\"onopen\");\nconst _onerror = Symbol.for(\"onerror\");\nconst _onmessage = Symbol.for(\"onmessage\");\nfunction setReadonly(obj, name, value) {\n    Object.defineProperty(obj, name, {\n        configurable: true,\n        enumerable: false,\n        writable: false,\n        value,\n    });\n}\nfunction getReadonly(obj, name) {\n    var _o;\n    return (_o = Object.getOwnPropertyDescriptor(obj, name)) === null || _o === void 0 ? void 0 : _o.value;\n}\nfunction fixStringTag(ctor) {\n    setReadonly(ctor.prototype, Symbol.toStringTag, ctor.name);\n}\n/**\n * An SSE (server-sent events) implementation that can be used to send messages\n * to the client. This implementation is based on the `EventTarget` interface\n * and conforms the web standard.\n *\n * **Events:**\n *\n * - `close` - Dispatched when the connection is closed.\n *\n * @example\n * ```ts\n * // with Web APIs\n * import { EventEndpoint } from \"@ayonli/jsext/sse\";\n *\n * export default {\n *     async fetch(req: Request) {\n *         const events = new EventEndpoint(req);\n *\n *         events.addEventListener(\"close\", (ev) => {\n *             console.log(`The connection is closed, reason: ${ev.reason}`);\n *         });\n *\n *         setTimeout(() => {\n *             events.dispatchEvent(new MessageEvent(\"my-event\", {\n *                 data: \"Hello, World!\",\n *                 lastEventId: \"1\",\n *             }));\n *         }, 1_000);\n *\n *         return events.response!;\n *     }\n * }\n * ```\n *\n * @example\n * ```ts\n * // with Node.js APIs\n * import * as http from \"node:http\";\n * import { EventEndpoint } from \"@ayonli/jsext/sse\";\n *\n * const server = http.createServer((req, res) => {\n *     const events = new EventEndpoint(req, res);\n *\n *     events.addEventListener(\"close\", (ev) => {\n *         console.log(`The connection is closed, reason: ${ev.reason}`);\n *     });\n *\n *     setTimeout(() => {\n *         events.dispatchEvent(new MessageEvent(\"my-event\", {\n *             data: \"Hello, World!\",\n *             lastEventId: \"1\",\n *         }));\n *     }, 1_000);\n * });\n *\n * server.listen(3000);\n * ```\n */\nexport class EventEndpoint extends EventTarget {\n    constructor(request, ...args) {\n        var _o, _p, _q, _r, _s;\n        super();\n        const isNodeRequest = \"socket\" in request && \"socket\" in args[0];\n        let options;\n        if (isNodeRequest) {\n            const req = request;\n            this[_lastEventId] = String((_o = req.headers[\"last-event-id\"]) !== null && _o !== void 0 ? _o : \"\");\n            options = (_p = args[1]) !== null && _p !== void 0 ? _p : {};\n        }\n        else {\n            this[_lastEventId] = (_q = request.headers.get(\"Last-Event-ID\")) !== null && _q !== void 0 ? _q : \"\";\n            options = (_r = args[0]) !== null && _r !== void 0 ? _r : {};\n        }\n        this[_reconnectionTime] = (_s = options.reconnectionTime) !== null && _s !== void 0 ? _s : 0;\n        this[_closed] = this[_lastEventId]\n            ? SSEMarkClosed.has(this[_lastEventId])\n            : false;\n        const resInit = {\n            status: this.closed ? 204 : 200,\n            statusText: this.closed ? \"No Content\" : \"OK\",\n            headers: {\n                \"Content-Type\": \"text/event-stream\",\n                \"Cache-Control\": \"no-cache\",\n                \"Connection\": \"keep-alive\",\n                \"Transfer-Encoding\": \"chunked\",\n            },\n        };\n        const _this = this;\n        if (isNodeRequest) {\n            this[_response] = null;\n            const res = args[0];\n            const writable = new WritableStream({\n                write(chunk) {\n                    res.write(chunk);\n                },\n                close() {\n                    res.closed || res.end();\n                    _this[_closed] = true;\n                    _this.dispatchEvent(createCloseEvent(\"close\", { wasClean: true }));\n                },\n                abort(err) {\n                    res.closed || res.destroy(err);\n                },\n            });\n            this[_writer] = writable.getWriter();\n            res.once(\"close\", () => {\n                this[_writer].close().catch(() => { });\n            }).once(\"error\", (err) => {\n                this[_writer].abort(err).catch(() => { });\n            });\n            for (const [name, value] of Object.entries(resInit.headers)) {\n                // Use `setHeader` to set headers instead of passing them to `writeHead`,\n                // it seems in Deno, the headers are not written to the response if they\n                // are passed to `writeHead`.\n                res.setHeader(name, value);\n            }\n            res.writeHead(resInit.status, resInit.statusText);\n            res.write(new Uint8Array(0));\n        }\n        else {\n            const { writable, readable } = new TransformStream();\n            const reader = readable.getReader();\n            const _readable = new ReadableStream({\n                async start(controller) {\n                    if (isBun) {\n                        // In Bun, the response will not be sent to the client\n                        // until the first non-empty chunk is written. May be a\n                        // bug, but we need to work around it now.\n                        controller.enqueue(encoder.encode(\":ok\\n\\n\"));\n                    }\n                    else {\n                        controller.enqueue(new Uint8Array(0));\n                    }\n                },\n                async pull(controller) {\n                    while (true) {\n                        const { done, value } = await reader.read();\n                        if (done) {\n                            try {\n                                controller.close();\n                            }\n                            catch (_o) { }\n                            _this[_closed] = true;\n                            _this.dispatchEvent(createCloseEvent(\"close\", { wasClean: true }));\n                            break;\n                        }\n                        controller.enqueue(value);\n                    }\n                },\n                async cancel(reason) {\n                    await reader.cancel(reason);\n                }\n            });\n            this[_writer] = writable.getWriter();\n            this[_response] = new Response(this.closed ? null : _readable, resInit);\n        }\n        this.closed && this.close();\n    }\n    /**\n     * The last event ID that the server has sent.\n     */\n    get lastEventId() {\n        return this[_lastEventId];\n    }\n    /**\n     * Indicates whether the connection has been closed.\n     */\n    get closed() {\n        return this[_closed];\n    }\n    /**\n     * The response that will be sent to the client, only available when the\n     * instance is created with the `Request` API.\n     */\n    get response() {\n        return this[_response];\n    }\n    addEventListener(event, listener, options = undefined) {\n        return super.addEventListener(event, listener, options);\n    }\n    removeEventListener(type, listener, options = undefined) {\n        return super.removeEventListener(type, listener, options);\n    }\n    dispatchEvent(event) {\n        if (event instanceof MessageEvent) {\n            if (event.type === \"message\") {\n                this.send(event.data, event.lastEventId).catch(() => { });\n            }\n            else {\n                this.sendEvent(event.type, event.data, event.lastEventId)\n                    .catch(() => { });\n            }\n            return !event.cancelable || !event.defaultPrevented;\n        }\n        else {\n            return super.dispatchEvent(event);\n        }\n    }\n    buildMessage(data, options = {}) {\n        let message = \"\";\n        if (options.id) {\n            this[_lastEventId] = options.id;\n            message += `id: ${options.id}\\n`;\n        }\n        if (options.event) {\n            message += `event: ${options.event}\\n`;\n        }\n        if (this[_reconnectionTime]) {\n            message += `retry: ${this[_reconnectionTime]}\\n`;\n        }\n        message += data.split(/\\r\\n|\\n/).map((line) => `data: ${line}\\n`).join(\"\");\n        message += \"\\n\";\n        return encoder.encode(message);\n    }\n    /**\n     * Sends a message to the client.\n     *\n     * The client (`EventSource` or {@link EventConsumer}) will receive the\n     * message as a `MessageEvent`, which can be listened to using the\n     * `message` event.\n     *\n     * @param eventId If specified, the client will remember the value as the\n     * last event ID and will send it back to the server when reconnecting.\n     */\n    async send(data, eventId = undefined) {\n        await this[_writer].write(this.buildMessage(data, { id: eventId }));\n    }\n    /**\n     * Sends a custom event to the client.\n     *\n     * The client (`EventSource` or {@link EventConsumer}) will receive the\n     * event as a `MessageEvent`, which can be listened to using the custom\n     * event name.\n     *\n     * @param eventId If specified, the client will remember the value as the\n     * last event ID and will send it back to the server when reconnecting.\n     */\n    async sendEvent(event, data, eventId = undefined) {\n        await this[_writer].write(this.buildMessage(data, { id: eventId, event }));\n    }\n    /**\n     * Closes the connection.\n     *\n     * By default, when the connection is closed, the client will try to\n     * reconnect after a certain period of time, which is specified by the\n     * `reconnectionTime` option when creating the instance.\n     *\n     * However, if the `noReconnect` parameter is set, this method will mark\n     * the client as closed based on the last event ID. When the client\n     * reconnects, the server will send a `204 No Content` response to the\n     * client to instruct it to terminate the connection.\n     *\n     * It is important to note that the server depends on the last event ID to\n     * identify the client for this purpose, so the server must send a globally\n     * unique `lastEventId` to the client when sending messages.\n     */\n    close(noReconnect = false) {\n        this[_writer].close().catch(() => { }).finally(() => {\n            this[_closed] = true;\n            if (this.lastEventId) {\n                if (!SSEMarkClosed.has(this.lastEventId)) {\n                    noReconnect && SSEMarkClosed.add(this.lastEventId);\n                }\n                else {\n                    SSEMarkClosed.delete(this.lastEventId);\n                }\n            }\n        });\n    }\n}\nfixStringTag(EventEndpoint);\nasync function readAndProcessResponse(response, handlers) {\n    const reader = response.body.getReader();\n    let buffer = \"\";\n    try {\n        while (true) {\n            const { done, value } = await reader.read();\n            if (done) {\n                handlers.onEnd();\n                break;\n            }\n            buffer += decoder.decode(value);\n            const chunks = buffer.split(/\\r\\n\\r\\n|\\n\\n/);\n            if (chunks.length === 1) {\n                continue;\n            }\n            else {\n                buffer = chunks.pop();\n            }\n            for (const chunk of chunks) {\n                const lines = chunk.split(/\\r\\n|\\n/);\n                let data = \"\";\n                let type = \"message\";\n                let isMessage = false;\n                for (const line of lines) {\n                    if (line.startsWith(\"data:\") || line === \"data\") {\n                        let value = line.slice(5);\n                        if (value[0] === \" \") {\n                            value = value.slice(1);\n                        }\n                        if (data) {\n                            data += \"\\n\" + value;\n                        }\n                        else {\n                            data = value;\n                        }\n                        isMessage = true;\n                    }\n                    else if (line.startsWith(\"event:\") || line === \"event\") {\n                        type = line.slice(6).trim();\n                        isMessage = true;\n                    }\n                    else if (line.startsWith(\"id:\") || line === \"id\") {\n                        handlers.onId(line.slice(3).trim());\n                        isMessage = true;\n                    }\n                    else if (line.startsWith(\"retry:\")) {\n                        const time = parseInt(line.slice(6).trim());\n                        if (!isNaN(time) && time >= 0) {\n                            handlers.onRetry(time);\n                            isMessage = true;\n                        }\n                    }\n                }\n                if (isMessage) {\n                    handlers.onData(data, type || \"message\");\n                }\n            }\n        }\n    }\n    catch (error) {\n        handlers.onError(error);\n    }\n}\n/**\n * @deprecated Use {@link EventEndpoint} instead.\n */\nexport const SSE = EventEndpoint;\n/**\n * This is an implementation of the\n * [EventSource](https://developer.mozilla.org/en-US/docs/Web/API/EventSource)\n * API that serves as a polyfill in environments that do not have native support,\n * such as Node.js.\n *\n * NOTE: This API depends on the Fetch API and Web Streams API, in Node.js, it\n * requires Node.js v18.0 or above.\n *\n * @example\n * ```ts\n * import { EventSource } from \"@ayonli/jsext/sse\";\n *\n * globalThis.EventSource ??= EventSource;\n *\n * const events = new EventSource(\"http://localhost:3000\");\n *\n * events.addEventListener(\"open\", () => {\n *     console.log(\"The connection is open.\");\n * });\n *\n * events.addEventListener(\"error\", (ev) => {\n *     console.error(\"An error occurred:\", ev.error);\n * });\n *\n * events.addEventListener(\"message\", (ev) => {\n *     console.log(\"Received message from the server:\", ev.data);\n * });\n *\n * events.addEventListener(\"my-event\", (ev) => {\n *     console.log(\"Received custom event from the server:\", ev.data);\n * });\n * ```\n */\nexport class EventSource extends EventTarget {\n    get url() {\n        var _o;\n        return (_o = getReadonly(this, \"url\")) !== null && _o !== void 0 ? _o : \"\";\n    }\n    get withCredentials() {\n        var _o;\n        return (_o = getReadonly(this, \"withCredentials\")) !== null && _o !== void 0 ? _o : false;\n    }\n    get readyState() {\n        var _o;\n        return (_o = getReadonly(this, \"readyState\")) !== null && _o !== void 0 ? _o : this.CONNECTING;\n    }\n    get onopen() {\n        var _o;\n        return (_o = this[_onopen]) !== null && _o !== void 0 ? _o : null;\n    }\n    set onopen(value) {\n        this[_onopen] = value;\n    }\n    get onmessage() {\n        var _o;\n        return (_o = this[_onmessage]) !== null && _o !== void 0 ? _o : null;\n    }\n    set onmessage(value) {\n        this[_onmessage] = value;\n    }\n    get onerror() {\n        var _o;\n        return (_o = this[_onerror]) !== null && _o !== void 0 ? _o : null;\n    }\n    set onerror(value) {\n        this[_onerror] = value;\n    }\n    constructor(url, options = {}) {\n        var _o;\n        super();\n        this[_a] = new AbortController();\n        this[_b] = null;\n        this[_c] = \"\";\n        this[_d] = 0;\n        this[_e] = 0;\n        this[_f] = null;\n        this[_g] = null;\n        this[_h] = null;\n        this[_j] = null;\n        this.CONNECTING = EventSource.CONNECTING;\n        this.OPEN = EventSource.OPEN;\n        this.CLOSED = EventSource.CLOSED;\n        url = typeof url === \"object\" ? url.href : new URL(url, typeof location === \"object\" ? location.href : undefined).href;\n        setReadonly(this, \"url\", url);\n        setReadonly(this, \"withCredentials\", (_o = options.withCredentials) !== null && _o !== void 0 ? _o : false);\n        setReadonly(this, \"readyState\", this.CONNECTING);\n        setReadonly(this, \"CONNECTING\", EventSource.CONNECTING);\n        setReadonly(this, \"OPEN\", EventSource.OPEN);\n        setReadonly(this, \"CLOSED\", EventSource.CLOSED);\n        this.connect().catch(() => { });\n    }\n    async connect() {\n        var _o, _p, _q, _r, _s, _t;\n        if (this.readyState === this.CLOSED) {\n            return;\n        }\n        setReadonly(this, \"readyState\", this.CONNECTING);\n        const headers = {\n            \"Accept\": \"text/event-stream\",\n        };\n        if (this[_lastEventId]) {\n            headers[\"Last-Event-ID\"] = this[_lastEventId];\n        }\n        this[_request] = new Request(this.url, {\n            headers,\n            credentials: this.withCredentials ? \"include\" : \"same-origin\",\n            cache: \"no-store\",\n            signal: this[_controller].signal,\n        });\n        const [err, res] = await _try(fetch(this[_request]));\n        if (err || (res === null || res === void 0 ? void 0 : res.type) === \"error\") {\n            const event = createErrorEvent(\"error\", {\n                error: err || new Error(`Failed to fetch '${this.url}'`),\n            });\n            this.dispatchEvent(event);\n            (_o = this.onerror) === null || _o === void 0 ? void 0 : _o.call(this, event);\n            this.tryReconnect();\n            return;\n        }\n        else if (res.status === 204) { // No more data, close the connection\n            setReadonly(this, \"readyState\", this.CLOSED);\n            return;\n        }\n        else if (res.status !== 200) {\n            setReadonly(this, \"readyState\", this.CLOSED);\n            const event = createErrorEvent(\"error\", {\n                error: new TypeError(`The server responded with status ${res.status}.`),\n            });\n            this.dispatchEvent(event);\n            (_p = this.onerror) === null || _p === void 0 ? void 0 : _p.call(this, event);\n            return;\n        }\n        else if (!((_q = res.headers.get(\"Content-Type\")) === null || _q === void 0 ? void 0 : _q.startsWith(\"text/event-stream\"))) {\n            setReadonly(this, \"readyState\", this.CLOSED);\n            const event = createErrorEvent(\"error\", {\n                error: new TypeError(\"The response is not an event stream.\"),\n            });\n            this.dispatchEvent(event);\n            (_r = this.onerror) === null || _r === void 0 ? void 0 : _r.call(this, event);\n            return;\n        }\n        else if (!res.body) {\n            setReadonly(this, \"readyState\", this.CLOSED);\n            const event = createErrorEvent(\"error\", {\n                error: new TypeError(\"The response does not have a body.\"),\n            });\n            this.dispatchEvent(event);\n            (_s = this.onerror) === null || _s === void 0 ? void 0 : _s.call(this, event);\n            return;\n        }\n        setReadonly(this, \"readyState\", this.OPEN);\n        this[_retry] = 0;\n        const event = new Event(\"open\");\n        this.dispatchEvent(event);\n        (_t = this.onopen) === null || _t === void 0 ? void 0 : _t.call(this, event);\n        const origin = new URL(res.url || this.url).origin;\n        await readAndProcessResponse(res, {\n            onId: (id) => {\n                this[_lastEventId] = id;\n            },\n            onRetry: (time) => {\n                this[_reconnectionTime] = time;\n            },\n            onData: (data, event) => {\n                var _o;\n                const _event = new MessageEvent(event, {\n                    lastEventId: this[_lastEventId],\n                    data,\n                    origin,\n                });\n                this.dispatchEvent(_event);\n                (_o = this.onmessage) === null || _o === void 0 ? void 0 : _o.call(this, _event);\n            },\n            onError: (error) => {\n                var _o;\n                if (this.readyState !== this.CLOSED) {\n                    const event = createErrorEvent(\"error\", { error });\n                    this.dispatchEvent(event);\n                    (_o = this.onerror) === null || _o === void 0 ? void 0 : _o.call(this, event);\n                    this.tryReconnect();\n                }\n            },\n            onEnd: () => {\n                var _o;\n                if (this.readyState !== this.CLOSED) {\n                    const event = createErrorEvent(\"error\", {\n                        error: new Error(\"The connection is interrupted.\"),\n                    });\n                    this.dispatchEvent(event);\n                    (_o = this.onerror) === null || _o === void 0 ? void 0 : _o.call(this, event);\n                    this.tryReconnect();\n                }\n            },\n        });\n    }\n    tryReconnect() {\n        if (this[_timer]) {\n            clearTimeout(this[_timer]);\n            this[_timer] = null;\n        }\n        this[_timer] = setTimeout(() => {\n            this.connect().catch(() => { });\n        }, this[_reconnectionTime] || 1000 * Math.min(30, Math.pow(2, this[_retry]++)));\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        if (this[_timer]) {\n            clearTimeout(this[_timer]);\n            this[_timer] = null;\n        }\n        setReadonly(this, \"readyState\", this.CLOSED);\n        this[_controller].abort();\n    }\n    addEventListener(event, listener, options = undefined) {\n        return super.addEventListener(event, listener, options);\n    }\n    removeEventListener(type, listener, options = undefined) {\n        return super.removeEventListener(type, listener, options);\n    }\n    [(_a = _controller, _b = _request, _c = _lastEventId, _d = _reconnectionTime, _e = _retry, _f = _timer, _g = _onopen, _h = _onmessage, _j = _onerror, customInspect)]() {\n        const _this = this;\n        if (isDeno) {\n            return \"EventSource \" + Deno.inspect({\n                readyState: _this.readyState,\n                url: _this.url,\n                withCredentials: _this.withCredentials,\n                onopen: _this.onopen,\n                onmessage: _this.onmessage,\n                onerror: _this.onerror,\n            }, { colors: true });\n        }\n        else {\n            return new class EventSource {\n                constructor() {\n                    this.readyState = _this.readyState;\n                    this.url = _this.url;\n                    this.withCredentials = _this.withCredentials;\n                    this.onopen = _this.onopen;\n                    this.onmessage = _this.onmessage;\n                    this.onerror = _this.onerror;\n                }\n            };\n        }\n    }\n}\nEventSource.CONNECTING = 0;\nEventSource.OPEN = 1;\nEventSource.CLOSED = 2;\nfixStringTag(EventSource);\n/**\n * Unlike the {@link EventSource} API, which takes a URL and only supports GET\n * request, the {@link EventConsumer} API accepts a `Response` object and reads\n * the messages from its body, the response can be generated from any type of\n * request, usually returned from the `fetch` function.\n *\n * This API doesn't support active closure and reconnection, however, we can\n * use `AbortController` in the request to terminate the connection, and add\n * a event listener to the close event and reestablish the connection manually.\n *\n * **Events:**\n *\n * - `error` - Dispatched when an error occurs, such as network failure. After\n *   this event is dispatched, the connection will be closed and the `close`\n *   event will be dispatched.\n * - `close` - Dispatched when the connection is closed. If the connection is\n *   closed due to some error, the `error` event will be dispatched before this\n *   event, and the close event will have the `wasClean` set to `false`, and the\n *   `reason` property contains the error message, if any.\n * - `message` - Dispatched when a message with the default event type is\n *   received.\n * - custom events - Dispatched when a message with a custom event type is\n *   received.\n *\n * NOTE: This API depends on the Fetch API and Web Streams API, in Node.js, it\n * requires Node.js v18.0 or above.\n *\n * @example\n * ```ts\n * import { EventConsumer } from \"@ayonli/jsext/sse\";\n *\n * const response = await fetch(\"http://localhost:3000\", {\n *     method: \"POST\",\n *     headers: {\n *         \"Accept\": \"text/event-stream\",\n *     },\n * });\n * const events = new EventConsumer(response);\n *\n * events.addEventListener(\"close\", (ev) => {\n *     console.log(`The connection is closed, reason: ${ev.reason}`);\n *\n *     if (!ev.wasClean) {\n *         // perhaps to reestablish the connection\n *     }\n * });\n *\n * events.addEventListener(\"my-event\", (ev) => {\n *     console.log(`Received message from the server: ${ev.data}`);\n * });\n * ```\n */\nexport class EventConsumer extends EventTarget {\n    constructor(response) {\n        var _o;\n        super();\n        this[_k] = \"\";\n        this[_l] = 0;\n        this[_m] = false;\n        if (!response.body) {\n            throw new TypeError(\"The response does not have a body.\");\n        }\n        else if (response.bodyUsed) {\n            throw new TypeError(\"The response body has already been used.\");\n        }\n        else if (response.body.locked) {\n            throw new TypeError(\"The response body is locked.\");\n        }\n        else if (!((_o = response.headers.get(\"Content-Type\")) === null || _o === void 0 ? void 0 : _o.startsWith(\"text/event-stream\"))) {\n            throw new TypeError(\"The response is not an event stream.\");\n        }\n        const origin = response.url ? new URL(response.url).origin : \"\";\n        readAndProcessResponse(response, {\n            onId: (id) => {\n                this[_lastEventId] = id;\n            },\n            onRetry: (time) => {\n                this[_reconnectionTime] = time;\n            },\n            onData: (data, event) => {\n                this.dispatchEvent(new MessageEvent(event, {\n                    lastEventId: this[_lastEventId],\n                    data,\n                    origin,\n                }));\n            },\n            onError: (error) => {\n                this[_closed] = true;\n                this.dispatchEvent(createErrorEvent(\"error\", { error }));\n                this.dispatchEvent(createCloseEvent(\"close\", {\n                    reason: error instanceof Error ? error.message : String(error),\n                    wasClean: false,\n                }));\n            },\n            onEnd: () => {\n                this[_closed] = true;\n                this.dispatchEvent(createCloseEvent(\"close\", { wasClean: true }));\n            },\n        }).catch(() => { });\n    }\n    /**\n     * The last event ID that the server has sent.\n     */\n    get lastEventId() {\n        return this[_lastEventId];\n    }\n    /**\n     * The time in milliseconds that instructs the client to wait before\n     * reconnecting.\n     *\n     * NOTE: The {@link EventConsumer} API does not support auto-reconnection,\n     * this value is only used when we want to reestablish the connection\n     * manually.\n     */\n    get retry() {\n        return this[_reconnectionTime];\n    }\n    /**\n     * Indicates whether the connection has been closed.\n     */\n    get closed() {\n        return this[_closed];\n    }\n    addEventListener(event, listener, options = undefined) {\n        return super.addEventListener(event, listener, options);\n    }\n    removeEventListener(type, listener, options = undefined) {\n        return super.removeEventListener(type, listener, options);\n    }\n}\n_k = _lastEventId, _l = _reconnectionTime, _m = _closed;\nfixStringTag(EventConsumer);\n/**\n * @deprecated Use {@link EventConsumer} instead.\n */\nexport const EventClient = EventConsumer;\n//# sourceMappingURL=sse.js.map"],"names":["runtime","createCloseEvent","isBun","_try","event","createErrorEvent","customInspect","isDeno"],"mappings":";;;;;;;;AAAA,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAuBnD,IAAI,OAAO,YAAY,KAAK,UAAU,IAAIA,eAAO,EAAE,CAAC,QAAQ,KAAK,SAAS,EAAE;AAC5E;AACA;AACA,IAAI,UAAU,CAAC,YAAY,GAAG,MAAM,YAAY,SAAS,KAAK,CAAC;AAC/D,QAAQ,WAAW,CAAC,IAAI,EAAE,aAAa,GAAG,SAAS,EAAE;AACrD,YAAY,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAC3B,YAAY,KAAK,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;AACvC,YAAY,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;AAClC,YAAY,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AAClC,YAAY,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AAC7B,YAAY,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAC5B,YAAY,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AAC/B,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;AAC/C,gBAAgB,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,GAAG,aAAa,CAAC,WAAW,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AACxG,gBAAgB,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,aAAa,CAAC,MAAM,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AAC9F,gBAAgB,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,aAAa,CAAC,KAAK,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AAC5F,aAAa;AACb,SAAS;AACT,QAAQ,gBAAgB,CAAC,IAAI,EAAE,OAAO,GAAG,KAAK,EAAE,UAAU,GAAG,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,EAAE,EAAE,WAAW,GAAG,EAAE,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK,GAAG,EAAE,EAAE;AAC3I,YAAY,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,OAAO,GAAG,KAAK,EAAE,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,KAAK,CAAC,GAAG,UAAU,GAAG,KAAK,CAAC,CAAC;AAC9J,YAAY,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;AAC9E,SAAS;AACT,KAAK,CAAC;AACN,CAAC;AACD,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;AAClC,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;AAClC,MAAM,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;AAChC,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACrC,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACvC,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACzC,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACrC,MAAM,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC/C,MAAM,iBAAiB,GAAG,MAAM,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AACzD,MAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACnC,MAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACnC,MAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC7C,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACrC,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACvC,MAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAC3C,SAAS,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE;AACvC,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE;AACrC,QAAQ,YAAY,EAAE,IAAI;AAC1B,QAAQ,UAAU,EAAE,KAAK;AACzB,QAAQ,QAAQ,EAAE,KAAK;AACvB,QAAQ,KAAK;AACb,KAAK,CAAC,CAAC;AACP,CAAC;AACD,SAAS,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE;AAChC,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,wBAAwB,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC;AAC3G,CAAC;AACD,SAAS,YAAY,CAAC,IAAI,EAAE;AAC5B,IAAI,WAAW,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,SAAS,WAAW,CAAC;AAC/C,IAAI,WAAW,CAAC,OAAO,EAAE,GAAG,IAAI,EAAE;AAClC,QAAQ,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAC/B,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,MAAM,aAAa,GAAG,QAAQ,IAAI,OAAO,IAAI,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACzE,QAAQ,IAAI,OAAO,CAAC;AACpB,QAAQ,IAAI,aAAa,EAAE;AAC3B,YAAY,MAAM,GAAG,GAAG,OAAO,CAAC;AAChC,YAAY,IAAI,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACjH,YAAY,OAAO,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AACzE,SAAS;AACT,aAAa;AACb,YAAY,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AACjH,YAAY,OAAO,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AACzE,SAAS;AACT,QAAQ,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,gBAAgB,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACrG,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;AAC1C,cAAc,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACnD,cAAc,KAAK,CAAC;AACpB,QAAQ,MAAM,OAAO,GAAG;AACxB,YAAY,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG;AAC3C,YAAY,UAAU,EAAE,IAAI,CAAC,MAAM,GAAG,YAAY,GAAG,IAAI;AACzD,YAAY,OAAO,EAAE;AACrB,gBAAgB,cAAc,EAAE,mBAAmB;AACnD,gBAAgB,eAAe,EAAE,UAAU;AAC3C,gBAAgB,YAAY,EAAE,YAAY;AAC1C,gBAAgB,mBAAmB,EAAE,SAAS;AAC9C,aAAa;AACb,SAAS,CAAC;AACV,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC;AAC3B,QAAQ,IAAI,aAAa,EAAE;AAC3B,YAAY,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;AACnC,YAAY,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAChC,YAAY,MAAM,QAAQ,GAAG,IAAI,cAAc,CAAC;AAChD,gBAAgB,KAAK,CAAC,KAAK,EAAE;AAC7B,oBAAoB,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACrC,iBAAiB;AACjB,gBAAgB,KAAK,GAAG;AACxB,oBAAoB,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC;AAC5C,oBAAoB,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;AAC1C,oBAAoB,KAAK,CAAC,aAAa,CAACC,sBAAgB,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACvF,iBAAiB;AACjB,gBAAgB,KAAK,CAAC,GAAG,EAAE;AAC3B,oBAAoB,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACnD,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,YAAY,IAAI,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;AACjD,YAAY,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM;AACpC,gBAAgB,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACvD,aAAa,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,KAAK;AACtC,gBAAgB,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1D,aAAa,CAAC,CAAC;AACf,YAAY,KAAK,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACzE;AACA;AACA;AACA,gBAAgB,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC3C,aAAa;AACb,YAAY,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;AAC9D,YAAY,GAAG,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,SAAS;AACT,aAAa;AACb,YAAY,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAI,eAAe,EAAE,CAAC;AACjE,YAAY,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;AAChD,YAAY,MAAM,SAAS,GAAG,IAAI,cAAc,CAAC;AACjD,gBAAgB,MAAM,KAAK,CAAC,UAAU,EAAE;AACxC,oBAAoB,IAAIC,SAAK,EAAE;AAC/B;AACA;AACA;AACA,wBAAwB,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;AACtE,qBAAqB;AACrB,yBAAyB;AACzB,wBAAwB,UAAU,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,qBAAqB;AACrB,iBAAiB;AACjB,gBAAgB,MAAM,IAAI,CAAC,UAAU,EAAE;AACvC,oBAAoB,OAAO,IAAI,EAAE;AACjC,wBAAwB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpE,wBAAwB,IAAI,IAAI,EAAE;AAClC,4BAA4B,IAAI;AAChC,gCAAgC,UAAU,CAAC,KAAK,EAAE,CAAC;AACnD,6BAA6B;AAC7B,4BAA4B,OAAO,EAAE,EAAE,GAAG;AAC1C,4BAA4B,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;AAClD,4BAA4B,KAAK,CAAC,aAAa,CAACD,sBAAgB,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAC/F,4BAA4B,MAAM;AAClC,yBAAyB;AACzB,wBAAwB,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAClD,qBAAqB;AACrB,iBAAiB;AACjB,gBAAgB,MAAM,MAAM,CAAC,MAAM,EAAE;AACrC,oBAAoB,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAChD,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,YAAY,IAAI,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;AACjD,YAAY,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,SAAS,EAAE,OAAO,CAAC,CAAC;AACpF,SAAS;AACT,QAAQ,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;AACpC,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG;AACtB,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC;AAClC,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC;AAC7B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC;AAC/B,KAAK;AACL,IAAI,gBAAgB,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,GAAG,SAAS,EAAE;AAC3D,QAAQ,OAAO,KAAK,CAAC,gBAAgB,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AAChE,KAAK;AACL,IAAI,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,GAAG,SAAS,EAAE;AAC7D,QAAQ,OAAO,KAAK,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AAClE,KAAK;AACL,IAAI,aAAa,CAAC,KAAK,EAAE;AACzB,QAAQ,IAAI,KAAK,YAAY,YAAY,EAAE;AAC3C,YAAY,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;AAC1C,gBAAgB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1E,aAAa;AACb,iBAAiB;AACjB,gBAAgB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,WAAW,CAAC;AACzE,qBAAqB,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACtC,aAAa;AACb,YAAY,OAAO,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;AAChE,SAAS;AACT,aAAa;AACb,YAAY,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC9C,SAAS;AACT,KAAK;AACL,IAAI,YAAY,CAAC,IAAI,EAAE,OAAO,GAAG,EAAE,EAAE;AACrC,QAAQ,IAAI,OAAO,GAAG,EAAE,CAAC;AACzB,QAAQ,IAAI,OAAO,CAAC,EAAE,EAAE;AACxB,YAAY,IAAI,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC;AAC5C,YAAY,OAAO,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC7C,SAAS;AACT,QAAQ,IAAI,OAAO,CAAC,KAAK,EAAE;AAC3B,YAAY,OAAO,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACnD,SAAS;AACT,QAAQ,IAAI,IAAI,CAAC,iBAAiB,CAAC,EAAE;AACrC,YAAY,OAAO,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7D,SAAS;AACT,QAAQ,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACnF,QAAQ,OAAO,IAAI,IAAI,CAAC;AACxB,QAAQ,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACvC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,SAAS,EAAE;AAC1C,QAAQ,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AAC5E,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,GAAG,SAAS,EAAE;AACtD,QAAQ,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACnF,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,WAAW,GAAG,KAAK,EAAE;AAC/B,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM;AAC7D,YAAY,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;AACjC,YAAY,IAAI,IAAI,CAAC,WAAW,EAAE;AAClC,gBAAgB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;AAC1D,oBAAoB,WAAW,IAAI,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACvE,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC3D,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC,CAAC;AACX,KAAK;AACL,CAAC;AACD,YAAY,CAAC,aAAa,CAAC,CAAC;AAC5B,eAAe,sBAAsB,CAAC,QAAQ,EAAE,QAAQ,EAAE;AAC1D,IAAI,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;AAC7C,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;AACpB,IAAI,IAAI;AACR,QAAQ,OAAO,IAAI,EAAE;AACrB,YAAY,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACxD,YAAY,IAAI,IAAI,EAAE;AACtB,gBAAgB,QAAQ,CAAC,KAAK,EAAE,CAAC;AACjC,gBAAgB,MAAM;AACtB,aAAa;AACb,YAAY,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC5C,YAAY,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AACzD,YAAY,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AACrC,gBAAgB,SAAS;AACzB,aAAa;AACb,iBAAiB;AACjB,gBAAgB,MAAM,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;AACtC,aAAa;AACb,YAAY,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AACxC,gBAAgB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AACrD,gBAAgB,IAAI,IAAI,GAAG,EAAE,CAAC;AAC9B,gBAAgB,IAAI,IAAI,GAAG,SAAS,CAAC;AACrC,gBAAgB,IAAI,SAAS,GAAG,KAAK,CAAC;AACtC,gBAAgB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAC1C,oBAAoB,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,IAAI,KAAK,MAAM,EAAE;AACrE,wBAAwB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAClD,wBAAwB,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC9C,4BAA4B,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACnD,yBAAyB;AACzB,wBAAwB,IAAI,IAAI,EAAE;AAClC,4BAA4B,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC;AACjD,yBAAyB;AACzB,6BAA6B;AAC7B,4BAA4B,IAAI,GAAG,KAAK,CAAC;AACzC,yBAAyB;AACzB,wBAAwB,SAAS,GAAG,IAAI,CAAC;AACzC,qBAAqB;AACrB,yBAAyB,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,OAAO,EAAE;AAC5E,wBAAwB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACpD,wBAAwB,SAAS,GAAG,IAAI,CAAC;AACzC,qBAAqB;AACrB,yBAAyB,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE;AACtE,wBAAwB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AAC5D,wBAAwB,SAAS,GAAG,IAAI,CAAC;AACzC,qBAAqB;AACrB,yBAAyB,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;AACxD,wBAAwB,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AACpE,wBAAwB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE;AACvD,4BAA4B,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnD,4BAA4B,SAAS,GAAG,IAAI,CAAC;AAC7C,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,gBAAgB,IAAI,SAAS,EAAE;AAC/B,oBAAoB,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,IAAI,SAAS,CAAC,CAAC;AAC7D,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL,IAAI,OAAO,KAAK,EAAE;AAClB,QAAQ,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChC,KAAK;AACL,CAAC;AACD;AACA;AACA;AACY,MAAC,GAAG,GAAG,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,SAAS,WAAW,CAAC;AAC7C,IAAI,IAAI,GAAG,GAAG;AACd,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,OAAO,CAAC,EAAE,GAAG,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AACnF,KAAK;AACL,IAAI,IAAI,eAAe,GAAG;AAC1B,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,OAAO,CAAC,EAAE,GAAG,WAAW,CAAC,IAAI,EAAE,iBAAiB,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;AAClG,KAAK;AACL,IAAI,IAAI,UAAU,GAAG;AACrB,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,OAAO,CAAC,EAAE,GAAG,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;AACvG,KAAK;AACL,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;AAC1E,KAAK;AACL,IAAI,IAAI,MAAM,CAAC,KAAK,EAAE;AACtB,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;AAC9B,KAAK;AACL,IAAI,IAAI,SAAS,GAAG;AACpB,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;AAC7E,KAAK;AACL,IAAI,IAAI,SAAS,CAAC,KAAK,EAAE;AACzB,QAAQ,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;AACjC,KAAK;AACL,IAAI,IAAI,OAAO,GAAG;AAClB,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;AAC3E,KAAK;AACL,IAAI,IAAI,OAAO,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;AAC/B,KAAK;AACL,IAAI,WAAW,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE,EAAE;AACnC,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,eAAe,EAAE,CAAC;AACzC,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;AACxB,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;AACtB,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACrB,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACrB,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;AACxB,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;AACxB,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;AACxB,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;AACxB,QAAQ,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;AACjD,QAAQ,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;AACrC,QAAQ,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;AACzC,QAAQ,GAAG,GAAG,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,KAAK,QAAQ,GAAG,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC,IAAI,CAAC;AAC/H,QAAQ,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;AACtC,QAAQ,WAAW,CAAC,IAAI,EAAE,iBAAiB,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC,eAAe,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC;AACpH,QAAQ,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AACzD,QAAQ,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC;AAChE,QAAQ,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;AACpD,QAAQ,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;AACxD,QAAQ,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACxC,KAAK;AACL,IAAI,MAAM,OAAO,GAAG;AACpB,QAAQ,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACnC,QAAQ,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,MAAM,EAAE;AAC7C,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AACzD,QAAQ,MAAM,OAAO,GAAG;AACxB,YAAY,QAAQ,EAAE,mBAAmB;AACzC,SAAS,CAAC;AACV,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;AAChC,YAAY,OAAO,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;AAC1D,SAAS;AACT,QAAQ,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE;AAC/C,YAAY,OAAO;AACnB,YAAY,WAAW,EAAE,IAAI,CAAC,eAAe,GAAG,SAAS,GAAG,aAAa;AACzE,YAAY,KAAK,EAAE,UAAU;AAC7B,YAAY,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM;AAC5C,SAAS,CAAC,CAAC;AACX,QAAQ,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,MAAME,YAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC7D,QAAQ,IAAI,GAAG,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,MAAM,OAAO,EAAE;AACrF,YAAY,MAAMC,OAAK,GAAGC,sBAAgB,CAAC,OAAO,EAAE;AACpD,gBAAgB,KAAK,EAAE,GAAG,IAAI,IAAI,KAAK,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACxE,aAAa,CAAC,CAAC;AACf,YAAY,IAAI,CAAC,aAAa,CAACD,OAAK,CAAC,CAAC;AACtC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAEA,OAAK,CAAC,CAAC;AAC1F,YAAY,IAAI,CAAC,YAAY,EAAE,CAAC;AAChC,YAAY,OAAO;AACnB,SAAS;AACT,aAAa,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;AACrC,YAAY,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACzD,YAAY,OAAO;AACnB,SAAS;AACT,aAAa,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;AACrC,YAAY,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACzD,YAAY,MAAMA,OAAK,GAAGC,sBAAgB,CAAC,OAAO,EAAE;AACpD,gBAAgB,KAAK,EAAE,IAAI,SAAS,CAAC,CAAC,iCAAiC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACvF,aAAa,CAAC,CAAC;AACf,YAAY,IAAI,CAAC,aAAa,CAACD,OAAK,CAAC,CAAC;AACtC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAEA,OAAK,CAAC,CAAC;AAC1F,YAAY,OAAO;AACnB,SAAS;AACT,aAAa,IAAI,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,EAAE;AACpI,YAAY,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACzD,YAAY,MAAMA,OAAK,GAAGC,sBAAgB,CAAC,OAAO,EAAE;AACpD,gBAAgB,KAAK,EAAE,IAAI,SAAS,CAAC,sCAAsC,CAAC;AAC5E,aAAa,CAAC,CAAC;AACf,YAAY,IAAI,CAAC,aAAa,CAACD,OAAK,CAAC,CAAC;AACtC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAEA,OAAK,CAAC,CAAC;AAC1F,YAAY,OAAO;AACnB,SAAS;AACT,aAAa,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;AAC5B,YAAY,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACzD,YAAY,MAAMA,OAAK,GAAGC,sBAAgB,CAAC,OAAO,EAAE;AACpD,gBAAgB,KAAK,EAAE,IAAI,SAAS,CAAC,oCAAoC,CAAC;AAC1E,aAAa,CAAC,CAAC;AACf,YAAY,IAAI,CAAC,aAAa,CAACD,OAAK,CAAC,CAAC;AACtC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAEA,OAAK,CAAC,CAAC;AAC1F,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACnD,QAAQ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACzB,QAAQ,MAAMA,OAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;AACxC,QAAQ,IAAI,CAAC,aAAa,CAACA,OAAK,CAAC,CAAC;AAClC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAEA,OAAK,CAAC,CAAC;AACrF,QAAQ,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;AAC3D,QAAQ,MAAM,sBAAsB,CAAC,GAAG,EAAE;AAC1C,YAAY,IAAI,EAAE,CAAC,EAAE,KAAK;AAC1B,gBAAgB,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;AACxC,aAAa;AACb,YAAY,OAAO,EAAE,CAAC,IAAI,KAAK;AAC/B,gBAAgB,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;AAC/C,aAAa;AACb,YAAY,MAAM,EAAE,CAAC,IAAI,EAAE,KAAK,KAAK;AACrC,gBAAgB,IAAI,EAAE,CAAC;AACvB,gBAAgB,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE;AACvD,oBAAoB,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC;AACnD,oBAAoB,IAAI;AACxB,oBAAoB,MAAM;AAC1B,iBAAiB,CAAC,CAAC;AACnB,gBAAgB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC3C,gBAAgB,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACjG,aAAa;AACb,YAAY,OAAO,EAAE,CAAC,KAAK,KAAK;AAChC,gBAAgB,IAAI,EAAE,CAAC;AACvB,gBAAgB,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,MAAM,EAAE;AACrD,oBAAoB,MAAMA,OAAK,GAAGC,sBAAgB,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;AACvE,oBAAoB,IAAI,CAAC,aAAa,CAACD,OAAK,CAAC,CAAC;AAC9C,oBAAoB,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAEA,OAAK,CAAC,CAAC;AAClG,oBAAoB,IAAI,CAAC,YAAY,EAAE,CAAC;AACxC,iBAAiB;AACjB,aAAa;AACb,YAAY,KAAK,EAAE,MAAM;AACzB,gBAAgB,IAAI,EAAE,CAAC;AACvB,gBAAgB,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,MAAM,EAAE;AACrD,oBAAoB,MAAMA,OAAK,GAAGC,sBAAgB,CAAC,OAAO,EAAE;AAC5D,wBAAwB,KAAK,EAAE,IAAI,KAAK,CAAC,gCAAgC,CAAC;AAC1E,qBAAqB,CAAC,CAAC;AACvB,oBAAoB,IAAI,CAAC,aAAa,CAACD,OAAK,CAAC,CAAC;AAC9C,oBAAoB,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAEA,OAAK,CAAC,CAAC;AAClG,oBAAoB,IAAI,CAAC,YAAY,EAAE,CAAC;AACxC,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IAAI,YAAY,GAAG;AACnB,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;AAC1B,YAAY,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACvC,YAAY,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;AAChC,SAAS;AACT,QAAQ,IAAI,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC,MAAM;AACxC,YAAY,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5C,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACxF,KAAK;AACL;AACA;AACA;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;AAC1B,YAAY,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACvC,YAAY,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;AAChC,SAAS;AACT,QAAQ,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACrD,QAAQ,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,CAAC;AAClC,KAAK;AACL,IAAI,gBAAgB,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,GAAG,SAAS,EAAE;AAC3D,QAAQ,OAAO,KAAK,CAAC,gBAAgB,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AAChE,KAAK;AACL,IAAI,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,GAAG,SAAS,EAAE;AAC7D,QAAQ,OAAO,KAAK,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AAClE,KAAK;AACL,IAAI,EAAE,EAAE,GAAG,WAAW,EAAE,EAAE,GAAG,QAAQ,EAAE,EAAE,GAAG,YAAY,EAAE,EAAE,GAAG,iBAAiB,EAAE,EAAE,GAAG,MAAM,EAAE,EAAE,GAAG,MAAM,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,GAAG,UAAU,EAAE,EAAE,GAAG,QAAQ,EAAEE,qBAAa,EAAE,GAAG;AAC5K,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC;AAC3B,QAAQ,IAAIC,UAAM,EAAE;AACpB,YAAY,OAAO,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC;AACjD,gBAAgB,UAAU,EAAE,KAAK,CAAC,UAAU;AAC5C,gBAAgB,GAAG,EAAE,KAAK,CAAC,GAAG;AAC9B,gBAAgB,eAAe,EAAE,KAAK,CAAC,eAAe;AACtD,gBAAgB,MAAM,EAAE,KAAK,CAAC,MAAM;AACpC,gBAAgB,SAAS,EAAE,KAAK,CAAC,SAAS;AAC1C,gBAAgB,OAAO,EAAE,KAAK,CAAC,OAAO;AACtC,aAAa,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AACjC,SAAS;AACT,aAAa;AACb,YAAY,OAAO,IAAI,MAAM,WAAW,CAAC;AACzC,gBAAgB,WAAW,GAAG;AAC9B,oBAAoB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;AACvD,oBAAoB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;AACzC,oBAAoB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;AACjE,oBAAoB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;AAC/C,oBAAoB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;AACrD,oBAAoB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AACjD,iBAAiB;AACjB,aAAa,CAAC;AACd,SAAS;AACT,KAAK;AACL,CAAC;AACD,WAAW,CAAC,UAAU,GAAG,CAAC,CAAC;AAC3B,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;AACrB,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;AACvB,YAAY,CAAC,WAAW,CAAC,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,SAAS,WAAW,CAAC;AAC/C,IAAI,WAAW,CAAC,QAAQ,EAAE;AAC1B,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;AACtB,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACrB,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;AACzB,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;AAC5B,YAAY,MAAM,IAAI,SAAS,CAAC,oCAAoC,CAAC,CAAC;AACtE,SAAS;AACT,aAAa,IAAI,QAAQ,CAAC,QAAQ,EAAE;AACpC,YAAY,MAAM,IAAI,SAAS,CAAC,0CAA0C,CAAC,CAAC;AAC5E,SAAS;AACT,aAAa,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;AACvC,YAAY,MAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC,CAAC;AAChE,SAAS;AACT,aAAa,IAAI,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,EAAE;AACzI,YAAY,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;AACxE,SAAS;AACT,QAAQ,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC;AACxE,QAAQ,sBAAsB,CAAC,QAAQ,EAAE;AACzC,YAAY,IAAI,EAAE,CAAC,EAAE,KAAK;AAC1B,gBAAgB,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;AACxC,aAAa;AACb,YAAY,OAAO,EAAE,CAAC,IAAI,KAAK;AAC/B,gBAAgB,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;AAC/C,aAAa;AACb,YAAY,MAAM,EAAE,CAAC,IAAI,EAAE,KAAK,KAAK;AACrC,gBAAgB,IAAI,CAAC,aAAa,CAAC,IAAI,YAAY,CAAC,KAAK,EAAE;AAC3D,oBAAoB,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC;AACnD,oBAAoB,IAAI;AACxB,oBAAoB,MAAM;AAC1B,iBAAiB,CAAC,CAAC,CAAC;AACpB,aAAa;AACb,YAAY,OAAO,EAAE,CAAC,KAAK,KAAK;AAChC,gBAAgB,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;AACrC,gBAAgB,IAAI,CAAC,aAAa,CAACF,sBAAgB,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACzE,gBAAgB,IAAI,CAAC,aAAa,CAACJ,sBAAgB,CAAC,OAAO,EAAE;AAC7D,oBAAoB,MAAM,EAAE,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;AAClF,oBAAoB,QAAQ,EAAE,KAAK;AACnC,iBAAiB,CAAC,CAAC,CAAC;AACpB,aAAa;AACb,YAAY,KAAK,EAAE,MAAM;AACzB,gBAAgB,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;AACrC,gBAAgB,IAAI,CAAC,aAAa,CAACA,sBAAgB,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAClF,aAAa;AACb,SAAS,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5B,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG;AACtB,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC;AAClC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,OAAO,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACvC,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC;AAC7B,KAAK;AACL,IAAI,gBAAgB,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,GAAG,SAAS,EAAE;AAC3D,QAAQ,OAAO,KAAK,CAAC,gBAAgB,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AAChE,KAAK;AACL,IAAI,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,GAAG,SAAS,EAAE;AAC7D,QAAQ,OAAO,KAAK,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AAClE,KAAK;AACL,CAAC;AACD,EAAE,GAAG,YAAY,EAAE,EAAE,GAAG,iBAAiB,EAAE,EAAE,GAAG,OAAO,CAAC;AACxD,YAAY,CAAC,aAAa,CAAC,CAAC;AAC5B;AACA;AACA;AACY,MAAC,WAAW,GAAG;;;;;;;;"}
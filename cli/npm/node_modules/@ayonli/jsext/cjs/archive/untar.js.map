{"version":3,"file":"untar.js","sources":["../../archive/untar.ts"],"sourcesContent":["import { concat as concatBytes } from \"../bytes.ts\";\nimport { isDeno, isNodeLike } from \"../env.ts\";\nimport { createProgressEvent } from \"../event.ts\";\nimport { chmod, createReadableStream, createWritableStream, ensureDir, stat, utimes } from \"../fs.ts\";\nimport { makeTree } from \"../fs/util.ts\";\nimport { basename, dirname, join, resolve } from \"../path.ts\";\nimport { platform } from \"../runtime.ts\";\nimport Tarball, { HEADER_LENGTH, createEntry, parseHeader } from \"./Tarball.ts\";\n;\nexport default async function untar(src, dest = {}, options = {}) {\n    var _a;\n    let _dest = undefined;\n    if (typeof dest === \"string\") {\n        _dest = options.root ? dest : resolve(dest);\n    }\n    else if (typeof dest === \"object\") {\n        if (typeof FileSystemDirectoryHandle === \"function\" &&\n            dest instanceof FileSystemDirectoryHandle) {\n            _dest = dest;\n        }\n        else {\n            options = dest;\n        }\n    }\n    src = typeof src === \"string\" && options.root ? resolve(src) : src;\n    let input = src instanceof ReadableStream ? src : createReadableStream(src, options);\n    if (options.gzip) {\n        const gzip = new DecompressionStream(\"gzip\");\n        input = input.pipeThrough(gzip);\n    }\n    const { signal } = options;\n    signal === null || signal === void 0 ? void 0 : signal.addEventListener(\"abort\", () => {\n        input.cancel(signal.reason);\n    });\n    if (!_dest) {\n        return await Tarball.load(input);\n    }\n    else if (typeof _dest === \"string\") {\n        await ensureDir(_dest, options);\n    }\n    let totalWrittenBytes = 0;\n    let totalBytes = (_a = options.size) !== null && _a !== void 0 ? _a : 0;\n    if (!totalBytes && options.onProgress) {\n        if (typeof src === \"string\") {\n            const info = await stat(src, options);\n            totalBytes = info.size;\n        }\n        else if (typeof FileSystemFileHandle === \"function\"\n            && src instanceof FileSystemFileHandle) {\n            const info = await src.getFile();\n            totalBytes = info.size;\n        }\n    }\n    const entries = [];\n    const reader = input.getReader();\n    let lastChunk = new Uint8Array(0);\n    let entry = null;\n    let writer = null;\n    let writtenBytes = 0;\n    let paddingSize = 0;\n    try {\n        outer: while (true) {\n            const { done, value } = await reader.read();\n            if (done) {\n                break;\n            }\n            lastChunk = lastChunk.byteLength ? concatBytes(lastChunk, value) : value;\n            while (true) {\n                if (paddingSize > 0 && lastChunk.byteLength >= paddingSize) {\n                    lastChunk = lastChunk.subarray(paddingSize);\n                    paddingSize = 0;\n                }\n                if (!entry) {\n                    if (lastChunk.byteLength >= HEADER_LENGTH) {\n                        const _header = parseHeader(lastChunk);\n                        if (_header) {\n                            lastChunk = _header[2];\n                            entry = createEntry(_header[0]);\n                            entries.push(entry);\n                        }\n                        else {\n                            lastChunk = new Uint8Array(0);\n                            break outer;\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n                const fileSize = entry.size;\n                let filename = undefined;\n                if (writer) {\n                    const chunk = lastChunk.subarray(0, fileSize - writtenBytes);\n                    await writer.write(chunk);\n                    lastChunk = lastChunk.subarray(fileSize - writtenBytes);\n                    writtenBytes += chunk.byteLength;\n                    if (chunk.byteLength) {\n                        totalWrittenBytes += chunk.byteLength;\n                        if (options.onProgress) {\n                            options.onProgress(createProgressEvent(\"progress\", {\n                                lengthComputable: !!totalBytes,\n                                loaded: totalWrittenBytes,\n                                total: totalBytes\n                            }));\n                        }\n                    }\n                }\n                else if (entry.kind === \"directory\") {\n                    if (typeof FileSystemDirectoryHandle === \"function\" &&\n                        _dest instanceof FileSystemDirectoryHandle) {\n                        await ensureDir(entry.relativePath, { ...options, root: _dest });\n                    }\n                    else {\n                        filename = join(_dest, entry.relativePath);\n                        await ensureDir(filename, options);\n                    }\n                }\n                else {\n                    let _options = options;\n                    if (typeof FileSystemDirectoryHandle === \"function\" &&\n                        _dest instanceof FileSystemDirectoryHandle) {\n                        _options = { ...options, root: _dest };\n                        filename = entry.relativePath;\n                    }\n                    else {\n                        filename = join(_dest, entry.relativePath);\n                    }\n                    const dir = dirname(filename);\n                    if (dir && dir !== \".\" && dir !== \"/\") {\n                        await ensureDir(dir, _options);\n                    }\n                    const output = createWritableStream(filename, _options);\n                    writer = output.getWriter();\n                    continue;\n                }\n                if (writtenBytes === fileSize) {\n                    paddingSize = HEADER_LENGTH - (fileSize % HEADER_LENGTH || HEADER_LENGTH);\n                    writtenBytes = 0;\n                    writer === null || writer === void 0 ? void 0 : writer.close();\n                    writer = null;\n                    entry = null;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        if (lastChunk.byteLength) {\n            throw new Error(\"The archive is corrupted\");\n        }\n        else if (totalBytes && totalWrittenBytes < totalBytes && options.onProgress) {\n            totalWrittenBytes = totalBytes;\n            options.onProgress(createProgressEvent(\"progress\", {\n                lengthComputable: true,\n                loaded: totalWrittenBytes,\n                total: totalBytes,\n            }));\n        }\n    }\n    finally {\n        reader.releaseLock();\n    }\n    if ((isDeno || isNodeLike) && typeof _dest === \"string\") {\n        const isWindows = platform() === \"windows\";\n        const tree = makeTree(basename(_dest), entries);\n        await (async function restoreStats(nodes) {\n            var _a;\n            for (const entry of nodes) {\n                const filename = join(_dest, entry.relativePath);\n                if (entry.kind === \"directory\" && ((_a = entry.children) === null || _a === void 0 ? void 0 : _a.length)) {\n                    // must restore contents' stats before the directory itself\n                    await restoreStats(entry.children);\n                }\n                // Only restore the permission mode and the last modified time,\n                // don't restore the owner and group, because they may not exist\n                // and may cause an error.\n                //\n                // This behavior is consistent with `tar -xf archive.tar` in\n                // Unix-like systems.\n                if (entry.mode && !isWindows) {\n                    await chmod(filename, entry.mode);\n                }\n                if (entry.mtime) {\n                    await utimes(filename, new Date(), entry.mtime);\n                }\n            }\n        })(tree.children);\n    }\n}\n//# sourceMappingURL=untar.js.map"],"names":["resolve","createReadableStream","Tarball","ensureDir","stat","concatBytes","HEADER_LENGTH","parseHeader","createEntry","createProgressEvent","join","dirname","createWritableStream","isDeno","isNodeLike","platform","makeTree","basename","chmod","utimes"],"mappings":"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"}
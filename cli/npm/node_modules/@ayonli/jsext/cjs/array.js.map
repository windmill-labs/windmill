{"version":3,"file":"array.js","sources":["../array.ts"],"sourcesContent":["/**\n * Functions for dealing with arrays.\n * @module\n */\nimport { isSubclassOf } from \"./class.ts\";\nimport { random as rand } from \"./number.ts\";\nimport { count as _count, equals as _equals, includeSlice as _includesSlice, startsWith as _startsWith, endsWith as _endsWith, split as _split, chunk as _chunk, } from \"./array/base.ts\";\n/**\n * Returns the first element of the array, or `undefined` if the array is empty.\n * This function is equivalent to `arr[0]` or `arr.at(0)`.\n */\nexport function first(arr) {\n    return arr[0];\n}\n/**\n * Returns the last element of the array, or `undefined` if the array is empty.\n * This function is equivalent to `arr[arr.length - 1]` or `arr.at(-1)`.\n */\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\n/**\n * Returns a random element of the array, or `undefined` if the array is empty.\n * @param remove If `true`, the element will be removed from the array.\n *\n * @example\n * ```ts\n * import { random } from \"@ayonli/jsext/array\";\n *\n * const arr = [1, 2, 3, 4, 5];\n *\n * console.log(random(arr)); // 3 for example\n *\n * console.log(random(arr, true)); // 3 for example\n * console.log(arr); // [1, 2, 4, 5]\n * ```\n */\nexport function random(arr, remove = false) {\n    if (!arr.length) {\n        return undefined;\n    }\n    else if (arr.length === 1) {\n        if (remove) {\n            return arr.splice(0, 1)[0];\n        }\n        else {\n            return arr[0];\n        }\n    }\n    const i = rand(0, arr.length - 1);\n    if (remove) {\n        return arr.splice(i, 1)[0];\n    }\n    else {\n        return arr[i];\n    }\n}\n/**\n * Counts the occurrence of the element in the array.\n *\n * @example\n * ```ts\n * import { count } from \"@ayonli/jsext/array\";\n *\n * const arr = [1, 2, 3, 4, 5, 2, 3, 4, 2];\n *\n * console.log(count(arr, 2)); // 3\n * console.log(count(arr, 6)); // 0\n * ```\n */\nexport function count(arr, item) {\n    return _count(arr, item);\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array.\n *\n * @example\n * ```ts\n * import { equals } from \"@ayonli/jsext/array\";\n *\n * const arr1 = [1, 2, 3, 4, 5];\n * const arr2 = [{ foo: \"bar\" }];\n *\n * console.log(equals(arr1, [1, 2, 3, 4, 5])); // true\n * console.log(equals(arr2, [{ foo: \"bar\" }])); // false, object refs are different\n * ```\n */\nexport function equals(arr1, arr2) {\n    return _equals(arr1, arr2);\n}\n/**\n * Checks if the array contains another array as a slice of its contents.\n *\n * @example\n * ```ts\n * import { includesSlice } from \"@ayonli/jsext/array\";\n *\n * const arr = [1, 2, 3, 4, 5];\n *\n * console.log(includesSlice(arr, [2, 3, 4])); // true\n * console.log(includesSlice(arr, [2, 4, 3])); // false\n * ```\n */\nexport function includesSlice(arr, slice) {\n    return _includesSlice(arr, slice);\n}\n/**\n * Checks if the array starts with the given prefix.\n *\n * @example\n * ```ts\n * import { startsWith } from \"@ayonli/jsext/array\";\n *\n * const arr = [1, 2, 3, 4, 5];\n *\n * console.log(startsWith(arr, [1, 2])); // true\n * console.log(startsWith(arr, [2, 1])); // false\n * ```\n */\nexport function startsWith(arr, prefix) {\n    return _startsWith(arr, prefix);\n}\n/**\n * Checks if the array ends with the given suffix.\n *\n * @example\n * ```ts\n * import { endsWith } from \"@ayonli/jsext/array\";\n *\n * const arr = [1, 2, 3, 4, 5];\n *\n * console.log(endsWith(arr, [4, 5])); // true\n * console.log(endsWith(arr, [5, 4])); // false\n * ```\n */\nexport function endsWith(arr, suffix) {\n    return _endsWith(arr, suffix);\n}\n/**\n * Breaks the array into smaller chunks according to the given delimiter.\n *\n * @example\n * ```ts\n * import { split } from \"@ayonli/jsext/array\";\n *\n * const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n *\n * console.log(split(arr, 5)); // [[1, 2, 3, 4], [6, 7, 8, 9]]\n * ```\n */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/**\n * Breaks the array into smaller chunks according to the given length.\n *\n * @example\n * ```ts\n * import { chunk } from \"@ayonli/jsext/array\";\n *\n * const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n *\n * console.log(chunk(arr, 5)); // [[1, 2, 3, 4, 5], [6, 7, 8, 9]]\n * ```\n */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n/**\n * Returns a subset of the array that contains only unique items.\n *\n * @example\n * ```ts\n * import { unique } from \"@ayonli/jsext/array\";\n *\n * const arr = [1, 2, 3, 4, 5, 2, 3, 4, 2];\n *\n * console.log(unique(arr)); // [1, 2, 3, 4, 5]\n * ```\n */\nexport function unique(arr) {\n    return [...new Set(arr)];\n}\n/**\n * @deprecated use `unique` instead.\n */\nexport const uniq = unique;\n/**\n * Returns a subset of the array that contains only unique items filtered by the\n * given callback function.\n *\n * @example\n * ```ts\n * import { uniqueBy } from \"@ayonli/jsext/array\";\n *\n * const arr = [\n *     { id: 1, name: \"foo\" },\n *     { id: 2, name: \"bar\" },\n *     { id: 3, name: \"foo\" },\n *     { id: 4, name: \"baz\" },\n *     { id: 5, name: \"bar\" },\n * ];\n *\n * console.log(uniqueBy(arr, item => item.name));\n * // [\n * //     { id: 1, name: \"foo\" },\n * //     { id: 2, name: \"bar\" },\n * //     { id: 4, name: \"baz\" }\n * // ]\n * ```\n */\nexport function uniqueBy(arr, fn) {\n    const map = new Map();\n    for (let i = 0; i < arr.length; i++) {\n        const item = arr[i];\n        const key = fn(item, i);\n        map.has(key) || map.set(key, item);\n    }\n    return [...map.values()];\n}\n/**\n * @deprecated use `uniqueBy` instead.\n */\nexport const uniqBy = uniqueBy;\n/**\n * Reorganizes the elements in the array in random order.\n *\n * This function mutates the array.\n *\n * @example\n * ```ts\n * import { shuffle } from \"@ayonli/jsext/array\";\n *\n * const arr = [1, 2, 3, 4, 5];\n *\n * console.log(shuffle(arr)); // [3, 1, 5, 2, 4] for example\n * console.log(arr); // [3, 1, 5, 2, 4]\n * ```\n */\nexport function shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\nexport function orderBy(arr, key, order = \"asc\") {\n    const items = arr.slice();\n    if (typeof key === \"function\") {\n        return orderBy(items.map((item, i) => ({\n            key: key(item, i),\n            value: item,\n        })), \"key\", order).map(({ value }) => value);\n    }\n    items.sort((a, b) => {\n        if (typeof a !== \"object\" || typeof b !== \"object\" ||\n            !a || !b ||\n            Array.isArray(a) || Array.isArray(b)) {\n            return -1;\n        }\n        const _a = a[key];\n        const _b = b[key];\n        if (_a === undefined || _b === undefined) {\n            return -1;\n        }\n        if (typeof _a === \"number\" && typeof _b === \"number\") {\n            return _a - _b;\n        }\n        else if ((typeof _a === \"string\" && typeof _b === \"string\")\n            || (typeof _a === \"bigint\" && typeof _b === \"bigint\")) {\n            if (_a < _b) {\n                return -1;\n            }\n            else if (_a > _b) {\n                return 1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            return -1;\n        }\n    });\n    if (order === \"desc\") {\n        items.reverse();\n    }\n    return items;\n}\n;\nexport function groupBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const groups = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups.get(key);\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    else {\n        const groups = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups[key];\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups[key] = [item];\n            }\n        }\n        return groups;\n    }\n}\n;\nexport function keyBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const map = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            map.set(key, item);\n        }\n        return map;\n    }\n    else {\n        const record = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            record[key] = item;\n        }\n        return record;\n    }\n}\n/**\n * Returns a tuple of two arrays with the first one containing all elements in\n * the given array that match the given predicate and the second one containing\n * all that do not.\n *\n * @example\n * ```ts\n * import { partition } from \"@ayonli/jsext/array\";\n *\n * const arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n * const [even, odd] = partition(arr, item => item % 2 === 0);\n *\n * console.log(even); // [0, 2, 4, 6, 8]\n * console.log(odd); // [1, 3, 5, 7, 9]\n * ```\n */\nexport function partition(arr, predicate) {\n    const match = [];\n    const rest = [];\n    for (let i = 0; i < arr.length; i++) {\n        const item = arr[i];\n        (predicate(item, i) ? match : rest).push(item);\n    }\n    return [match, rest];\n}\n//# sourceMappingURL=array.js.map"],"names":["rand","_count","_equals","_includesSlice","_startsWith","_endsWith","_split","_chunk","isSubclassOf"],"mappings":"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"}
{"version":3,"file":"util.js","sources":["../../fs/util.ts"],"sourcesContent":["import { orderBy, startsWith } from \"../array.ts\";\nimport { getMIME } from \"../filetype.ts\";\nimport { omit } from \"../object.ts\";\nimport { basename, extname, split } from \"../path.ts\";\nexport function fixDirEntry(entry) {\n    Object.defineProperty(entry, \"path\", {\n        get() {\n            return entry.relativePath;\n        },\n    });\n    return entry;\n}\nexport function fixFileType(file) {\n    var _a;\n    if (!file.type) {\n        const ext = extname(file.name);\n        if (ext) {\n            Object.defineProperty(file, \"type\", {\n                value: (_a = getMIME(ext)) !== null && _a !== void 0 ? _a : \"\",\n                writable: false,\n                configurable: true,\n            });\n        }\n    }\n    return file;\n}\n/**\n * @param addPathProp `DirEntry.prop` is deprecated, this option is for backward\n * compatibility.\n */\nexport function makeTree(dir, entries, addPathProp = false) {\n    const list = entries.map(entry => ({\n        ...entry,\n        paths: split(entry.relativePath),\n    }));\n    const nodes = (function walk(list, store) {\n        // Order the entries first by kind, then by names alphabetically.\n        list = [\n            ...orderBy(list.filter(e => e.kind === \"directory\"), e => e.name, \"asc\"),\n            ...orderBy(list.filter(e => e.kind === \"file\"), e => e.name, \"asc\"),\n        ];\n        const nodes = [];\n        for (const entry of list) {\n            if (entry.kind === \"directory\") {\n                const paths = entry.paths;\n                const childEntries = store.filter(e => startsWith(e.paths, paths));\n                const directChildren = childEntries\n                    .filter(e => e.paths.length === paths.length + 1);\n                if (directChildren.length) {\n                    const indirectChildren = childEntries\n                        .filter(e => !directChildren.includes(e));\n                    const _entry = {\n                        ...omit(entry, [\"paths\"]),\n                        children: walk(directChildren, indirectChildren),\n                    };\n                    addPathProp && fixDirEntry(_entry);\n                    nodes.push(_entry);\n                }\n                else {\n                    let _entry = {\n                        ...omit(entry, [\"paths\"]),\n                        children: [],\n                    };\n                    addPathProp && fixDirEntry(_entry);\n                    nodes.push(_entry);\n                }\n            }\n            else {\n                const _entry = {\n                    ...omit(entry, [\"paths\"]),\n                };\n                addPathProp && fixDirEntry(_entry);\n                nodes.push(_entry);\n            }\n        }\n        return nodes;\n    })(list.filter(entry => entry.paths.length === 1), list.filter(entry => entry.paths.length > 1));\n    let rootName;\n    if (typeof dir === \"object\") {\n        rootName = dir.name || \"(root)\";\n    }\n    else if (dir) {\n        rootName = basename(dir);\n        if (!rootName || rootName === \".\") {\n            rootName = \"(root)\";\n        }\n    }\n    else {\n        rootName = \"(root)\";\n    }\n    const rooEntry = {\n        name: rootName,\n        kind: \"directory\",\n        relativePath: \"\",\n        children: nodes,\n    };\n    if (typeof dir === \"object\") {\n        rooEntry.handle = dir;\n    }\n    addPathProp && fixDirEntry(rooEntry);\n    return rooEntry;\n}\n//# sourceMappingURL=util.js.map"],"names":["extname","getMIME","split","orderBy","startsWith","omit","basename"],"mappings":"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"}
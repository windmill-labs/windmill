{"version":3,"file":"progress.js","sources":["../../../dialog/terminal/progress.ts"],"sourcesContent":["import bytes, { equals } from \"../../bytes.ts\";\nimport { ControlKeys, ControlSequences, getWindowSize, stringWidth, writeStdoutSync, } from \"../../cli.ts\";\nconst { CTRL_C, ESC, LF } = ControlKeys;\nconst { CLR } = ControlSequences;\nconst ongoingIndicators = [\n    \"      \",\n    \"=     \",\n    \"==    \",\n    \"===   \",\n    \" ===  \",\n    \"  === \",\n    \"   ===\",\n    \"    ==\",\n    \"     =\",\n    \"      \",\n];\nexport async function handleTerminalProgress(message, fn, options) {\n    const { signal, abort, listenForAbort } = options;\n    let lastMessage = message;\n    let lastPosition = 0;\n    let lastPercent = undefined;\n    const renderSimpleBar = (position = undefined) => {\n        position !== null && position !== void 0 ? position : (position = lastPosition++);\n        const ongoingIndicator = ongoingIndicators[position];\n        writeStdoutSync(CLR);\n        writeStdoutSync(bytes(`${lastMessage} [${ongoingIndicator}]`));\n        if (lastPosition === ongoingIndicators.length) {\n            lastPosition = 0;\n        }\n    };\n    const renderPercentageBar = (percent) => {\n        const { width } = getWindowSize();\n        const percentage = percent + \"%\";\n        const barWidth = width - stringWidth(lastMessage) - percentage.length - 5;\n        const filled = \"\".padStart(Math.floor(barWidth * percent / 100), \"#\");\n        const empty = \"\".padStart(barWidth - filled.length, \"-\");\n        writeStdoutSync(CLR);\n        writeStdoutSync(bytes(`${lastMessage} [${filled}${empty}] ${percentage}`));\n    };\n    renderSimpleBar();\n    const waitingTimer = setInterval(renderSimpleBar, 200);\n    const set = (state) => {\n        if (signal.aborted) {\n            return;\n        }\n        if (state.message) {\n            lastMessage = state.message;\n        }\n        if (state.percent !== undefined) {\n            lastPercent = state.percent;\n        }\n        if (lastPercent !== undefined) {\n            renderPercentageBar(lastPercent);\n            clearInterval(waitingTimer);\n        }\n        else if (state.message) {\n            renderSimpleBar(lastPosition);\n        }\n    };\n    const nodeReader = typeof Deno === \"object\" ? null : (buf) => {\n        if (equals(buf, ESC) || equals(buf, CTRL_C)) {\n            abort === null || abort === void 0 ? void 0 : abort();\n        }\n    };\n    const denoReader = typeof Deno === \"object\" ? Deno.stdin.readable.getReader() : null;\n    if (abort) {\n        if (nodeReader) {\n            process.stdin.on(\"data\", nodeReader);\n        }\n        else if (denoReader) {\n            (async () => {\n                while (true) {\n                    try {\n                        const { done, value } = await denoReader.read();\n                        if (done || equals(value, ESC) || equals(value, CTRL_C)) {\n                            signal.aborted || abort();\n                            break;\n                        }\n                    }\n                    catch (_a) {\n                        signal.aborted || abort();\n                        break;\n                    }\n                }\n                denoReader.releaseLock();\n            })();\n        }\n    }\n    let job = fn(set, signal);\n    if (listenForAbort) {\n        job = Promise.race([job, listenForAbort()]);\n    }\n    try {\n        return await job;\n    }\n    finally {\n        writeStdoutSync(LF);\n        clearInterval(waitingTimer);\n        if (nodeReader) {\n            process.stdin.off(\"data\", nodeReader);\n        }\n        else if (denoReader) {\n            denoReader.releaseLock();\n        }\n    }\n}\n//# sourceMappingURL=progress.js.map"],"names":["ControlKeys","ControlSequences","writeStdoutSync","bytes","getWindowSize","stringWidth","equals"],"mappings":"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"}
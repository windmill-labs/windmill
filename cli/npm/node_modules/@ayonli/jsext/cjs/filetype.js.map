{"version":3,"file":"filetype.js","sources":["../filetype.ts"],"sourcesContent":["/**\n * Functions to get file types in different fashions.\n * @module\n */\nimport { UTIMap } from \"./filetype/constants.ts\";\n/**\n * Returns the corresponding UTI (Uniform Type Identifier) for the given\n * type, where the type is a file extension or a MIME type name.\n *\n * @example\n * ```ts\n * import { getUTI } from \"@ayonli/jsext/filetype\";\n *\n * console.log(getUTI(\".png\")); // public.png\n * console.log(getUTI(\"image/png\")); // public.png\n * ```\n */\nexport function getUTI(type) {\n    type = type.toLowerCase();\n    if (type.startsWith(\"*.\")) {\n        type = type.slice(1);\n    }\n    if (!type) {\n        return undefined;\n    }\n    for (const [uti, values] of Object.entries(UTIMap)) {\n        if (values.includes(type)) {\n            return uti;\n        }\n    }\n    return undefined;\n}\n/**\n * Returns the corresponding MIME type for the given type, where the type is a\n * file extension or a UTI (Uniform Type Identifier) name.\n *\n * @example\n * ```ts\n * import { getMIME } from \"@ayonli/jsext/filetype\";\n *\n * console.log(getMIME(\".png\")); // image/png\n * console.log(getMIME(\"public.png\")); // image/png\n * ```\n */\nexport function getMIME(type) {\n    type = type.toLowerCase();\n    if (type.startsWith(\"*.\")) {\n        type = type.slice(1);\n    }\n    if (!type) {\n        return undefined;\n    }\n    else if (type[0] !== \".\") {\n        const values = UTIMap[type] || null;\n        return values ? values.find(v => v.includes(\"/\")) : undefined;\n    }\n    for (const values of Object.values(UTIMap)) {\n        if (values.includes(type)) {\n            const mime = values.find(v => v.includes(\"/\"));\n            if (mime) {\n                return mime;\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Returns the corresponding file extensions for the given type, where the type\n * is a MIME type or a UTI (Uniform Type Identifier) name.\n *\n * @example\n * ```ts\n * import { getExtensions } from \"@ayonli/jsext/filetype\";\n *\n * console.log(getExtensions(\"image/png\")); // [\".png\"]\n * console.log(getExtensions(\"public.png\")); // [\".png\"]\n * ```\n */\nexport function getExtensions(type) {\n    type = type.toLowerCase();\n    if (type.startsWith(\"*.\")) {\n        type = type.slice(1);\n    }\n    if (!type) {\n        return [];\n    }\n    else if (type[0] === \".\") {\n        return [type];\n    }\n    if (type[0] !== \".\" && !type.includes(\"/\")) {\n        const values = UTIMap[type] || null;\n        return values ? values.filter(v => v[0] === \".\") : [];\n    }\n    if (type.endsWith(\"/*\")) {\n        const _type = type.slice(0, -1);\n        return Object.values(UTIMap)\n            .filter(values => values.some(v => v !== type && v.startsWith(_type)))\n            .map(values => values.filter(v => v[0] === \".\"))\n            .flat();\n    }\n    for (const types of Object.values(UTIMap)) {\n        if (types.includes(type)) {\n            return types.filter(t => t.startsWith(\".\"));\n        }\n    }\n    return [];\n}\n//# sourceMappingURL=filetype.js.map"],"names":["UTIMap"],"mappings":"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"}
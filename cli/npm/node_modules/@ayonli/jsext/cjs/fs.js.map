{"version":3,"file":"fs.js","sources":["../fs.ts"],"sourcesContent":["/**\n * Universal file system APIs for both server and browser applications.\n *\n * This module is guaranteed to work in the following environments:\n *\n * - Node.js\n * - Deno\n * - Bun\n * - Modern browsers\n * - Cloudflare Workers (limited support and experimental)\n *\n * We can also use the {@link runtime} function to check whether the runtime\n * has file system support. When `runtime().fsSupport` is `true`, this module\n * should work properly.\n *\n * In most browsers, this module uses the\n * [Origin Private File System](https://developer.mozilla.org/en-US/docs/Web/API/File_System_API/Origin_private_file_system).\n * In Chromium browsers, this module can also access the device's local file\n * system via `window.showOpenFilePicker()` and `window.showDirectoryPicker()`.\n *\n * This module also provides limited support for Cloudflare Workers, however it\n * requires setting the `[site].bucket` option in the `wrangler.toml` file. Only\n * the reading functions are supported, such as {@link readFile} and\n * {@link readDir}, these functions allow us reading static files in the workers,\n * writing functions is not implemented at the moment. More details about\n * serving static assets in Cloudflare Workers can be found here:\n * [Add static assets to an existing Workers project](https://developers.cloudflare.com/workers/configuration/sites/start-from-worker/).\n *\n * **Errors:**\n *\n * When a file system operation fails, this module throws an {@link Exception}\n * with one of the following names:\n *\n * - `NotFoundError`: The file or directory does not exist.\n * - `NotAllowedError`: The operation is not allowed, such as being blocked by\n *   the permission system.\n * - `AlreadyExistsError`: The file or directory already exists.\n * - `IsDirectoryError`: The path is a directory, not a file.\n * - `NotDirectoryError`: The path is a file, not a directory.\n * - `InvalidOperationError`: The operation is not supported, such as trying to\n *   copy a directory without the `recursive` option.\n * - `BusyError`: The file is busy, such as being locked by another program.\n * - `InterruptedError`: The operation is interrupted by the underlying file\n *   system.\n * - `FileTooLargeError`: The file is too large, or the file system doesn't have\n *   enough space to store the new content.\n * - `FilesystemLoopError`:  Too many symbolic links were encountered when\n *   resolving the filename.\n *\n * Other errors may also be thrown by the runtime, such as `TypeError`.\n *\n * @experimental\n * @module\n */\nimport { abortable } from \"./async.ts\";\nimport bytes, { text } from \"./bytes.ts\";\nimport { isDeno, isNodeLike } from \"./env.ts\";\nimport { Exception } from \"./error.ts\";\nimport { getMIME } from \"./filetype.ts\";\nimport { fixDirEntry, fixFileType, makeTree } from \"./fs/util.ts\";\nimport { as } from \"./object.ts\";\nimport { basename, dirname, extname, join, split } from \"./path.ts\";\nimport { readAsArray, resolveByteStream, toAsyncIterable } from \"./reader.ts\";\nimport { platform } from \"./runtime.ts\";\nimport { stripStart } from \"./string.ts\";\nimport _try from \"./try.ts\";\n/**\n * Platform-specific end-of-line marker. The value is `\\r\\n` in Windows\n * server-side environments, and `\\n` elsewhere.\n */\nexport const EOL = (() => {\n    if (isDeno) {\n        return Deno.build.os === \"windows\" ? \"\\r\\n\" : \"\\n\";\n    }\n    else if (typeof process === \"object\" && typeof process.platform === \"string\") {\n        return process.platform === \"win32\" ? \"\\r\\n\" : \"\\n\";\n    }\n    else {\n        return \"\\n\";\n    }\n})();\nfunction getErrorName(err) {\n    if (err.constructor === Error) {\n        return err.constructor.name;\n    }\n    else {\n        return err.name;\n    }\n}\n/**\n * Wraps a raw file system error to a predefined error by this module.\n *\n * @param type Used for `FileSystemHandle` operations.\n */\nfunction wrapFsError(err, type = undefined) {\n    if (err instanceof Error && !(err instanceof Exception) && !(err instanceof TypeError)) {\n        const errName = getErrorName(err);\n        const errCode = err.code;\n        if (errName === \"NotFoundError\"\n            || errName === \"NotFound\"\n            || errCode === \"ENOENT\"\n            || errCode === \"ENOTFOUND\") {\n            return new Exception(err.message, { name: \"NotFoundError\", code: 404, cause: err });\n        }\n        else if (errName === \"NotAllowedError\"\n            || errName === \"PermissionDenied\"\n            || errName === \"InvalidStateError\"\n            || errName === \"SecurityError\"\n            || errName === \"EACCES\"\n            || errCode === \"EPERM\"\n            || errCode === \"ERR_ACCESS_DENIED\") {\n            return new Exception(err.message, { name: \"NotAllowedError\", code: 403, cause: err });\n        }\n        else if (errName === \"AlreadyExists\"\n            || errCode === \"EEXIST\"\n            || errCode === \"ERR_FS_CP_EEXIST\") {\n            return new Exception(err.message, { name: \"AlreadyExistsError\", code: 409, cause: err });\n        }\n        else if ((errName === \"TypeMismatchError\" && type === \"file\")\n            || errName === \"IsADirectory\"\n            || errCode === \"EISDIR\"\n            || errCode === \"ERR_FS_EISDIR\") {\n            return new Exception(err.message, { name: \"IsDirectoryError\", code: 415, cause: err });\n        }\n        else if ((errName === \"TypeMismatchError\" && type === \"directory\")\n            || errName === \"NotADirectory\"\n            || errCode === \"ENOTDIR\") {\n            return new Exception(err.message, { name: \"NotDirectoryError\", code: 415, cause: err });\n        }\n        else if (errName === \"InvalidModificationError\"\n            || errName === \"NotSupported\"\n            || errCode === \"ENOTEMPTY\"\n            || errCode === \"ERR_FS_CP_EINVAL\"\n            || errCode === \"ERR_FS_CP_FIFO_PIPE\"\n            || errCode === \"ERR_FS_CP_DIR_TO_NON_DIR\"\n            || errCode === \"ERR_FS_CP_NON_DIR_TO_DIR\"\n            || errCode === \"ERR_FS_CP_SOCKET\"\n            || errCode === \"ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY\"\n            || errCode === \"ERR_FS_CP_UNKNOWN\"\n            || errCode === \"ERR_FS_INVALID_SYMLINK_TYPE\") {\n            return new Exception(err.message, { name: \"InvalidOperationError\", code: 405, cause: err });\n        }\n        else if (errName === \"NoModificationAllowedError\"\n            || errName === \"Busy\"\n            || errName === \"TimedOut\"\n            || errCode === \"ERR_DIR_CONCURRENT_OPERATION\") {\n            return new Exception(errName, { name: \"BusyError\", code: 409, cause: err });\n        }\n        else if (errName === \"Interrupted\" || errCode === \"ERR_DIR_CLOSED\") {\n            return new Exception(err.message, { name: \"InterruptedError\", code: 409, cause: err });\n        }\n        else if (errName === \"QuotaExceededError\"\n            || errCode === \"ERR_FS_FILE_TOO_LARGE\") {\n            return new Exception(err.message, { name: \"FileTooLargeError\", code: 413, cause: err });\n        }\n        else if (errName === \"FilesystemLoop\") {\n            return new Exception(err.message, { name: \"FilesystemLoopError\", code: 508, cause: err });\n        }\n        else {\n            return err;\n        }\n    }\n    else if (err instanceof Error) {\n        return err;\n    }\n    else if (typeof err === \"string\") {\n        return new Exception(err, { code: 500, cause: err });\n    }\n    else {\n        return new Exception(\"Unknown error\", { code: 500, cause: err });\n    }\n}\n/**\n * Wraps a raw file system operation so that when any error occurs, the error is\n * wrapped to a predefined error by this module.\n *\n * @param type Only used for `FileSystemHandle` operations.\n */\nfunction rawOp(op, type = undefined) {\n    return op.catch((err) => {\n        throw wrapFsError(err, type);\n    });\n}\n/**\n * Obtains the directory handle of the given path.\n *\n * NOTE: This function is only available in the browser.\n *\n * NOTE: If the `path` is not provided or is empty, the root directory handle\n * will be returned.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { getDirHandle } from \"@ayonli/jsext/fs\";\n *\n * const dir = await getDirHandle(\"/path/to/dir\");\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { getDirHandle } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * const dir = await getDirHandle(\"/path/to/dir\", { root });\n * ```\n *\n * @example\n * ```ts\n * // create the directory if not exist\n * import { getDirHandle } from \"@ayonli/jsext/fs\";\n *\n * const dir = await getDirHandle(\"/path/to/dir\", { create: true, recursive: true });\n * ```\n *\n * @example\n * ```ts\n * // return the root directory handle\n * import { getDirHandle } from \"@ayonli/jsext/fs\";\n *\n * const root = await getDirHandle();\n * ```\n */\nexport async function getDirHandle(path = \"\", options = {}) {\n    var _a;\n    if (typeof location === \"object\" && typeof location.origin === \"string\") {\n        path = stripStart(path, location.origin);\n    }\n    const { create = false, recursive = false } = options;\n    const paths = split(stripStart(path, \"/\")).filter(p => p !== \".\");\n    const root = (_a = options.root) !== null && _a !== void 0 ? _a : await rawOp(navigator.storage.getDirectory(), \"directory\");\n    let dir = root;\n    for (let i = 0; i < paths.length; i++) {\n        const _path = paths[i];\n        dir = await rawOp(dir.getDirectoryHandle(_path, {\n            create: create && (recursive || (i === paths.length - 1)),\n        }), \"directory\");\n    }\n    return dir;\n}\n/**\n * Obtains the file handle of the given path.\n *\n * NOTE: This function is only available in the browser.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { getFileHandle } from \"@ayonli/jsext/fs\";\n *\n * const file = await getFileHandle(\"/path/to/file.txt\");\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { getFileHandle } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * const file = await getFileHandle(\"/path/to/file.txt\", { root });\n * ```\n *\n * @example\n * ```ts\n * // create the file if not exist\n * import { getFileHandle } from \"@ayonli/jsext/fs\";\n *\n * const file = await getFileHandle(\"/path/to/file.txt\", { create: true });\n * ```\n */\nexport async function getFileHandle(path, options = {}) {\n    var _a;\n    const dirPath = dirname(path);\n    const name = basename(path);\n    const dir = await getDirHandle(dirPath, { root: options.root });\n    return await rawOp(dir.getFileHandle(name, {\n        create: (_a = options.create) !== null && _a !== void 0 ? _a : false,\n    }), \"file\");\n}\n/**\n * Checks if the given path exists.\n *\n * This function may throw an error if the path is invalid or the operation is\n * not allowed.\n *\n * NOTE: This function can also be used in Cloudflare Workers.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { exists } from \"@ayonli/jsext/fs\";\n *\n * if (await exists(\"/path/to/file.txt\")) {\n *     console.log(\"The file exists.\");\n * } else {\n *     console.log(\"The file does not exist.\");\n * }\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { exists } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n *\n * if (await exists(\"/path/to/file.txt\", { root })) {\n *     console.log(\"The file exists.\");\n * } else {\n *     console.log(\"The file does not exist.\");\n * }\n * ```\n */\nexport async function exists(path, options = {}) {\n    try {\n        await stat(path, options);\n        return true;\n    }\n    catch (err) {\n        if (err instanceof Exception) {\n            if (err.name === \"NotFoundError\") {\n                return false;\n            }\n        }\n        throw err;\n    }\n}\n/**\n * Returns the information of the given file or directory.\n *\n * NOTE: This function can also be used in Cloudflare Workers.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { stat } from \"@ayonli/jsext/fs\";\n *\n * const info = await stat(\"/path/to/file.txt\");\n * console.log(`${info.name} is a ${info.kind}, its size is ${info.size} bytes, with MIME type ${info.type}.`);\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { stat } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * const info = await stat(\"/path/to/file.txt\", { root });\n * console.log(`${info.name} is a ${info.kind}, its size is ${info.size} bytes, with MIME type ${info.type}.`);\n * ```\n */\nexport async function stat(target, options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y;\n    if (typeof target === \"object\") {\n        if (target.kind === \"file\") {\n            const info = await rawOp(target.getFile(), \"file\");\n            return {\n                name: target.name,\n                kind: \"file\",\n                size: info.size,\n                type: (_b = (_a = info.type) !== null && _a !== void 0 ? _a : getMIME(extname(target.name))) !== null && _b !== void 0 ? _b : \"\",\n                mtime: new Date(info.lastModified),\n                atime: null,\n                birthtime: null,\n                mode: 0,\n                uid: 0,\n                gid: 0,\n                isBlockDevice: false,\n                isCharDevice: false,\n                isFIFO: false,\n                isSocket: false,\n            };\n        }\n        else {\n            return {\n                name: target.name,\n                kind: \"directory\",\n                size: 0,\n                type: \"\",\n                mtime: null,\n                atime: null,\n                birthtime: null,\n                mode: 0,\n                uid: 0,\n                gid: 0,\n                isBlockDevice: false,\n                isCharDevice: false,\n                isFIFO: false,\n                isSocket: false,\n            };\n        }\n    }\n    const path = target;\n    if (isDeno) {\n        const stat = await rawOp(options.followSymlink ? Deno.stat(path) : Deno.lstat(path));\n        const kind = stat.isDirectory\n            ? \"directory\"\n            : stat.isSymlink\n                ? \"symlink\"\n                : \"file\";\n        return {\n            name: basename(path),\n            kind,\n            size: stat.size,\n            type: kind === \"file\" ? ((_c = getMIME(extname(path))) !== null && _c !== void 0 ? _c : \"\") : \"\",\n            mtime: (_d = stat.mtime) !== null && _d !== void 0 ? _d : null,\n            atime: (_e = stat.atime) !== null && _e !== void 0 ? _e : null,\n            birthtime: (_f = stat.birthtime) !== null && _f !== void 0 ? _f : null,\n            mode: (_g = stat.mode) !== null && _g !== void 0 ? _g : 0,\n            uid: (_h = stat.uid) !== null && _h !== void 0 ? _h : 0,\n            gid: (_j = stat.gid) !== null && _j !== void 0 ? _j : 0,\n            isBlockDevice: (_k = stat.isBlockDevice) !== null && _k !== void 0 ? _k : false,\n            isCharDevice: (_l = stat.isCharDevice) !== null && _l !== void 0 ? _l : false,\n            isFIFO: (_m = stat.isFifo) !== null && _m !== void 0 ? _m : false,\n            isSocket: (_o = stat.isSocket) !== null && _o !== void 0 ? _o : false,\n        };\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        const stat = await rawOp(options.followSymlink ? fs.stat(path) : fs.lstat(path));\n        const kind = stat.isDirectory()\n            ? \"directory\"\n            : stat.isSymbolicLink()\n                ? \"symlink\"\n                : \"file\";\n        return {\n            name: basename(path),\n            kind,\n            size: stat.size,\n            type: kind === \"file\" ? ((_p = getMIME(extname(path))) !== null && _p !== void 0 ? _p : \"\") : \"\",\n            mtime: (_q = stat.mtime) !== null && _q !== void 0 ? _q : null,\n            atime: (_r = stat.atime) !== null && _r !== void 0 ? _r : null,\n            birthtime: (_s = stat.birthtime) !== null && _s !== void 0 ? _s : null,\n            mode: (_t = stat.mode) !== null && _t !== void 0 ? _t : 0,\n            uid: (_u = stat.uid) !== null && _u !== void 0 ? _u : 0,\n            gid: (_v = stat.gid) !== null && _v !== void 0 ? _v : 0,\n            isBlockDevice: stat.isBlockDevice(),\n            isCharDevice: stat.isCharacterDevice(),\n            isFIFO: stat.isFIFO(),\n            isSocket: stat.isSocket(),\n        };\n    }\n    else {\n        const [err, file] = await _try(getFileHandle(path, options));\n        if (file) {\n            const info = await rawOp(file.getFile(), \"file\");\n            return {\n                name: info.name,\n                kind: \"file\",\n                size: info.size,\n                type: (_x = (_w = info.type) !== null && _w !== void 0 ? _w : getMIME(extname(info.name))) !== null && _x !== void 0 ? _x : \"\",\n                mtime: new Date(info.lastModified),\n                atime: null,\n                birthtime: null,\n                mode: 0,\n                uid: 0,\n                gid: 0,\n                isBlockDevice: false,\n                isCharDevice: false,\n                isFIFO: false,\n                isSocket: false,\n            };\n        }\n        else if (((_y = as(err, Exception)) === null || _y === void 0 ? void 0 : _y.name) === \"IsDirectoryError\") {\n            return {\n                name: basename(path),\n                kind: \"directory\",\n                size: 0,\n                type: \"\",\n                mtime: null,\n                atime: null,\n                birthtime: null,\n                mode: 0,\n                uid: 0,\n                gid: 0,\n                isBlockDevice: false,\n                isCharDevice: false,\n                isFIFO: false,\n                isSocket: false,\n            };\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Creates a new directory with the given path.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { mkdir } from \"@ayonli/jsext/fs\";\n *\n * await mkdir(\"/path/to/dir\");\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { mkdir } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * await mkdir(\"/path/to/dir\", { root });\n * ```\n *\n * @example\n * ```ts\n * // create the directory and its parent directories if not exist\n * import { mkdir } from \"@ayonli/jsext/fs\";\n *\n * await mkdir(\"/path/to/dir\", { recursive: true });\n * ```\n */\nexport async function mkdir(path, options = {}) {\n    if (isDeno) {\n        await rawOp(Deno.mkdir(path, options));\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        await rawOp(fs.mkdir(path, options));\n    }\n    else {\n        if (await exists(path, { root: options.root })) {\n            throw new Exception(`File or folder already exists, mkdir '${path}'`, {\n                name: \"AlreadyExistsError\",\n                code: 409,\n            });\n        }\n        await getDirHandle(path, { ...options, create: true });\n    }\n}\n/**\n * Ensures the directory exists, creating it (and any parent directory) if not.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { ensureDir } from \"@ayonli/jsext/fs\";\n *\n * await ensureDir(\"/path/to/dir\");\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { ensureDir } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * await ensureDir(\"/path/to/dir\", { root });\n * ```\n */\nexport async function ensureDir(path, options = {}) {\n    var _a;\n    if (await exists(path, options)) {\n        return;\n    }\n    try {\n        await mkdir(path, { ...options, recursive: true });\n    }\n    catch (err) {\n        if (((_a = as(err, Exception)) === null || _a === void 0 ? void 0 : _a.name) === \"AlreadyExistsError\") {\n            return;\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Reads the directory of the given path and iterates its entries.\n *\n * NOTE: The order of the entries is not guaranteed.\n *\n * NOTE: This function can also be used in Cloudflare Workers.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { readDir } from \"@ayonli/jsext/fs\";\n *\n * for await (const entry of readDir(\"/path/to/dir\")) {\n *     console.log(`${entry.name} is a ${entry.kind}, its relative path is '${entry.relativePath}'.`);\n * }\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { readDir } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * for await (const entry of readDir(\"/path/to/dir\", { root })) {\n *     console.log(`${entry.name} is a ${entry.kind}, its relative path is '${entry.relativePath}'.`);\n * }\n * ```\n *\n * @example\n * ```ts\n * // read the sub-directories recursively\n * import { readDir } from \"@ayonli/jsext/fs\";\n *\n * for await (const entry of readDir(\"/path/to/dir\", { recursive: true })) {\n *     console.log(`${entry.name} is a ${entry.kind}, its relative path is '${entry.relativePath}'.`);\n * }\n * ```\n */\nexport async function* readDir(target, options = {}) {\n    if (typeof target === \"object\") {\n        yield* readDirHandle(target, options);\n        return;\n    }\n    const path = target;\n    if (isDeno) {\n        yield* (async function* read(path, base) {\n            try {\n                for await (const entry of Deno.readDir(path)) {\n                    const _entry = fixDirEntry({\n                        name: entry.name,\n                        kind: entry.isDirectory\n                            ? \"directory\"\n                            : entry.isSymlink\n                                ? \"symlink\"\n                                : \"file\",\n                        relativePath: join(base, entry.name),\n                    });\n                    yield _entry;\n                    if ((options === null || options === void 0 ? void 0 : options.recursive) && entry.isDirectory) {\n                        yield* read(join(path, entry.name), _entry.relativePath);\n                    }\n                }\n            }\n            catch (err) {\n                throw wrapFsError(err);\n            }\n        })(path, \"\");\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        yield* (async function* read(path, base) {\n            const entries = await rawOp(fs.readdir(path, { withFileTypes: true }));\n            for (const entry of entries) {\n                const _entry = fixDirEntry({\n                    name: entry.name,\n                    kind: entry.isDirectory()\n                        ? \"directory\"\n                        : entry.isSymbolicLink()\n                            ? \"symlink\"\n                            : \"file\",\n                    relativePath: join(base, entry.name),\n                });\n                yield _entry;\n                if ((options === null || options === void 0 ? void 0 : options.recursive) && entry.isDirectory()) {\n                    yield* read(join(path, entry.name), _entry.relativePath);\n                }\n            }\n        })(path, \"\");\n    }\n    else {\n        const dir = await getDirHandle(path, { root: options.root });\n        yield* readDirHandle(dir, options);\n    }\n}\n/**\n * Recursively reads the contents of the directory and transform them into a\n * tree structure.\n *\n * NOTE: Unlike {@link readDir}, the order of the entries returned by this\n * function is guaranteed, they are ordered first by kind (directories before\n * files), then by names alphabetically.\n *\n * NOTE: This function can also be used in Cloudflare Workers.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { readTree } from \"@ayonli/jsext/fs\";\n *\n * const tree = await readTree(\"/path/to/dir\");\n * console.log(tree);\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { readTree } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * const tree = await readTree(\"/path/to/dir\", { root });\n * console.log(tree);\n * ```\n */\nexport async function readTree(target, options = {}) {\n    const entries = (await readAsArray(readDir(target, { ...options, recursive: true })));\n    const tree = makeTree(target, entries, true);\n    if (!tree.handle && options.root) {\n        tree.handle = options.root;\n    }\n    return tree;\n}\nasync function* readDirHandle(dir, options = {}) {\n    const { base = \"\", recursive = false } = options;\n    const entries = dir.entries();\n    for await (const [_, entry] of entries) {\n        const _entry = fixDirEntry({\n            name: entry.name,\n            kind: entry.kind,\n            relativePath: join(base, entry.name),\n            handle: entry,\n        });\n        yield _entry;\n        if (recursive && entry.kind === \"directory\") {\n            yield* readDirHandle(entry, {\n                base: _entry.relativePath,\n                recursive,\n            });\n        }\n    }\n}\nasync function readFileHandle(handle, options) {\n    const file = await rawOp(handle.getFile(), \"file\");\n    const arr = new Uint8Array(file.size);\n    let offset = 0;\n    let reader = toAsyncIterable(file.stream());\n    if (options.signal) {\n        reader = abortable(reader, options.signal);\n    }\n    for await (const chunk of reader) {\n        arr.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return arr;\n}\n/**\n * Reads the content of the given file in bytes.\n *\n * NOTE: This function can also be used in Cloudflare Workers.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { readFile } from \"@ayonli/jsext/fs\";\n *\n * const bytes = await readFile(\"/path/to/file.txt\");\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { readFile } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * const bytes = await readFile(\"/path/to/file.txt\", { root });\n * ```\n */\nexport async function readFile(target, options = {}) {\n    if (typeof target === \"object\") {\n        return await readFileHandle(target, options);\n    }\n    const filename = target;\n    if (isDeno) {\n        return await rawOp(Deno.readFile(filename, options));\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        const buffer = await rawOp(fs.readFile(filename, options));\n        return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    }\n    else {\n        const handle = await getFileHandle(filename, { root: options.root });\n        return await readFileHandle(handle, options);\n    }\n}\n/**\n * Reads the content of the given file as text with `utf-8` encoding.\n *\n * NOTE: This function can also be used in Cloudflare Workers.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { readFileAsText } from \"@ayonli/jsext/fs\";\n *\n * const text = await readFileAsText(\"/path/to/file.txt\");\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { readFileAsText } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * const text = await readFileAsText(\"/path/to/file.txt\", { root });\n * ```\n */\nexport async function readFileAsText(target, options = {}) {\n    if (typeof target === \"object\") {\n        return text(await readFileHandle(target, options));\n    }\n    const filename = target;\n    if (isDeno) {\n        return await rawOp(Deno.readTextFile(filename, options));\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        return await rawOp(fs.readFile(filename, {\n            encoding: \"utf-8\",\n            signal: options.signal,\n        }));\n    }\n    else {\n        return text(await readFile(filename, options));\n    }\n}\n/**\n * Reads the file as a `File` object.\n *\n * NOTE: This function can also be used in Cloudflare Workers.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { readFileAsFile } from \"@ayonli/jsext/fs\";\n *\n * const file = await readFileAsFile(\"/path/to/file.txt\");\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { readFileAsFile } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * const file = await readFileAsFile(\"/path/to/file.txt\", { root });\n * ```\n */\nexport async function readFileAsFile(target, options = {}) {\n    var _a;\n    if (typeof target === \"object\") {\n        return await readFileHandleAsFile(target);\n    }\n    const filename = target;\n    if (isDeno || isNodeLike) {\n        const bytes = await readFile(filename, options);\n        const type = (_a = getMIME(extname(filename))) !== null && _a !== void 0 ? _a : \"\";\n        const file = new File([bytes], basename(filename), { type });\n        Object.defineProperty(file, \"webkitRelativePath\", {\n            configurable: true,\n            enumerable: true,\n            writable: false,\n            value: \"\",\n        });\n        return file;\n    }\n    else {\n        const handle = await getFileHandle(target, { root: options.root });\n        return await readFileHandleAsFile(handle);\n    }\n}\nasync function readFileHandleAsFile(handle) {\n    const file = await rawOp(handle.getFile(), \"file\");\n    return fixFileType(file);\n}\n/**\n * Writes the given data to the file.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { writeFile } from \"@ayonli/jsext/fs\";\n *\n * await writeFile(\"/path/to/file.txt\", \"Hello, world!\");\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { writeFile } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * await writeFile(\"/path/to/file.txt\", \"Hello, world!\", { root });\n * ```\n *\n * @example\n * ```ts\n * // append the data to the file\n * import { writeFile } from \"@ayonli/jsext/fs\";\n *\n * await writeFile(\"/path/to/file.txt\", \"Hello, world!\", { append: true });\n * ```\n *\n * @example\n * ```ts\n * // write binary data to the file\n * import { writeFile } from \"@ayonli/jsext/fs\";\n * import bytes from \"@ayonli/jsext/bytes\";\n *\n * const data = bytes(\"Hello, world!\");\n * await writeFile(\"/path/to/file.txt\", data)\n * ```\n *\n * @example\n * ```ts\n * // write a blob to the file\n * import { writeFile } from \"@ayonli/jsext/fs\";\n *\n * const blob = new Blob([\"Hello, world!\"], { type: \"text/plain\" });\n * await writeFile(\"/path/to/file.txt\", blob);\n * ```\n *\n * @example\n * ```ts\n * // write a readable stream to the file\n * import { writeFile } from \"@ayonli/jsext/fs\";\n *\n * const res = await fetch(\"https://example.com/file.txt\");\n * await writeFile(\"/path/to/file.txt\", res.body!);\n * ```\n */\nexport async function writeFile(target, data, options = {}) {\n    if (typeof target === \"object\") {\n        return await writeFileHandle(target, data, options);\n    }\n    const filename = target;\n    if (isDeno) {\n        if (typeof data === \"string\") {\n            return await rawOp(Deno.writeTextFile(filename, data, options));\n        }\n        else if (data instanceof Blob) {\n            return await rawOp(Deno.writeFile(filename, data.stream(), options));\n        }\n        else if (data instanceof ArrayBuffer) {\n            return await rawOp(Deno.writeFile(filename, new Uint8Array(data), options));\n        }\n        else if (data instanceof Uint8Array) {\n            return await rawOp(Deno.writeFile(filename, data, options));\n        }\n        else if (ArrayBuffer.isView(data)) {\n            return await rawOp(Deno.writeFile(filename, bytes(data), options));\n        }\n        else if (data) {\n            return await rawOp(Deno.writeFile(filename, data, options));\n        }\n    }\n    else if (isNodeLike) {\n        if (typeof Blob === \"function\" && data instanceof Blob) {\n            const reader = data.stream();\n            const writer = createNodeWritableStream(filename, options);\n            await reader.pipeTo(writer);\n        }\n        else if (typeof ReadableStream === \"function\" && data instanceof ReadableStream) {\n            const writer = createNodeWritableStream(filename, options);\n            await data.pipeTo(writer);\n        }\n        else {\n            const fs = await import(\"fs/promises\");\n            const { append, ...rest } = options;\n            let _data;\n            if (data instanceof ArrayBuffer) {\n                _data = new Uint8Array(data);\n            }\n            else if (data instanceof Uint8Array) {\n                _data = data;\n            }\n            else if (ArrayBuffer.isView(data)) {\n                _data = bytes(data);\n            }\n            else if (typeof data === \"string\") {\n                _data = data;\n            }\n            else {\n                throw new TypeError(\"Unsupported data type\");\n            }\n            return await rawOp(fs.writeFile(filename, _data, {\n                flag: append ? \"a\" : \"w\",\n                ...rest,\n            }));\n        }\n    }\n    else {\n        const handle = await getFileHandle(filename, { root: options.root, create: true });\n        return await writeFileHandle(handle, data, options);\n    }\n}\nasync function writeFileHandle(handle, data, options) {\n    const writer = await createFileHandleWritableStream(handle, options);\n    if (options.signal) {\n        const { signal } = options;\n        if (signal.aborted) {\n            throw signal.reason;\n        }\n        else {\n            signal.addEventListener(\"abort\", () => {\n                writer.abort(signal.reason);\n            });\n        }\n    }\n    try {\n        if (data instanceof Blob) {\n            await data.stream().pipeTo(writer);\n        }\n        else if (data instanceof ReadableStream) {\n            await data.pipeTo(writer);\n        }\n        else {\n            await writer.write(data);\n            await writer.close();\n        }\n    }\n    catch (err) {\n        throw wrapFsError(err, \"file\");\n    }\n}\n/**\n * Writes multiple lines of content to the file.\n *\n * This function will automatically detect the line ending of the current\n * content and use it to write the new lines. If the file is empty or does not\n * exists (will be created automatically), it will use the system's default line\n * ending to separate lines.\n *\n * This function will append a new line at the end of the final content, in\n * appending mode, it will also prepend a line ending before the input lines if\n * the current content doesn't ends with one.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { writeLines } from \"@ayonli/jsext/fs\";\n *\n * await writeLines(\"/path/to/file.txt\", [\"Hello\", \"World\"]);\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { writeLines } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * await writeLines(\"/path/to/file.txt\", [\"Hello\", \"World\"], { root });\n * ```\n *\n * @example\n * ```ts\n * // append the lines to the file\n * import { writeLines } from \"@ayonli/jsext/fs\";\n *\n * await writeLines(\"/path/to/file.txt\", [\"Hello\", \"World\"], { append: true });\n * ```\n */\nexport async function writeLines(target, lines, options = {}) {\n    const current = await readFileAsText(target, options).catch(err => {\n        var _a;\n        if (((_a = as(err, Exception)) === null || _a === void 0 ? void 0 : _a.name) !== \"NotFoundError\") {\n            throw err;\n        }\n        else {\n            return \"\";\n        }\n    });\n    const lineEndings = current.match(/\\r?\\n/g);\n    let eol = EOL;\n    if (lineEndings) {\n        const crlf = lineEndings.filter(e => e === \"\\r\\n\").length;\n        const lf = lineEndings.length - crlf;\n        eol = crlf > lf ? \"\\r\\n\" : \"\\n\";\n    }\n    let content = lines.join(eol);\n    if (!content.endsWith(eol)) {\n        if (eol === \"\\r\\n\" && content.endsWith(\"\\r\")) {\n            content += \"\\n\";\n        }\n        else {\n            content += eol;\n        }\n    }\n    if (options.append && !current.endsWith(eol) && !content.startsWith(eol)) {\n        if (eol === \"\\r\\n\" && current.endsWith(\"\\r\")) {\n            if (!content.startsWith(\"\\n\")) {\n                content = \"\\n\" + content;\n            }\n        }\n        else {\n            content = eol + content;\n        }\n    }\n    await writeFile(target, content, options);\n}\n/**\n * Truncates (or extends) the file to reach the specified `size`. If `size` is\n * not specified then the entire file contents are truncated.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { stat, truncate } from \"@ayonli/jsext/fs\";\n *\n * await truncate(\"/path/to/file.txt\", 1024);\n * const info = await stat(\"/path/to/file.txt\");\n * console.assert(info.size === 1024);\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { stat, truncate } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * await truncate(\"/path/to/file.txt\", 1024, { root });\n * const info = await stat(\"/path/to/file.txt\", { root });\n * console.assert(info.size === 1024);\n * ```\n *\n * @example\n * ```ts\n * // truncate the file to zero size\n * import { stat, truncate } from \"@ayonli/jsext/fs\";\n *\n * await truncate(\"/path/to/file.txt\");\n * const info = await stat(\"/path/to/file.txt\");\n * console.assert(info.size === 0);\n * ```\n */\nexport async function truncate(target, size = 0, options = {}) {\n    if (typeof target === \"object\") {\n        return await truncateFileHandle(target, size);\n    }\n    const filename = target;\n    if (isDeno) {\n        await rawOp(Deno.truncate(filename, size));\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        await rawOp(fs.truncate(filename, size));\n    }\n    else {\n        const handle = await getFileHandle(filename, { root: options.root });\n        await truncateFileHandle(handle, size);\n    }\n}\nasync function truncateFileHandle(handle, size = 0) {\n    try {\n        const writer = await handle.createWritable({ keepExistingData: true });\n        await writer.truncate(size);\n        await writer.close();\n    }\n    catch (err) {\n        throw wrapFsError(err, \"file\");\n    }\n}\n/**\n * Removes the file or directory of the given path from the file system.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { remove } from \"@ayonli/jsext/fs\";\n *\n * await remove(\"/path/to/file.txt\");\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { remove } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * await remove(\"/path/to/file.txt\", { root });\n * ```\n *\n * @example\n * ```ts\n * // remove the directory and its contents recursively\n * import { remove } from \"@ayonli/jsext/fs\";\n *\n * await remove(\"/path/to/dir\", { recursive: true });\n * ```\n */\nexport async function remove(path, options = {}) {\n    if (isDeno) {\n        await rawOp(Deno.remove(path, options));\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        if (typeof fs.rm === \"function\") {\n            await rawOp(fs.rm(path, options));\n        }\n        else {\n            try {\n                const _stat = await fs.stat(path);\n                if (_stat.isDirectory()) {\n                    await fs.rmdir(path, options);\n                }\n                else {\n                    await fs.unlink(path);\n                }\n            }\n            catch (err) {\n                throw wrapFsError(err);\n            }\n        }\n    }\n    else {\n        const parent = dirname(path);\n        const name = basename(path);\n        const dir = await getDirHandle(parent, { root: options.root });\n        await rawOp(dir.removeEntry(name, options), \"directory\");\n    }\n}\n/**\n * Renames the file or directory from the old path to the new path.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { rename } from \"@ayonli/jsext/fs\";\n *\n * await rename(\"/path/to/old.txt\", \"/path/to/new.txt\");\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { rename } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * await rename(\"/path/to/old.txt\", \"/path/to/new.txt\", { root });\n * ```\n */\nexport async function rename(oldPath, newPath, options = {}) {\n    if (isDeno) {\n        await rawOp(Deno.rename(oldPath, newPath));\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        await rawOp(fs.rename(oldPath, newPath));\n    }\n    else {\n        return await copyInBrowser(oldPath, newPath, {\n            root: options.root,\n            recursive: true,\n            move: true,\n        });\n    }\n}\nexport async function copy(src, dest, options = {}) {\n    var _a, _b;\n    if (typeof src === \"object\" || typeof dest === \"object\") {\n        return copyInBrowser(src, dest, { recursive: (_a = options === null || options === void 0 ? void 0 : options.recursive) !== null && _a !== void 0 ? _a : false });\n    }\n    if (isDeno || isNodeLike) {\n        const oldStat = await stat(src, { followSymlink: true });\n        const isDirSrc = oldStat.kind === \"directory\";\n        let isDirDest = false;\n        if (isDirSrc && !options.recursive) {\n            throw new Exception(\"Cannot copy a directory without the 'recursive' option\", {\n                name: \"InvalidOperationError\",\n                code: 400,\n            });\n        }\n        try {\n            const newStat = await stat(dest, { followSymlink: true });\n            isDirDest = newStat.kind === \"directory\";\n            if (isDirSrc && !isDirDest) {\n                throw new Exception(`'${dest}' is not a directory`, {\n                    name: \"NotDirectoryError\",\n                    code: 415,\n                });\n            }\n        }\n        catch (_c) {\n            if (isDirSrc) {\n                await mkdir(dest);\n                isDirDest = true;\n            }\n        }\n        if (isDeno) {\n            if (isDirSrc) {\n                const entries = readDir(src, { recursive: true });\n                for await (const entry of entries) {\n                    const _oldPath = join(src, entry.relativePath);\n                    const _newPath = join(dest, entry.relativePath);\n                    if (entry.kind === \"directory\") {\n                        await rawOp(Deno.mkdir(_newPath));\n                    }\n                    else {\n                        await rawOp(Deno.copyFile(_oldPath, _newPath));\n                    }\n                }\n            }\n            else {\n                const _newPath = isDirDest ? join(dest, basename(src)) : dest;\n                await rawOp(Deno.copyFile(src, _newPath));\n            }\n        }\n        else {\n            const fs = await import(\"fs/promises\");\n            if (isDirSrc) {\n                const entries = readDir(src, { recursive: true });\n                for await (const entry of entries) {\n                    const _oldPath = join(src, entry.relativePath);\n                    const _newPath = join(dest, entry.relativePath);\n                    if (entry.kind === \"directory\") {\n                        await rawOp(fs.mkdir(_newPath));\n                    }\n                    else {\n                        await rawOp(fs.copyFile(_oldPath, _newPath));\n                    }\n                }\n            }\n            else {\n                const _newPath = isDirDest ? join(dest, basename(src)) : dest;\n                await rawOp(fs.copyFile(src, _newPath));\n            }\n        }\n    }\n    else {\n        return await copyInBrowser(src, dest, {\n            root: options.root,\n            recursive: (_b = options.recursive) !== null && _b !== void 0 ? _b : false,\n        });\n    }\n}\nasync function copyInBrowser(src, dest, options = {}) {\n    var _a, _b;\n    if (typeof src === \"object\" && typeof dest !== \"object\") {\n        throw new TypeError(\"The destination must be a FileSystemHandle\");\n    }\n    else if (typeof dest === \"object\" && typeof src !== \"object\") {\n        throw new TypeError(\"The source must be a FileSystemHandle\");\n    }\n    else if (typeof src === \"object\" && typeof dest === \"object\") {\n        if (src.kind === \"file\") {\n            if (dest.kind === \"file\") {\n                return await copyFileHandleToFileHandle(src, dest);\n            }\n            else {\n                return await copyFileHandleToDirHandle(src, dest);\n            }\n        }\n        else if (dest.kind === \"directory\") {\n            if (!options.recursive) {\n                throw new Exception(\"Cannot copy a directory without the 'recursive' option\", {\n                    name: \"InvalidOperationError\",\n                    code: 400,\n                });\n            }\n            return await copyDirHandleToDirHandle(src, dest);\n        }\n        else {\n            throw new Exception(\"The destination location is not a directory\", {\n                name: \"NotDirectoryError\",\n                code: 415,\n            });\n        }\n    }\n    const oldParent = dirname(src);\n    const oldName = basename(src);\n    let oldDir = await getDirHandle(oldParent, { root: options.root });\n    const [oldErr, oldFile] = await _try(rawOp(oldDir.getFileHandle(oldName), \"file\"));\n    if (oldFile) {\n        const newParent = dirname(dest);\n        const newName = basename(dest);\n        let newDir = await getDirHandle(newParent, { root: options.root });\n        const [newErr, newFile] = await _try(rawOp(newDir.getFileHandle(newName, {\n            create: true,\n        }), \"file\"));\n        if (newFile) {\n            await copyFileHandleToFileHandle(oldFile, newFile);\n            if (options.move) {\n                await rawOp(oldDir.removeEntry(oldName), \"directory\");\n            }\n        }\n        else if (((_a = as(newErr, Exception)) === null || _a === void 0 ? void 0 : _a.name) === \"IsDirectoryError\" && !options.move) {\n            // The destination is a directory, copy the file into the new path\n            // with the old name.\n            newDir = await rawOp(newDir.getDirectoryHandle(newName), \"directory\");\n            await copyFileHandleToDirHandle(oldFile, newDir);\n        }\n        else {\n            throw newErr;\n        }\n    }\n    else if (((_b = as(oldErr, Exception)) === null || _b === void 0 ? void 0 : _b.name) === \"IsDirectoryError\") {\n        if (!options.recursive) {\n            throw new Exception(\"Cannot copy a directory without the 'recursive' option\", {\n                name: \"InvalidOperationError\",\n                code: 400,\n            });\n        }\n        const parent = oldDir;\n        oldDir = await rawOp(oldDir.getDirectoryHandle(oldName), \"directory\");\n        const newDir = await getDirHandle(dest, { root: options.root, create: true });\n        await copyDirHandleToDirHandle(oldDir, newDir);\n        if (options.move) {\n            await rawOp(parent.removeEntry(oldName, { recursive: true }), \"directory\");\n        }\n    }\n    else {\n        throw oldErr;\n    }\n}\nasync function copyFileHandleToFileHandle(src, dest) {\n    try {\n        const srcFile = await src.getFile();\n        const destFile = await dest.createWritable();\n        await srcFile.stream().pipeTo(destFile);\n    }\n    catch (err) {\n        throw wrapFsError(err, \"file\");\n    }\n}\nasync function copyFileHandleToDirHandle(src, dest) {\n    try {\n        const srcFile = await src.getFile();\n        const newFile = await dest.getFileHandle(src.name, { create: true });\n        const destFile = await newFile.createWritable();\n        await srcFile.stream().pipeTo(destFile);\n    }\n    catch (err) {\n        throw wrapFsError(err, \"file\");\n    }\n}\nasync function copyDirHandleToDirHandle(src, dest) {\n    const entries = src.entries();\n    for await (const [_, entry] of entries) {\n        if (entry.kind === \"file\") {\n            try {\n                const oldFile = await entry.getFile();\n                const newFile = await dest.getFileHandle(entry.name, {\n                    create: true,\n                });\n                const reader = oldFile.stream();\n                const writer = await newFile.createWritable();\n                await reader.pipeTo(writer);\n            }\n            catch (err) {\n                throw wrapFsError(err, \"file\");\n            }\n        }\n        else {\n            const newSubDir = await rawOp(dest.getDirectoryHandle(entry.name, {\n                create: true,\n            }), \"directory\");\n            await copyDirHandleToDirHandle(entry, newSubDir);\n        }\n    }\n}\n/**\n * Creates a hard link (or symbolic link) from the source path to the destination\n * path.\n *\n * NOTE: This function is only available in Node.js, Deno and Bun.\n *\n * @example\n * ```ts\n * // create a hard link\n * import { link } from \"@ayonli/jsext/fs\";\n *\n * await link(\"/path/to/file.txt\", \"/path/to/link.txt\");\n * ```\n *\n * @example\n * ```ts\n * // create a symbolic link\n * import { link } from \"@ayonli/jsext/fs\";\n *\n * await link(\"/path/to/file.txt\", \"/path/to/link.txt\", { symbolic: true });\n * ```\n */\nexport async function link(src, dest, options = {}) {\n    if (isDeno) {\n        if (options.symbolic) {\n            if (platform() === \"windows\") {\n                const _stat = await stat(src);\n                await rawOp(Deno.symlink(src, dest, {\n                    type: _stat.kind === \"directory\" ? \"dir\" : \"file\",\n                }));\n            }\n            else {\n                await rawOp(Deno.symlink(src, dest));\n            }\n        }\n        else {\n            await rawOp(Deno.link(src, dest));\n        }\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        if (options.symbolic) {\n            if (platform() === \"windows\") {\n                const _stat = await stat(src);\n                await rawOp(fs.symlink(src, dest, _stat.kind === \"directory\" ? \"dir\" : \"file\"));\n            }\n            else {\n                await rawOp(fs.symlink(src, dest));\n            }\n        }\n        else {\n            await rawOp(fs.link(src, dest));\n        }\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\n/**\n * Returns the destination path of a symbolic link.\n *\n * NOTE: This function is only available in Node.js, Deno and Bun.\n *\n * @example\n * ```ts\n * import { readLink } from \"@ayonli/jsext/fs\";\n *\n * const dest = await readLink(\"/path/to/link.txt\");\n * console.log(dest);\n * ```\n */\nexport async function readLink(path) {\n    if (isDeno) {\n        return await rawOp(Deno.readLink(path));\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        return await rawOp(fs.readlink(path));\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\n/**\n * Changes the permission of the specified file or directory.\n *\n * The mode is a sequence of 3 octal numbers. The first/left-most number\n * specifies the permissions for the owner. The second number specifies the\n * permissions for the group. The last/right-most number specifies the\n * permissions for others. For example, with a mode of 0o764, the owner (7) can\n * read/write/execute, the group (6) can read/write and everyone else (4) can\n * read only.\n *\n * | Number | Description |\n * | ------ | ----------- |\n * | 7      | read, write, and execute |\n * | 6      | read and write |\n * | 5      | read and execute |\n * | 4      | read only |\n * | 3      | write and execute |\n * | 2      | write only |\n * | 1      | execute only |\n * | 0      | no permission |\n *\n * NOTE: This function is only available in Node.js, Deno and Bun, and only\n * works in Unix/Linux systems, in other environments, it's a no-op.\n *\n * @example\n * ```ts\n * import { chmod } from \"@ayonli/jsext/fs\";\n *\n * // Change the file's permission to read/write for owner, read for group and others.\n * await chmod(\"/path/to/file.txt\", 0o644);\n * ```\n */\nexport async function chmod(path, mode) {\n    if (platform() !== \"windows\") {\n        if (isDeno) {\n            await rawOp(Deno.chmod(path, mode));\n        }\n        else if (isNodeLike) {\n            const fs = await import(\"fs/promises\");\n            await rawOp(fs.chmod(path, mode));\n        }\n    }\n}\n/**\n * Changes the owner and group of the specified file or directory.\n *\n * NOTE: This function is only available in Node.js, Deno and Bun, and only\n * works in Unix/Linux systems, in other environments, it's a no-op.\n *\n * @example\n * ```ts\n * import { chown } from \"@ayonli/jsext/fs\";\n *\n * // Change the owner and group of the file to root.\n * await chown(\"/path/to/file.txt\", 0, 0);\n * ```\n */\nexport async function chown(path, uid, gid) {\n    if (platform() !== \"windows\") {\n        if (isDeno) {\n            await rawOp(Deno.chown(path, uid, gid));\n        }\n        else if (isNodeLike) {\n            const fs = await import(\"fs/promises\");\n            await rawOp(fs.chown(path, uid, gid));\n        }\n    }\n}\n/**\n * Changes the access (`atime`) and modification (`mtime`) times of the file\n * or directory. Given times are either in seconds (UNIX epoch time) or as `Date`\n * objects.\n *\n * NOTE: This function only works in Node.js, Deno and Bun, in other\n * environments, it's a no-op.\n *\n * @example\n * ```ts\n * import { utimes } from \"@ayonli/jsext/fs\";\n *\n * // Set the access and modification times to the current time.\n * await utimes(\"/path/to/file.txt\", Date.now(), Date.now());\n * ```\n */\nexport async function utimes(path, atime, mtime) {\n    if (isDeno) {\n        await rawOp(Deno.utime(path, atime, mtime));\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        await rawOp(fs.utimes(path, atime, mtime));\n    }\n}\n/**\n * Creates a readable stream for the target file.\n *\n * NOTE: In Node.js, this function requires Node.js v18.0 or above.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { createReadableStream } from \"@ayonli/jsext/fs\";\n * import { readAsText } from \"@ayonli/jsext/reader\";\n *\n * const input = createReadableStream(\"/path/to/file.txt\");\n *\n * const text = await readAsText(input);\n * console.log(text);\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { createReadableStream } from \"@ayonli/jsext/fs\";\n * import { readAsText } from \"@ayonli/jsext/reader\";\n *\n * const root = await window.showDirectoryPicker();\n * const input = createReadableStream(\"/path/to/file.txt\", { root });\n *\n * const text = await readAsText(input);\n * console.log(text);\n * ```\n */\nexport function createReadableStream(target, options = {}) {\n    if (isNodeLike) {\n        if (typeof target === \"object\") {\n            throw new TypeError(\"Expected a file path, got a file handle\");\n        }\n        const filename = target;\n        let reader;\n        return new ReadableStream({\n            async start(controller) {\n                const fs = await import(\"fs\");\n                reader = fs.createReadStream(filename);\n                reader.on(\"data\", (chunk) => {\n                    const bytes = new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n                    controller.enqueue(bytes);\n                });\n                reader.on(\"end\", () => controller.close());\n                reader.on(\"error\", (err) => controller.error(err));\n            },\n            cancel(reason = undefined) {\n                reader.destroy(reason);\n            },\n        });\n    }\n    return resolveByteStream((async () => {\n        if (typeof target === \"object\") {\n            return await readFileHandleAsStream(target);\n        }\n        const filename = target;\n        if (isDeno) {\n            const file = await rawOp(Deno.open(filename, { read: true }));\n            return file.readable;\n        }\n        else {\n            const handle = await getFileHandle(filename, { root: options.root });\n            return await readFileHandleAsStream(handle);\n        }\n    })());\n}\nasync function readFileHandleAsStream(handle) {\n    const file = await rawOp(handle.getFile(), \"file\");\n    return file.stream();\n}\n/**\n * @deprecated use `createReadableStream` instead.\n */\nexport const readFileAsStream = createReadableStream;\n/**\n * Creates a writable stream for the target file.\n *\n * NOTE: In Node.js, this function requires Node.js v18.0 or above.\n *\n * @example\n * ```ts\n * // with the default storage\n * import { createWritableStream } from \"@ayonli/jsext/fs\";\n *\n * const output = createWritableStream(\"/path/to/file.txt\");\n * const res = await fetch(\"https://example.com/file.txt\");\n *\n * await res.body!.pipeTo(output);\n * ```\n *\n * @example\n * ```ts\n * // with a user-selected directory as root (Chromium only)\n * import { createWritableStream } from \"@ayonli/jsext/fs\";\n *\n * const root = await window.showDirectoryPicker();\n * const output = createWritableStream(\"/path/to/file.txt\", { root });\n * const res = await fetch(\"https://example.com/file.txt\");\n *\n * await res.body!.pipeTo(output);\n * ```\n */\nexport function createWritableStream(target, options = {}) {\n    var _a;\n    if (typeof target === \"object\") {\n        const { readable, writable } = new TransformStream();\n        createFileHandleWritableStream(target, options)\n            .then(stream => readable.pipeTo(stream));\n        return writable;\n    }\n    const filename = target;\n    if (isDeno) {\n        const { readable, writable } = new TransformStream();\n        Deno.open(filename, { write: true, create: true, append: (_a = options.append) !== null && _a !== void 0 ? _a : false })\n            .then(file => file.writable)\n            .then(stream => readable.pipeTo(stream));\n        return writable;\n    }\n    else if (isNodeLike) {\n        return createNodeWritableStream(filename, options);\n    }\n    else {\n        const { readable, writable } = new TransformStream();\n        getFileHandle(filename, { root: options.root, create: true })\n            .then(handle => createFileHandleWritableStream(handle, options))\n            .then(stream => readable.pipeTo(stream));\n        return writable;\n    }\n}\nasync function createFileHandleWritableStream(handle, options) {\n    var _a;\n    const stream = await rawOp(handle.createWritable({\n        keepExistingData: (_a = options === null || options === void 0 ? void 0 : options.append) !== null && _a !== void 0 ? _a : false,\n    }), \"file\");\n    if (options.append) {\n        const file = await rawOp(handle.getFile(), \"file\");\n        file.size && stream.seek(file.size);\n    }\n    return stream;\n}\nfunction createNodeWritableStream(filename, options) {\n    let dest;\n    return new WritableStream({\n        async start() {\n            const { append, ...rest } = options;\n            const { createWriteStream } = await import(\"fs\");\n            dest = createWriteStream(filename, {\n                flags: append ? \"a\" : \"w\",\n                ...rest,\n            });\n        },\n        write(chunk) {\n            return new Promise((resolve, reject) => {\n                dest.write(chunk, (err) => err ? reject(err) : resolve());\n            });\n        },\n        close() {\n            return new Promise((resolve) => {\n                dest.end(() => resolve());\n            });\n        },\n        abort(reason) {\n            dest.destroy(reason);\n        }\n    });\n}\n//# sourceMappingURL=fs.js.map"],"names":["isDeno","Exception","stripStart","split","path","dirname","basename","getMIME","extname","isNodeLike","_try","as","fixDirEntry","join","readAsArray","makeTree","toAsyncIterable","abortable","text","fixFileType","bytes","platform","resolveByteStream"],"mappings":"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"}
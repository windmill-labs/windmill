{"version":3,"file":"worker.js","sources":["../../parallel/worker.ts"],"sourcesContent":["import { isAsyncGenerator, isGenerator } from \"../external/check-iterable/index.mjs\";\nimport { unwrapChannel } from \"./channel.ts\";\nimport { resolveModule } from \"./module.ts\";\nimport { isPlainObject } from \"../object.ts\";\nimport { Exception, fromObject, isAggregateError, isDOMException, toObject, } from \"../error.ts\";\nconst pendingTasks = new Map();\n/**\n * For some reason, in Node.js and Bun, when import expression throws an\n * module/package not found error, the error can not be serialized and sent to\n * the other thread properly. We need to check this situation and sent the error\n * as plain object instead.\n */\nfunction isModuleResolveError(value) {\n    var _a;\n    if (typeof value === \"object\" &&\n        typeof (value === null || value === void 0 ? void 0 : value.message) === \"string\" &&\n        /Cannot find (module|package)/.test(value === null || value === void 0 ? void 0 : value.message)) {\n        return (value instanceof Error) // Node.js (possibly bug)\n            || ((_a = value.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"Error\"; // Bun (doesn't inherit from Error)\n    }\n    return false;\n}\nfunction removeUnserializableProperties(obj) {\n    const _obj = {};\n    for (const key of Reflect.ownKeys(obj)) {\n        if (typeof obj[key] !== \"bigint\" && typeof obj[key] !== \"function\") {\n            _obj[key] = obj[key];\n        }\n    }\n    return _obj;\n}\nfunction unwrapArgs(args, channelWrite) {\n    return args.map(arg => {\n        if (isPlainObject(arg)) {\n            if (arg[\"@@type\"] === \"Channel\" && typeof arg[\"@@id\"] === \"number\") {\n                return unwrapChannel(arg, channelWrite);\n            }\n            else if (arg[\"@@type\"] === \"Exception\"\n                || arg[\"@@type\"] === \"DOMException\"\n                || arg[\"@@type\"] === \"AggregateError\") {\n                return fromObject(arg);\n            }\n        }\n        return arg;\n    });\n}\nfunction wrapReturnValue(value) {\n    const transferable = [];\n    if (value instanceof ArrayBuffer) {\n        transferable.push(value);\n    }\n    else if ((value instanceof Exception)\n        || isDOMException(value)\n        || isAggregateError(value)\n        || isModuleResolveError(value)) {\n        value = toObject(value);\n    }\n    else if (isPlainObject(value)) {\n        for (const key of Object.getOwnPropertyNames(value)) {\n            const _value = value[key];\n            if (_value instanceof ArrayBuffer) {\n                transferable.push(_value);\n            }\n            else if ((_value instanceof Exception)\n                || isDOMException(_value)\n                || isAggregateError(_value)\n                || isModuleResolveError(_value)) {\n                value[key] = toObject(_value);\n            }\n        }\n    }\n    else if (Array.isArray(value)) {\n        value = value.map(item => {\n            if (item instanceof ArrayBuffer) {\n                transferable.push(item);\n                return item;\n            }\n            else if ((item instanceof Exception)\n                || isDOMException(item)\n                || isAggregateError(item)\n                || isModuleResolveError(item)) {\n                return toObject(item);\n            }\n            else {\n                return item;\n            }\n        });\n    }\n    return { value, transferable };\n}\n/**\n * @ignore\n * @internal\n */\nexport function isCallRequest(msg) {\n    return msg && typeof msg === \"object\"\n        && ((msg.type === \"call\" && typeof msg.module === \"string\" && typeof msg.fn === \"string\") ||\n            ([\"next\", \"return\", \"throw\"].includes(msg.type) && typeof msg.taskId === \"number\"))\n        && Array.isArray(msg.args);\n}\n/**\n * @ignore\n * @internal\n */\nexport async function handleCallRequest(msg, reply) {\n    const _reply = reply;\n    reply = (res) => {\n        if (res.type === \"error\") {\n            if ((res.error instanceof Exception) ||\n                isDOMException(res.error) ||\n                isAggregateError(res.error) ||\n                isModuleResolveError(res.error)) {\n                return _reply({\n                    ...res,\n                    error: removeUnserializableProperties(toObject(res.error)),\n                });\n            }\n            try {\n                return _reply(res);\n            }\n            catch (_a) {\n                // In case the error cannot be cloned directly, fallback to\n                // transferring it as an object and rebuild in the main thread.\n                return _reply({\n                    ...res,\n                    error: removeUnserializableProperties(toObject(res.error)),\n                });\n            }\n        }\n        else {\n            return _reply(res);\n        }\n    };\n    msg.args = unwrapArgs(msg.args, (type, msg, channelId) => {\n        reply({ type, value: msg, channelId });\n    });\n    try {\n        if (msg.taskId && [\"next\", \"return\", \"throw\"].includes(msg.type)) {\n            const req = msg;\n            const task = pendingTasks.get(req.taskId);\n            if (task) {\n                if (req.type === \"throw\") {\n                    try {\n                        await task.throw(req.args[0]);\n                    }\n                    catch (error) {\n                        reply({ type: \"error\", error, taskId: req.taskId });\n                    }\n                }\n                else if (req.type === \"return\") {\n                    try {\n                        const res = await task.return(req.args[0]);\n                        const { value, transferable } = wrapReturnValue(res.value);\n                        reply({\n                            type: \"yield\",\n                            value,\n                            done: res.done,\n                            taskId: req.taskId,\n                        }, transferable);\n                    }\n                    catch (error) {\n                        reply({ type: \"error\", error, taskId: req.taskId });\n                    }\n                }\n                else { // req.type === \"next\"\n                    try {\n                        const res = await task.next(req.args[0]);\n                        const { value, transferable } = wrapReturnValue(res.value);\n                        reply({\n                            type: \"yield\",\n                            value,\n                            done: res.done,\n                            taskId: req.taskId,\n                        }, transferable);\n                    }\n                    catch (error) {\n                        reply({ type: \"error\", error, taskId: req.taskId });\n                    }\n                }\n            }\n            else {\n                reply({\n                    type: \"error\",\n                    error: new ReferenceError(`task (${req.taskId}) doesn't exists`),\n                    taskId: req.taskId,\n                });\n            }\n            return;\n        }\n        const req = msg;\n        const module = await resolveModule(req.module);\n        const returns = await module[req.fn](...req.args);\n        if (isAsyncGenerator(returns) || isGenerator(returns)) {\n            if (req.taskId) {\n                pendingTasks.set(req.taskId, returns);\n                reply({ type: \"gen\", taskId: req.taskId });\n            }\n            else {\n                while (true) {\n                    try {\n                        const res = await returns.next();\n                        const { value, transferable } = wrapReturnValue(res.value);\n                        reply({ type: \"yield\", value, done: res.done }, transferable);\n                        if (res.done) {\n                            break;\n                        }\n                    }\n                    catch (error) {\n                        reply({ type: \"error\", error });\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            const { value, transferable } = wrapReturnValue(returns);\n            reply({ type: \"return\", value, taskId: req.taskId }, transferable);\n        }\n    }\n    catch (error) {\n        reply({ type: \"error\", error, taskId: msg.taskId });\n    }\n}\n//# sourceMappingURL=worker.js.map"],"names":["isPlainObject","unwrapChannel","fromObject","Exception","isDOMException","isAggregateError","toObject","resolveModule","isAsyncGenerator","isGenerator"],"mappings":"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"}
{"version":3,"file":"object.js","sources":["../object.ts"],"sourcesContent":["/**\n * Functions for dealing with objects.\n * @module\n */\nimport { isClass } from \"./class.ts\";\n/**\n * Returns `true` if the specified object has the indicated property as its own property.\n * If the property is inherited, or does not exist, the function returns `false`.\n *\n * @example\n * ```ts\n * import { hasOwn } from \"@ayonli/jsext/object\";\n *\n * const obj = { foo: \"hello\" };\n *\n * console.log(hasOwn(obj, \"foo\")); // true\n * console.log(hasOwn(obj, \"toString\")); // false\n * ```\n */\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Returns `true` if the specified object has the indicated method as its own method (in its own\n * prototype). If the method is inherited, or is not in the prototype, or does not exist, this\n * function returns `false`.\n *\n * @example\n * ```ts\n * import { hasOwnMethod } from \"@ayonli/jsext/object\";\n *\n * class MyClass {\n *     foo() {\n *         return \"Hello\";\n *     }\n *\n *     bar = () => \"World\";\n * }\n *\n * const obj = new MyClass();\n *\n * console.log(hasOwnMethod(obj, \"foo\")); // true\n * console.log(hasOwnMethod(obj, \"bar\")); // false\n * console.log(hasOwnMethod(obj, \"toString\")); // false\n * ```\n */\nexport function hasOwnMethod(obj, method) {\n    var _a;\n    const proto = Object.getPrototypeOf(obj);\n    if (!proto || !hasOwn(proto, method)) {\n        return false;\n    }\n    return typeof ((_a = Object.getOwnPropertyDescriptor(proto, method)) === null || _a === void 0 ? void 0 : _a.value) === \"function\";\n}\nexport function patch(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Reflect.ownKeys(source)) {\n            if (!hasOwn(target, key) || target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\nexport function pick(obj, keys) {\n    return keys.reduce((result, key) => {\n        if (key in obj && obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\nexport function omit(obj, keys) {\n    const allKeys = Reflect.ownKeys(obj);\n    const keptKeys = allKeys.filter(key => !keys.includes(key));\n    const result = pick(obj, keptKeys);\n    // special treatment for Error types\n    if (obj instanceof Error) {\n        [\"name\", \"message\", \"stack\", \"cause\"].forEach(key => {\n            if (!keys.includes(key) &&\n                obj[key] !== undefined &&\n                !hasOwn(result, key)) {\n                result[key] = obj[key];\n            }\n        });\n    }\n    return result;\n}\nexport function as(value, type) {\n    if (typeof type !== \"function\") {\n        throw new TypeError(\"type must be a valid constructor\");\n    }\n    let _type;\n    const primitiveMap = {\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": BigInt,\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n    if (value instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return value.valueOf(); // make sure the primitives are returned.\n        }\n        else {\n            return value;\n        }\n    }\n    else if ((_type = typeof value) && primitiveMap[_type] === type) {\n        return value;\n    }\n    return null;\n}\n/**\n * Returns a string representation or the constructor of the value's type.\n *\n * **NOTE:** This function returns `\"class\"` for ES6 classes.\n *\n * **NOTE:** This function returns `\"null\"` for `null`.\n *\n * **NOTE:** This function returns `Object` for `Object.create(null)`.\n *\n * @example\n * ```ts\n * import { typeOf } from \"@ayonli/jsext/object\";\n *\n * console.log(typeOf(\"Hello\")); // string\n * console.log(typeOf(42)); // number\n * console.log(typeOf(42n)); // bigint\n * console.log(typeOf(true)); // boolean\n * console.log(typeOf(Symbol(\"foo\"))); // symbol\n * console.log(typeOf(() => {})); // function\n * console.log(typeOf(class Foo {})); // class\n * console.log(typeOf(undefined)); // undefined\n * console.log(typeOf(null)); // null\n * console.log(typeOf({ foo: \"bar\" })); // [Function: Object]\n * console.log(typeOf(Object.create(null))); // [Function: Object]\n * console.log(typeOf([1, 2, 3])); // [Function: Array]\n * console.log(typeOf(new Date())); // [Function: Date]\n * ```\n */\nexport function typeOf(value) {\n    var _a, _b;\n    if (value === undefined) {\n        return \"undefined\";\n    }\n    else if (value === null) {\n        return \"null\";\n    }\n    const type = typeof value;\n    if (type === \"function\") {\n        return isClass(value) ? \"class\" : \"function\";\n    }\n    else if (type === \"object\") {\n        return (_b = (_a = Object.getPrototypeOf(value)) === null || _a === void 0 ? void 0 : _a.constructor) !== null && _b !== void 0 ? _b : Object;\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Returns `true` if the given value is valid. The following values are considered invalid:\n *\n * - `undefined`\n * - `null`\n * - `NaN`\n * - `Invalid Date`\n */\nexport function isValid(value) {\n    return value !== undefined\n        && value !== null\n        && !Object.is(value, NaN)\n        && !(value instanceof Date && value.toString() === \"Invalid Date\");\n}\n/**\n * Returns `true` is the given value is a plain object, that is, an object created by\n * the `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @example\n * ```ts\n * import { isPlainObject } from \"@ayonli/jsext/object\";\n *\n * console.log(isPlainObject({ foo: \"bar\" })); // true\n * console.log(isPlainObject(Object.create(null))); // true\n * console.log(isPlainObject(new Map([[\"foo\", \"bar\"]]))); // false\n * ```\n */\nexport function isPlainObject(value) {\n    if (typeof value !== \"object\" || value === null)\n        return false;\n    const proto = Object.getPrototypeOf(value);\n    return proto === null || proto.constructor === Object;\n}\n/**\n * Creates an object base on the original object but without any invalid values\n * (except for `null`), and trims the value if it's a string.\n *\n * **NOTE:** This function only operates on plain objects and arrays.\n *\n * @example\n * ```ts\n * import { sanitize } from \"@ayonli/jsext/object\";\n *\n * const obj = sanitize({\n *     foo: \"Hello\",\n *     bar: \"  World  \",\n *     baz: undefined,\n *     num: NaN,\n * });\n *\n * console.log(obj); // { foo: \"Hello\", bar: \"World\" }\n * ```\n */\nexport function sanitize(obj, deep = false, options = {}) {\n    const { removeNulls, removeEmptyStrings, removeEmptyObjects, removeArrayItems } = options;\n    return (function process(target, depth) {\n        if (typeof target === \"string\") {\n            return target.trim();\n        }\n        else if (Array.isArray(target)) {\n            const arr = !depth || deep ? target.map(item => process(item, depth + 1)) : target;\n            if (removeArrayItems) {\n                return arr.filter(value => {\n                    if (value === null) {\n                        return !removeNulls;\n                    }\n                    else if (value === \"\") {\n                        return !removeEmptyStrings;\n                    }\n                    else if (isValid(value)) {\n                        if (typeof value !== \"object\") {\n                            return true;\n                        }\n                        else if (Array.isArray(value)) {\n                            return value.length > 0 || !removeEmptyObjects;\n                        }\n                        else if (isPlainObject(value)) {\n                            return Reflect.ownKeys(value).length > 0 || !removeEmptyObjects;\n                        }\n                        else {\n                            return true;\n                        }\n                    }\n                    else {\n                        return false;\n                    }\n                });\n            }\n            else {\n                return arr;\n            }\n        }\n        else if (isPlainObject(target)) {\n            return !depth || deep ? Reflect.ownKeys(target).reduce((result, key) => {\n                const value = process(target[key], depth + 1);\n                if (value === null) {\n                    if (!removeNulls) {\n                        result[key] = value;\n                    }\n                }\n                else if (value === \"\") {\n                    if (!removeEmptyStrings) {\n                        result[key] = value;\n                    }\n                }\n                else if (isValid(value)) {\n                    if (typeof value !== \"object\") {\n                        result[key] = value;\n                    }\n                    else if (Array.isArray(value)) {\n                        if (value.length > 0 || !removeEmptyObjects) {\n                            result[key] = value;\n                        }\n                    }\n                    else if (isPlainObject(value)) {\n                        if (Reflect.ownKeys(value).length > 0 || !removeEmptyObjects) {\n                            result[key] = value;\n                        }\n                    }\n                    else {\n                        result[key] = value;\n                    }\n                }\n                return result;\n            }, target.constructor ? {} : Object.create(null)) : target;\n        }\n        else {\n            return target;\n        }\n    })(obj, 0);\n}\n/**\n * Creates an object with sorted keys (in ascending order) of the original object.\n *\n * **NOTE:** Symbol keys are not sorted and remain their original order.\n *\n * **NOTE:** This function only operates on plain objects and arrays.\n *\n * @example\n * ```ts\n * import { sortKeys } from \"@ayonli/jsext/object\";\n *\n * const obj = sortKeys({ foo: \"Hello\", bar: \"World\" });\n *\n * console.log(JSON.stringify(obj)); // { \"bar\": \"World\", \"foo\": \"Hello\" }\n * ```\n */\nexport function sortKeys(obj, deep = false) {\n    return (function process(target, depth) {\n        if (isPlainObject(target)) {\n            return !depth || deep ? [\n                ...Object.getOwnPropertyNames(target).sort(), // sort the string keys\n                ...Object.getOwnPropertySymbols(target)\n            ].reduce((result, key) => {\n                result[key] = process(target[key], depth + 1);\n                return result;\n            }, target.constructor ? {} : Object.create(null)) : target;\n        }\n        else if (Array.isArray(target)) {\n            return !depth || deep ? target.map(item => process(item, depth + 1)) : target;\n        }\n        else {\n            return target;\n        }\n    })(obj, 0);\n}\n/**\n * Create an object with flatted keys of the original object, the children\n * nodes' properties will be transformed to a string-represented path.\n *\n * **NOTE:** This function only operates on plain objects and arrays.\n *\n * @param depth Default value: `1`.\n * @example\n * ```ts\n * import { flatKeys } from \"@ayonli/jsext/object\";\n *\n * const obj = flatKeys({ foo: { bar: \"Hello\", baz: \"World\" } });\n *\n * console.log(obj); // { \"foo.bar\": \"Hello\", \"foo.baz\": \"World\" }\n * ```\n */\nexport function flatKeys(obj, depth = 1, options = {}) {\n    var _a;\n    const maxDepth = depth;\n    const carrier = obj.constructor ? {} : Object.create(null);\n    const flatArrayIndices = (_a = options === null || options === void 0 ? void 0 : options.flatArrayIndices) !== null && _a !== void 0 ? _a : false;\n    if (!isPlainObject(obj) && (!Array.isArray(obj) || !flatArrayIndices)) {\n        return obj;\n    }\n    (function process(target, path, depth) {\n        if (depth === maxDepth) {\n            carrier[path] = target;\n        }\n        else if (Array.isArray(target) && depth) {\n            if (!flatArrayIndices) {\n                carrier[path] = target;\n            }\n            else {\n                target.forEach((value, i) => {\n                    process(value, path ? `${path}.${i}` : String(i), path ? depth + 1 : depth);\n                });\n            }\n        }\n        else if (isPlainObject(target) || (Array.isArray(target) && !depth)) {\n            Reflect.ownKeys(target).forEach(key => {\n                const value = target[key];\n                if (typeof key === \"symbol\") {\n                    if (depth === 0) { // only allow top-level symbol properties\n                        carrier[key] = value;\n                    }\n                }\n                else {\n                    process(value, path ? `${path}.${key}` : key, path ? depth + 1 : depth);\n                }\n            });\n        }\n        else {\n            carrier[path] = target;\n        }\n    })(obj, \"\", 0);\n    return carrier;\n}\n/**\n * Returns a new record with all entries of the given record except the ones\n * that do not match the given predicate.\n *\n * This function is effectively as\n * `Object.fromEntries(Object.entries(obj).filter(predicate))`.\n *\n * @example\n * ```ts\n * import { filterEntries } from \"@ayonli/jsext/object\";\n *\n * const obj = { foo: \"Hello\", bar: \"World\" };\n * const result = filterEntries(obj, ([key]) => key === \"foo\");\n *\n * console.log(result); // { foo: \"Hello\" }\n * ```\n */\nexport function filterEntries(obj, predicate) {\n    return Object.fromEntries(Object.entries(obj).filter(predicate));\n}\n/**\n * Applies the given transformer to all entries in the given record and returns\n * a new record containing the results.\n *\n * This function is effectively as\n * `Object.fromEntries(Object.entries(obj).map(transformer))`.\n *\n * @example\n * ```ts\n * import { mapEntries } from \"@ayonli/jsext/object\";\n *\n * const obj = { foo: \"Hello\", bar: \"World\" };\n * const result = mapEntries(obj, ([key, value]) => [key, value.toUpperCase()]);\n *\n * console.log(result); // { foo: \"HELLO\", bar: \"WORLD\" }\n * ```\n */\nexport function mapEntries(obj, transformer) {\n    return Object.fromEntries(Object.entries(obj).map(transformer));\n}\n/**\n * Returns a tuple of two records with the first one containing all entries of\n * the given record that match the given predicate and the second one containing\n * all that do not.\n *\n * @example\n * ```ts\n * import { partitionEntries } from \"@ayonli/jsext/object\";\n *\n * const obj = { foo: \"Hello\", bar: \"World\" };\n * const [match, rest] = partitionEntries(obj, ([key]) => key === \"foo\");\n *\n * console.log(match); // { foo: \"Hello\" }\n * console.log(rest); // { bar: \"World\" }\n * ```\n */\nexport function partitionEntries(record, predicate) {\n    const match = {};\n    const rest = {};\n    const entries = Object.entries(record);\n    for (const [key, value] of entries) {\n        if (predicate([key, value])) {\n            match[key] = value;\n        }\n        else {\n            rest[key] = value;\n        }\n    }\n    return [match, rest];\n}\n/**\n * Composes a new record with all keys and values inverted.\n *\n * This function is effectively as\n * `Object.fromEntries(Object.entries(record).map(([key, value]) => [value, key]))`.\n *\n * @example\n * ```ts\n * import { invert } from \"@ayonli/jsext/object\";\n *\n * const obj = { foo: \"Hello\", bar: \"World\" };\n * const result = invert(obj);\n *\n * console.log(result); // { Hello: \"foo\", World: \"bar\" }\n * ```\n */\nexport function invert(record) {\n    return Object.fromEntries(Object.entries(record).map(([key, value]) => [value, key]));\n}\n//# sourceMappingURL=object.js.map"],"names":[],"mappings":"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"}
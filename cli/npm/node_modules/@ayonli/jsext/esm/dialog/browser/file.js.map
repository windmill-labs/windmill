{"version":3,"file":"file.js","sources":["../../../dialog/browser/file.ts"],"sourcesContent":["import { getExtensions } from \"../../filetype.ts\";\nfunction htmlAcceptToFileFilters(accept) {\n    const groups = [];\n    for (const type of accept.split(/\\s*,\\s*/)) {\n        if (type.endsWith(\"/*\")) {\n            groups.push(type);\n        }\n        else {\n            const group = groups[groups.length - 1];\n            if (!group || typeof group === \"string\") {\n                groups.push([type]);\n            }\n            else {\n                group.push(type);\n            }\n        }\n    }\n    return groups.map(group => {\n        if (Array.isArray(group)) {\n            return group.map(type => {\n                const extensions = getExtensions(type);\n                if (!extensions.length) {\n                    return undefined;\n                }\n                else {\n                    return {\n                        description: \"\",\n                        accept: {\n                            [type]: getExtensions(type),\n                        },\n                    };\n                }\n            });\n        }\n        else if (group === \"*/*\") {\n            return {\n                description: \"All Files\",\n                accept: {\n                    \"*/*\": [\"*\"],\n                }\n            };\n        }\n        else {\n            const extensions = getExtensions(group);\n            if (!extensions.length) {\n                return undefined;\n            }\n            else if (group === \"video/*\") {\n                return {\n                    description: \"Video Files\",\n                    accept: { [group]: extensions },\n                };\n            }\n            else if (group === \"audio/*\") {\n                return {\n                    description: \"Audio Files\",\n                    accept: { [group]: extensions },\n                };\n            }\n            else if (group === \"image/*\") {\n                return {\n                    description: \"Image Files\",\n                    accept: { [group]: extensions },\n                };\n            }\n            else if (group === \"text/*\") {\n                return {\n                    description: \"Text Files\",\n                    accept: { [group]: extensions },\n                };\n            }\n            else {\n                return {\n                    description: \"\",\n                    accept: { [group]: extensions },\n                };\n            }\n        }\n    }).flat().filter(item => !!item);\n}\nexport async function browserPickFile(type = \"\", options = {}) {\n    try {\n        if (options.forSave) {\n            return await globalThis[\"showSaveFilePicker\"]({\n                types: type ? htmlAcceptToFileFilters(type) : [],\n                suggestedName: options.defaultName,\n            });\n        }\n        else {\n            const [handle] = await globalThis[\"showOpenFilePicker\"]({\n                types: type ? htmlAcceptToFileFilters(type) : [],\n            });\n            return handle !== null && handle !== void 0 ? handle : null;\n        }\n    }\n    catch (err) {\n        if (err.name === \"AbortError\") {\n            return null;\n        }\n        else {\n            throw err;\n        }\n    }\n}\nexport async function browserPickFiles(type = \"\") {\n    try {\n        return await globalThis[\"showOpenFilePicker\"]({\n            types: type ? htmlAcceptToFileFilters(type) : [],\n            multiple: true,\n        });\n    }\n    catch (err) {\n        if (err.name === \"AbortError\") {\n            return [];\n        }\n        else {\n            throw err;\n        }\n    }\n}\nexport async function browserPickFolder() {\n    try {\n        return await globalThis[\"showDirectoryPicker\"]();\n    }\n    catch (err) {\n        if (err.name === \"AbortError\") {\n            return null;\n        }\n        else {\n            throw err;\n        }\n    }\n}\n//# sourceMappingURL=file.js.map"],"names":[],"mappings":"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"}
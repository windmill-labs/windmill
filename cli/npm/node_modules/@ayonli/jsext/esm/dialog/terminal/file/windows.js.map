{"version":3,"file":"windows.js","sources":["../../../../dialog/terminal/file/windows.ts"],"sourcesContent":["import { extname } from \"../../../path.ts\";\nimport { dedent, lines } from \"../../../string.ts\";\nimport { isWSL, powershell } from \"../../../cli.ts\";\nimport { getExtensions } from \"../../../filetype.ts\";\nimport { escape } from \"../util.ts\";\nfunction htmlAcceptToFileFilter(accept) {\n    const groups = [];\n    for (const type of accept.split(/\\s*,\\s*/)) {\n        if (type.endsWith(\"/*\")) {\n            groups.push(type);\n        }\n        else {\n            const group = groups[groups.length - 1];\n            if (!group || typeof group === \"string\") {\n                groups.push([type]);\n            }\n            else {\n                group.push(type);\n            }\n        }\n    }\n    return groups.map(group => {\n        if (Array.isArray(group)) {\n            const patterns = group.map(type => getExtensions(type).map(t => `*${t}`))\n                .flat()\n                .join(\";\");\n            return patterns + \"|\" + patterns;\n        }\n        else if (group === \"*/*\") {\n            return \"All Files|*\";\n        }\n        else {\n            const patterns = getExtensions(group).map(t => `*${t}`).join(\";\");\n            if (!patterns) {\n                return undefined;\n            }\n            else if (group === \"video/*\") {\n                return \"Video Files|\" + patterns;\n            }\n            else if (group === \"audio/*\") {\n                return \"Audio Files|\" + patterns;\n            }\n            else if (group === \"image/*\") {\n                return \"Image Files|\" + patterns;\n            }\n            else if (group === \"text/*\") {\n                return \"Text Files|\" + patterns;\n            }\n            else {\n                return patterns;\n            }\n        }\n    }).filter(Boolean).join(\"|\");\n}\nfunction createPowerShellScript(mode, title = \"\", options = {}) {\n    const { type, forSave, defaultName } = options;\n    if (mode === \"file\") {\n        if (forSave) {\n            let filter = type ? htmlAcceptToFileFilter(type) : \"\";\n            if (!filter && defaultName) {\n                const ext = extname(defaultName);\n                ext && (filter = htmlAcceptToFileFilter(ext));\n            }\n            return dedent `\n                Add-Type -AssemblyName System.Windows.Forms\n                $saveFileDialog = [System.Windows.Forms.SaveFileDialog]::new()\n                $saveFileDialog.Title = \"${escape(title)}\"\n                $saveFileDialog.FileName = \"${defaultName ? escape(defaultName) : \"\"}\"\n                $saveFileDialog.Filter = \"${filter}\"\n                if ($saveFileDialog.ShowDialog() -eq 'OK') {\n                    $saveFileDialog.FileName\n                }\n                `;\n        }\n        else {\n            const filter = type ? htmlAcceptToFileFilter(type) : \"\";\n            return dedent `\n                Add-Type -AssemblyName System.Windows.Forms\n                $openFileDialog = [System.Windows.Forms.OpenFileDialog]::new()\n                $openFileDialog.Title = \"${escape(title)}\"\n                $openFileDialog.Filter = \"${filter}\"\n                $openFileDialog.Multiselect = $false\n                $openFileDialog.ShowDialog() | Out-Null\n                $openFileDialog.FileName\n                `;\n        }\n    }\n    else if (mode === \"files\") {\n        const filter = type ? htmlAcceptToFileFilter(type) : \"\";\n        return dedent `\n            Add-Type -AssemblyName System.Windows.Forms\n            $openFileDialog = [System.Windows.Forms.OpenFileDialog]::new()\n            $openFileDialog.Title = \"${escape(title)}\"\n            $openFileDialog.Filter = \"${filter}\"\n            $openFileDialog.Multiselect = $true\n            $openFileDialog.ShowDialog() | Out-Null\n            $openFileDialog.FileNames -join \"\\n\"\n            `;\n    }\n    else {\n        return dedent `\n            Add-Type -AssemblyName System.Windows.Forms\n            $folderBrowserDialog = [System.Windows.Forms.FolderBrowserDialog]::new()\n            $folderBrowserDialog.Description = \"${escape(title)}\"\n            $folderBrowserDialog.ShowDialog() | Out-Null\n            $folderBrowserDialog.SelectedPath\n            `;\n    }\n}\nfunction refinePath(path) {\n    if (isWSL()) {\n        return \"/mnt/\"\n            + path.replace(/\\\\/g, \"/\").replace(/^([a-z]):/i, (_, $1) => $1.toLowerCase());\n    }\n    return path;\n}\nexport async function windowsPickFile(title = \"\", options = {}) {\n    const { code, stdout, stderr } = await powershell(createPowerShellScript(\"file\", title, options));\n    if (!code) {\n        const path = stdout.trim();\n        return path ? refinePath(path) : null;\n    }\n    else {\n        throw new Error(stderr);\n    }\n}\nexport async function windowsPickFiles(title = \"\", type = \"\") {\n    const { code, stdout, stderr } = await powershell(createPowerShellScript(\"files\", title, { type }));\n    if (!code) {\n        const output = stdout.trim();\n        return output ? lines(stdout.trim()).map(refinePath) : [];\n    }\n    else {\n        throw new Error(stderr);\n    }\n}\nexport async function windowsPickFolder(title = \"\") {\n    const { code, stdout, stderr } = await powershell(createPowerShellScript(\"folder\", title));\n    if (!code) {\n        const dir = stdout.trim();\n        return dir ? refinePath(dir) : null;\n    }\n    else {\n        throw new Error(stderr);\n    }\n}\n//# sourceMappingURL=windows.js.map"],"names":[],"mappings":"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"}
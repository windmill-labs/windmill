{"version":3,"file":"util.js","sources":["../../http/util.ts"],"sourcesContent":["/**\n * Utility functions for handling HTTP related tasks, such as parsing headers.\n * @module\n * @experimental\n */\nimport bytes, { text } from \"../bytes.ts\";\nimport { capitalize } from \"../string.ts\";\nexport * from \"./user-agent.ts\";\n/**\n * Parses the `Accept`, `Accept-Encoding` and `Accept-Language` headers.\n *\n * NOTE: This function automatically sorts the results by the q-factor value in\n * descending order.\n *\n * @example\n * ```ts\n * import { parseAccepts } from \"@ayonli/jsext/http\";\n *\n * const accepts = parseAccepts(\"text/html,application/xhtml+xml;q=0.9\");\n * console.log(accepts);\n * // [\n * //     { value: \"text/html\", weight: 1 },\n * //     { value: \"application/xhtml+xml\", weight: 0.9 }\n * // ]\n *\n * const acceptEncodings = parseAccepts(\"gzip, deflate, br;q=0.8\");\n * console.log(acceptEncodings);\n * // [\n * //     { value: \"gzip\", weight: 1 },\n * //     { value: \"deflate\", weight: 1 },\n * //     { value: \"br\", weight: 0.8 }\n * // ]\n *\n * const acceptLanguages = parseAccepts(\"en-US,en;q=0.9\");\n * console.log(acceptLanguages);\n * // [\n * //     { value: \"en-US\", weight: 1 },\n * //     { value: \"en\", weight: 0.9 }\n * // ]\n * ```\n */\nexport function parseAccepts(str) {\n    return str.split(\",\").map((type) => {\n        const [value, weight] = type.split(\";q=\");\n        return {\n            type: value.trim(),\n            weight: weight ? parseFloat(weight) : 1,\n        };\n    }).sort((a, b) => b.weight - a.weight);\n}\n/**\n * Parses the `Content-Type` header.\n *\n * @example\n * ```ts\n * import { parseContentType } from \"@ayonli/jsext/http\";\n *\n * const type = parseContentType(\"text/html; charset=utf-8\");\n * console.log(type);\n * // { type: \"text/html\", charset: \"utf-8\" }\n *\n * const type2 = parseContentType(\"multipart/form-data; boundary=----WebKitFormBoundaryzjK4sVZ2QeZvz5zB\");\n * console.log(type2);\n * // { type: \"multipart/form-data\", boundary: \"----WebKitFormBoundaryzjK4sVZ2QeZvz5zB\" }\n * ```\n */\nexport function parseContentType(str) {\n    const [type, ...params] = str.split(\";\").map((part) => part.trim());\n    if (!(type === null || type === void 0 ? void 0 : type.includes(\"/\"))) {\n        throw new TypeError(\"Invalid Content-Type header\");\n    }\n    const parsed = { type: type };\n    for (const param of params) {\n        if (param) {\n            const [key, value] = param.split(\"=\");\n            if (key === \"charset\") {\n                parsed.charset = value !== null && value !== void 0 ? value : \"\";\n            }\n            else if (key === \"boundary\") {\n                parsed.boundary = value !== null && value !== void 0 ? value : \"\";\n            }\n        }\n    }\n    return parsed;\n}\n/**\n * Parses the `Set-Cookie` header.\n *\n * @example\n * ```ts\n * import { parseCookie } from \"@ayonli/jsext/http\";\n *\n * const cookie = parseCookie(\"foo=bar; Domain=example.com; Path=/; Expires=Wed, 09 Jun 2021 10:18:14 GMT; HttpOnly; Secure; SameSite=Strict\");\n * console.log(cookie);\n * // {\n * //     name: \"foo\",\n * //     value: \"bar\",\n * //     domain: \"example.com\",\n * //     path: \"/\",\n * //     expires: 1623233894000,\n * //     httpOnly: true,\n * //     secure: true,\n * //     sameSite: \"strict\"\n * // }\n * ```\n */\nexport function parseCookie(str) {\n    const [nameValue, ...params] = str.split(\";\").map((part) => part.trim());\n    if (!nameValue || !nameValue.includes(\"=\")) {\n        throw new TypeError(\"Invalid Set-Cookie header\");\n    }\n    const [name, value] = nameValue.split(\"=\");\n    const cookie = { name: name, value: value };\n    for (const param of params) {\n        if (param) {\n            const [key, value = \"\"] = param.split(\"=\");\n            if (key === \"Domain\") {\n                cookie.domain = value;\n            }\n            else if (key === \"Expires\") {\n                cookie.expires = new Date(value).valueOf();\n            }\n            else if (key === \"Max-Age\") {\n                cookie.maxAge = parseInt(value);\n            }\n            else if (key === \"HttpOnly\") {\n                cookie.httpOnly = true;\n            }\n            else if (key === \"Secure\") {\n                cookie.secure = true;\n            }\n            else if (key === \"Path\") {\n                cookie.path = value || \"/\";\n            }\n            else if (key === \"SameSite\" && value) {\n                cookie.sameSite = value.toLowerCase();\n            }\n            else if (key === \"Partitioned\") {\n                cookie.partitioned = true;\n            }\n        }\n    }\n    return cookie;\n}\n/**\n * Converts a {@link Cookie} object to a string.\n *\n * @example\n * ```ts\n * import { stringifyCookie } from \"@ayonli/jsext/http\";\n *\n * const cookie = stringifyCookie({\n *     name: \"foo\",\n *     value: \"bar\",\n *     domain: \"example.com\",\n *     path: \"/\",\n *     expires: new Date(\"2021-06-09T10:18:14Z\"),\n *     httpOnly: true,\n *     secure: true,\n *     sameSite: \"Strict\"\n * });\n * console.log(cookie);\n * // foo=bar; Domain=example.com; Path=/; Expires=Wed, 09 Jun 2021 10:18:14 GMT; HttpOnly; Secure; SameSite=Strict\n */\nexport function stringifyCookie(cookie) {\n    let str = `${cookie.name}=${cookie.value}`;\n    if (cookie.domain)\n        str += `; Domain=${cookie.domain}`;\n    if (cookie.path)\n        str += `; Path=${cookie.path}`;\n    if (cookie.expires)\n        str += `; Expires=${new Date(cookie.expires).toUTCString()}`;\n    if (cookie.maxAge)\n        str += `; Max-Age=${cookie.maxAge}`;\n    if (cookie.httpOnly)\n        str += \"; HttpOnly\";\n    if (cookie.secure)\n        str += \"; Secure\";\n    if (cookie.sameSite)\n        str += `; SameSite=${capitalize(cookie.sameSite)}`;\n    if (cookie.partitioned)\n        str += \"; Partitioned\";\n    return str;\n}\n/**\n * Parses the `Cookie` header or the `document.cookie` property.\n */\nexport function parseCookies(str) {\n    return !str ? [] : str.split(/;\\s*/g).reduce((cookies, part) => {\n        const [name, value] = part.split(\"=\");\n        if (name && value !== undefined) {\n            cookies.push({ name, value });\n        }\n        return cookies;\n    }, []);\n}\n/**\n * Converts a list of cookies to a string that can be used in the `Cookie`\n * header.\n */\nexport function stringifyCookies(cookies) {\n    return cookies.map(({ name, value }) => `${name}=${value}`).join(\"; \");\n}\n/**\n * Gets the cookies from the `Cookie` header of the request or the `Set-Cookie`\n * header of the response.\n *\n * @example\n * ```ts\n * import { getCookies } from \"@ayonli/jsext/http\";\n *\n * export default {\n *     fetch(req: Request) {\n *         const cookies = getCookies(req);\n *         console.log(cookies);\n *\n *         return new Response(\"Hello, World!\");\n *     }\n * }\n * ```\n */\nexport function getCookies(obj) {\n    var _a;\n    if (\"ok\" in obj && \"status\" in obj) {\n        return obj.headers.getSetCookie().map(str => parseCookie(str));\n    }\n    else {\n        return parseCookies((_a = obj.headers.get(\"Cookie\")) !== null && _a !== void 0 ? _a : \"\");\n    }\n}\n/**\n * Gets the cookie by the given `name` from the `Cookie` header of the request\n * or the `Set-Cookie` header of the response.\n *\n * @example\n * ```ts\n * import { getCookie } from \"@ayonli/jsext/http\";\n *\n * export default {\n *     fetch(req: Request) {\n *         const cookie = getCookie(req, \"foo\");\n *         console.log(cookie);\n *\n *         return new Response(\"Hello, World!\");\n *     }\n * }\n * ```\n */\nexport function getCookie(obj, name) {\n    var _a;\n    return (_a = getCookies(obj).find(cookie => cookie.name === name)) !== null && _a !== void 0 ? _a : null;\n}\n/**\n * Sets a cookie in the `Set-Cookie` header of the response.\n *\n * NOTE: This function can be used with both {@link Response} and {@link Headers}\n * objects. However, when using with a `Headers` instance, make sure to set the\n * cookie before the headers instance is used by the response object.\n *\n * @example\n * ```ts\n * import { setCookie } from \"@ayonli/jsext/http\";\n *\n * export default {\n *     fetch(req: Request) {\n *         const res = new Response(\"Hello, World!\");\n *         setCookie(res, { name: \"hello\", value: \"world\" });\n *\n *         return res;\n *     }\n * }\n * ```\n */\nexport function setCookie(res, cookie) {\n    if (res instanceof Headers) {\n        res.append(\"Set-Cookie\", stringifyCookie(cookie));\n    }\n    else {\n        res.headers.append(\"Set-Cookie\", stringifyCookie(cookie));\n    }\n}\n/**\n * Sets the `Content-Disposition` header with the given filename when the\n * response is intended to be downloaded.\n *\n * This function encodes the filename with {@link encodeURIComponent} and sets\n * both the `filename` and the `filename*` parameters in the header for maximum\n * compatibility.\n *\n * NOTE: This function can be used with both {@link Response} and {@link Headers}\n * objects. However, when using with a `Headers` instance, make sure to set the\n * filename before the headers instance is used by the response object.\n *\n * @example\n * ```ts\n * import { setFilename } from \"@ayonli/jsext/http\";\n *\n * export default {\n *     fetch(req: Request) {\n *         const res = new Response(\"Hello, World!\");\n *         setFilename(res, \"hello.txt\");\n *\n *        return res;\n *     }\n * }\n * ```\n */\nexport function setFilename(res, filename) {\n    filename = encodeURIComponent(filename);\n    const disposition = `attachment; filename=\"${filename}\"; filename*=UTF-8''${filename}`;\n    if (res instanceof Headers) {\n        res.set(\"Content-Disposition\", disposition);\n    }\n    else {\n        res.headers.set(\"Content-Disposition\", disposition);\n    }\n}\n/**\n * Parses the `Range` header.\n *\n * @example\n * ```ts\n * import { parseRange } from \"@ayonli/jsext/http\";\n *\n * const range = parseRange(\"bytes=0-499\");\n * console.log(range);\n * // { unit: \"bytes\", ranges: [{ start: 0, end: 499 }] }\n *\n * const range2 = parseRange(\"bytes=0-499,1000-1499\");\n * console.log(range2);\n * // { unit: \"bytes\", ranges: [{ start: 0, end: 499 }, { start: 1000, end: 1499 }] }\n *\n * const range3 = parseRange(\"bytes=2000-\");\n * console.log(range3);\n * // { unit: \"bytes\", ranges: [{ start: 2000 }] }\n *\n * const range4 = parseRange(\"bytes=-500\");\n * console.log(range4);\n * // { unit: \"bytes\", ranges: [], suffix: 500 }\n * ```\n */\nexport function parseRange(str) {\n    if (!str.includes(\"=\")) {\n        throw new TypeError(\"Invalid Range header\");\n    }\n    const [unit, ranges] = str.split(\"=\").map((part) => part.trim());\n    const parsed = { unit: unit, ranges: [] };\n    for (const range of ranges.split(\",\")) {\n        if (!range || !range.includes(\"-\"))\n            continue;\n        const [start, end] = range.split(\"-\").map((part) => part.trim());\n        if (!start && !end) {\n            continue;\n        }\n        else if (!start) {\n            parsed.suffix = parseInt(end);\n        }\n        else if (!end) {\n            parsed.ranges.push({ start: parseInt(start) });\n        }\n        else {\n            parsed.ranges.push({ start: parseInt(start), end: parseInt(end) });\n        }\n    }\n    if ((!parsed.ranges.length && !parsed.suffix) ||\n        parsed.ranges.some((range) => range.start < 0 || (range.end && range.end <= range.start))) {\n        throw new TypeError(\"Invalid Range header\");\n    }\n    return parsed;\n}\n/**\n * Checks if the value from the `If-Match` header matches the given ETag.\n *\n * NOTE: Weak tags cannot be matched and will return `false`.\n *\n * @example\n * ```ts\n * import { etag, ifMatch } from \"@ayonli/jsext/http\";\n *\n * const _etag = await etag(\"Hello, World!\");\n * const match = ifMatch(\"d-3/1gIbsr1bCvZ2KQgJ7DpTGR3YH\", _etag);\n * console.log(match); // true\n * ```\n */\nexport function ifMatch(value, etag) {\n    // Weak tags cannot be matched and return false.\n    if (!value || etag.startsWith(\"W/\")) {\n        return false;\n    }\n    if (value.trim() === \"*\") {\n        return true;\n    }\n    const tags = value.split(/\\s*,\\s*/);\n    return tags.includes(etag);\n}\n/**\n * Checks if the value from the `If-None-Match` header matches the given ETag.\n *\n * @example\n * ```ts\n * import { etag, ifNoneMatch } from \"@ayonli/jsext/http\";\n *\n * const _etag = await etag(\"Hello, World!\");\n * const match = ifNoneMatch(\"d-3/1gIbsr1bCvZ2KQgJ7DpTGR3YH\", _etag);\n * console.log(match); // false\n * ```\n */\nexport function ifNoneMatch(value, etag) {\n    if (!value) {\n        return true;\n    }\n    if (value.trim() === \"*\") {\n        return false;\n    }\n    const tags = value.split(/\\s*,\\s*/).map((tag) => tag.startsWith(\"W/\") ? tag.slice(2) : tag);\n    return !tags.includes(etag);\n}\n/**\n * Parses the `Authorization` header with the `Basic` scheme.\n *\n * @example\n * ```ts\n * import { parseBasicAuth } from \"@ayonli/jsext/http\";\n *\n * const auth = parseBasicAuth(\"Basic cm9vdDpwYSQkdzByZA==\");\n * console.log(auth);\n * // { username: \"root\", password: \"pa$$w0rd\" }\n * ```\n */\nexport function parseBasicAuth(str) {\n    const parts = str.split(\" \");\n    const scheme = parts[0].toLowerCase();\n    const credentials = parts.slice(1).join(\" \");\n    if (!scheme || !credentials) {\n        throw new TypeError(\"Invalid Authorization header\");\n    }\n    else if (scheme !== \"basic\") {\n        throw new TypeError(\"Authorization scheme is not 'Basic'\");\n    }\n    else {\n        const [username, password] = text(bytes(credentials, \"base64\")).split(\":\");\n        return { username: username, password: password };\n    }\n}\n/**\n * Performs basic authentication verification for the request. When passed, this\n * function returns nothing (`undefined`), otherwise it returns a `Response`\n * with status `401 Unauthorized`, which should be responded to the client.\n *\n * @example\n * ```ts\n * import { verifyBasicAuth, type BasicAuthorization } from \"@ayonli/jsext/http\";\n *\n * const users = new Map([\n *    [\"root\", \"pa$$w0rd\"]\n * ]);\n *\n * async function verify(auth: BasicAuthorization) {\n *     const password = users.get(auth.username);\n *     return !!password && password === auth.password;\n * }\n *\n * export default {\n *     async fetch(req) {\n *         const res = await verifyBasicAuth(req, verify);\n *\n *         if (res) {\n *             return res;\n *         }\n *\n *         // continue with the request\n *     },\n * };\n * ```\n */\nexport async function verifyBasicAuth(req, verify) {\n    const auth = req.headers.get(\"Authorization\");\n    if (auth === null || auth === void 0 ? void 0 : auth.startsWith(\"Basic \")) {\n        try {\n            const credentials = parseBasicAuth(auth);\n            const ok = await verify(credentials);\n            if (ok) {\n                return;\n            }\n        }\n        catch (_a) { }\n    }\n    const { host } = new URL(req.url);\n    return new Response(\"Unauthorized\", {\n        status: 401,\n        statusText: \"Unauthorized\",\n        headers: {\n            \"WWW-Authenticate\": `Basic realm=\"${host}\"`,\n        },\n    });\n}\nexport const HTTP_METHODS = [\n    \"GET\",\n    \"HEAD\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"CONNECT\",\n    \"OPTIONS\",\n    \"TRACE\",\n    \"PATCH\",\n];\nexport const HTTP_STATUS = {\n    200: \"OK\",\n    201: \"Created\",\n    202: \"Accepted\",\n    204: \"No Content\",\n    206: \"Partial Content\",\n    301: \"Moved Permanently\",\n    302: \"Found\",\n    304: \"Not Modified\",\n    400: \"Bad Request\",\n    401: \"Unauthorized\",\n    403: \"Forbidden\",\n    404: \"Not Found\",\n    405: \"Method Not Allowed\",\n    406: \"Not Acceptable\",\n    408: \"Request Timeout\",\n    409: \"Conflict\",\n    410: \"Gone\",\n    413: \"Payload Too Large\",\n    414: \"URI Too Long\",\n    415: \"Unsupported Media Type\",\n    416: \"Range Not Satisfiable\",\n    417: \"Expectation Failed\",\n    426: \"Upgrade Required\",\n    500: \"Internal Server Error\",\n    501: \"Not Implemented\",\n    502: \"Bad Gateway\",\n    503: \"Service Unavailable\",\n    504: \"Gateway Timeout\",\n    505: \"HTTP Version Not Supported\",\n};\nfunction parseMessage(message) {\n    const headerEnd = message.indexOf(\"\\r\\n\\r\\n\");\n    if (headerEnd === -1) {\n        throw new TypeError(\"Invalid message\");\n    }\n    const headers = new Headers();\n    const headerLines = message.slice(0, headerEnd).split(\"\\r\\n\");\n    for (let i = 0; i < headerLines.length; i++) {\n        const line = headerLines[i];\n        const lineNum = i + 1;\n        const index = line.indexOf(\":\");\n        if (index === -1) {\n            throw new SyntaxError(\"Invalid token in line \" + lineNum);\n        }\n        const name = line.slice(0, index);\n        const value = line.slice(index + 1).trim();\n        try {\n            headers.append(name, value);\n        }\n        catch (_a) {\n            throw new TypeError(`Invalid header name '${name}' in line ${lineNum}`);\n        }\n    }\n    const body = message.slice(headerEnd + 4);\n    return { headers, body };\n}\n/**\n * Parses the text message as an HTTP request.\n *\n * **NOTE:** This function only supports HTTP/1.1 protocol.\n *\n * @example\n * ```ts\n * // GET example\n * import { parseRequest } from \"@ayonli/jsext/http\";\n *\n * const message = \"GET /foo HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\";\n * const req = parseRequest(message);\n *\n * console.log(req.method); // \"GET\"\n * console.log(req.url); // \"http://example.com/foo\"\n * console.log(req.headers.get(\"Host\")); // \"example.com\"\n * ```\n *\n * @example\n * ```ts\n * // POST example\n * import { parseRequest } from \"@ayonli/jsext/http\";\n *\n * const message = \"POST /foo HTTP/1.1\\r\\n\"\n *     + \"Host: example.com\\r\\n\"\n *     + \"Content-Type: application/x-www-form-urlencoded\\r\\n\"\n *     + \"Content-Length: 19\\r\\n\"\n *     + \"\\r\\n\"\n *     + \"foo=hello&bar=world\";\n * const req = parseRequest(message);\n *\n * console.log(req.method); // \"POST\"\n * console.log(req.url); // \"http://example.com/foo\"\n * console.log(req.headers.get(\"Host\")); // \"example.com\"\n *\n * const form = new URLSearchParams(await req.text());\n *\n * console.log(form.get(\"foo\")); // \"hello\"\n * console.log(form.get(\"bar\")); // \"world\"\n * ```\n */\nexport function parseRequest(message) {\n    var _a;\n    let lineEnd = message.indexOf(\"\\r\\n\");\n    if (lineEnd === -1) {\n        throw new TypeError(\"Invalid message\");\n    }\n    const [method, url, version] = message.slice(0, lineEnd).split(/\\s+/);\n    if (!method || !HTTP_METHODS.includes(method) ||\n        !url || !url.startsWith(\"/\") ||\n        !(version === null || version === void 0 ? void 0 : version.startsWith(\"HTTP/\"))) {\n        throw new TypeError(\"Invalid message\");\n    }\n    else if (version !== \"HTTP/1.1\") {\n        throw new TypeError(\"Unsupported HTTP version\");\n    }\n    const { headers, body: _body } = parseMessage(message.slice(lineEnd + 2));\n    let body = _body;\n    if (method === \"GET\" || method === \"HEAD\") {\n        if (body) {\n            throw new TypeError(\"Request with GET/HEAD method cannot have body.\");\n        }\n        else {\n            body = null;\n        }\n    }\n    const host = (_a = headers.get(\"Host\")) !== null && _a !== void 0 ? _a : \"\";\n    return new Request(\"http://\" + host + url, {\n        method,\n        headers,\n        body,\n    });\n}\n/**\n * Parses the text message as an HTTP response.\n *\n * @example\n * ```ts\n * import { parseResponse } from \"@ayonli/jsext/http\";\n *\n * const message = \"HTTP/1.1 200 OK\\r\\n\"\n *     + \"Content-Type: text/plain\\r\\n\"\n *     + \"Content-Length: 12\\r\\n\"\n *     + \"\\r\\n\"\n *     + \"Hello, World!\";\n *\n * const res = parseResponse(message);\n *\n * console.log(res.status); // 200\n * console.log(res.statusText); // \"OK\"\n * console.log(res.headers.get(\"Content-Type\")); // \"text/plain\"\n *\n * const text = await res.text();\n * console.log(text); // \"Hello, World!\"\n * ```\n */\nexport function parseResponse(message) {\n    let lineEnd = message.indexOf(\"\\r\\n\");\n    if (lineEnd === -1) {\n        throw new TypeError(\"Invalid message\");\n    }\n    const [version, _status, ...statusTexts] = message.slice(0, lineEnd).split(/\\s+/);\n    const statusText = statusTexts.join(\" \");\n    let status;\n    if (!(version === null || version === void 0 ? void 0 : version.startsWith(\"HTTP/\")) ||\n        !_status || !Number.isInteger((status = Number(_status))) ||\n        !statusText) {\n        throw new TypeError(\"Invalid message\");\n    }\n    const { headers, body: _body } = parseMessage(message.slice(lineEnd + 2));\n    let body = _body;\n    if (status === 204 || status === 304) {\n        if (body) {\n            throw new SyntaxError(\"Response with 204 or 304 status cannot have body.\");\n        }\n        else {\n            body = null;\n        }\n    }\n    return new Response(body, {\n        status,\n        statusText,\n        headers,\n    });\n}\n/**\n * Converts the request object to text format.\n *\n * @example\n * ```ts\n * // GET example\n * import { stringifyRequest } from \"@ayonli/jsext/http\";\n *\n * const req = new Request(\"http://example.com/foo\");\n * const message = await stringifyRequest(req);\n *\n * console.log(message);\n * // \"GET /foo HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\"\n * ```\n *\n * @example\n * ```ts\n * // POST example\n * import { stringifyRequest } from \"@ayonli/jsext/http\";\n *\n * const req = new Request(\"http://example.com/foo\", {\n *     method: \"POST\",\n *     headers: {\n *         \"Content-Type\": \"application/x-www-form-urlencoded\",\n *     },\n *     body: \"foo=hello&bar=world\",\n * });\n * const message = await stringifyRequest(req);\n *\n * console.log(message);\n * // \"POST /foo HTTP/1.1\\r\\n\" +\n * // \"Host: example.com\\r\\n\" +\n * // \"Content-Type: application/x-www-form-urlencoded\\r\\n\" +\n * // \"Content-Length: 19\\r\\n\" +\n * // \"\\r\\n\" +\n * // \"foo=hello&bar=world\"\n * ```\n */\nexport async function stringifyRequest(req) {\n    const { host, pathname } = new URL(req.url);\n    let message = `${req.method} ${pathname} HTTP/1.1\\r\\n`;\n    let body = req.body ? await req.text() : \"\";\n    if (host && !req.headers.has(\"Host\")) {\n        message += `Host: ${host}\\r\\n`;\n    }\n    for (const [name, value] of req.headers) {\n        message += `${capitalize(name, true)}: ${value}\\r\\n`;\n    }\n    if (body && !req.headers.has(\"Content-Length\")) {\n        message += `Content-Length: ${bytes(body).length}\\r\\n`;\n    }\n    message += \"\\r\\n\" + body;\n    return message;\n}\n/**\n * Converts the response object to text format.\n *\n * @example\n * ```ts\n * import { stringifyResponse } from \"@ayonli/jsext/http\";\n *\n * const res = new Response(\"Hello, World!\", {\n *     headers: {\n *         \"Content-Type\": \"text/plain\",\n *     },\n * });\n * const message = await stringifyResponse(res);\n *\n * console.log(message);\n * // \"HTTP/1.1 200 OK\\r\\n\" +\n * // \"Content-Type: text/plain\\r\\n\" +\n * // \"Content-Length: 12\\r\\n\" +\n * // \"\\r\\n\" +\n * // \"Hello, World!\"\n * ```\n */\nexport async function stringifyResponse(res) {\n    const statusText = res.statusText || HTTP_STATUS[res.status] || \"\";\n    let message = `HTTP/1.1 ${res.status} ${statusText}\\r\\n`;\n    let body = res.body ? await res.text() : \"\";\n    for (const [name, value] of res.headers) {\n        message += `${capitalize(name, true)}: ${value}\\r\\n`;\n    }\n    if (body && !res.headers.has(\"Content-Length\")) {\n        message += `Content-Length: ${bytes(body).length}\\r\\n`;\n    }\n    message += \"\\r\\n\" + body;\n    return message;\n}\n/**\n * Gets the suggested response type for the request.\n *\n * This function checks the `Accept` or the `Content-Type` header of the request,\n * or the request method, or other factors to determine the most suitable\n * response type for the client.\n *\n * For example, when requesting an article which is stored in markdown, the\n * server can respond an HTML page for the browser, a plain text for the\n * terminal, or a JSON object for the API client.\n *\n * This function returns the following response types:\n *\n * - `text`: plain text content (default)\n * - `html`: an HTML page\n * - `xml`: an XML document\n * - `json`: a JSON object\n * - `stream`: text stream or binary stream, depending on the use case\n * - `none`: no content should be sent, such as for a `HEAD` request\n *\n * @example\n * ```ts\n * import { suggestResponseType } from \"@ayonli/jsext/http\";\n *\n * export default {\n *     async fetch(req: Request) {\n *         const type = suggestResponseType(req);\n *\n *         if (type === \"text\") {\n *              return new Response(\"Hello, World!\");\n *         } else if (type === \"html\") {\n *              return new Response(\"<h1>Hello, World!</h1>\", {\n *                  headers: { \"Content-Type\": \"text/html\" },\n *              });\n *         } else if (type === \"xml\") {\n *              return new Response(\"<xml><message>Hello, World!</message></xml>\", {\n *                  headers: { \"Content-Type\": \"application/xml\" },\n *              });\n *         } else if (type === \"json\") {\n *              return new Response(JSON.stringify({ message: \"Hello, World!\" }), {\n *                  headers: { \"Content-Type\": \"application/json\" },\n *              });\n *         } else {\n *             return new Response(null, { status: 204 });\n *         }\n *     }\n * }\n * ```\n */\nexport function suggestResponseType(req) {\n    var _a;\n    const accepts = req.headers.get(\"Accept\");\n    const accept = accepts\n        ? (_a = parseAccepts(accepts).sort((a, b) => b.weight - a.weight)[0]) === null || _a === void 0 ? void 0 : _a.type\n        : null;\n    const acceptAll = !accept || accept === \"*/*\";\n    const contentType = req.headers.get(\"Content-Type\");\n    const fetchDest = req.headers.get(\"Sec-Fetch-Dest\") || req.destination;\n    const xhr = req.headers.get(\"X-Requested-With\") === \"XMLHttpRequest\";\n    if (req.method === \"HEAD\" || req.method === \"OPTIONS\") {\n        return \"none\";\n    }\n    else if ((accept === null || accept === void 0 ? void 0 : accept.includes(\"text/event-stream\"))\n        || (accept === null || accept === void 0 ? void 0 : accept.includes(\"application/octet-stream\"))\n        || (accept === null || accept === void 0 ? void 0 : accept.includes(\"multipart/form-data\"))\n        || /(image|audio|video)\\//.test(accept !== null && accept !== void 0 ? accept : \"\")\n        || [\"font\", \"image\", \"audio\", \"video\", \"object\", \"embed\"].includes(fetchDest)) {\n        return \"stream\";\n    }\n    else if ((accept === null || accept === void 0 ? void 0 : accept.includes(\"/json\"))\n        || (acceptAll && ((contentType === null || contentType === void 0 ? void 0 : contentType.includes(\"json\")) || xhr))\n        || fetchDest === \"manifest\") {\n        return \"json\";\n    }\n    else if ((accept === null || accept === void 0 ? void 0 : accept.includes(\"/xml\"))\n        || (acceptAll && (contentType === null || contentType === void 0 ? void 0 : contentType.includes(\"xml\")))\n        || fetchDest === \"xslt\") {\n        return \"xml\";\n    }\n    else if ((accept === null || accept === void 0 ? void 0 : accept.includes(\"/html\"))\n        || fetchDest === \"document\") {\n        return \"html\";\n    }\n    else {\n        const { pathname } = new URL(req.url);\n        if (pathname === \"/api\" ||\n            pathname.startsWith(\"/api/\") ||\n            /\\.json?$/i.test(pathname)) {\n            return \"json\";\n        }\n        else if (/\\.xml$/i.test(pathname)) {\n            return \"xml\";\n        }\n        else if (/\\.html?$/i.test(pathname)) {\n            return \"html\";\n        }\n        else {\n            return \"text\";\n        }\n    }\n}\n//# sourceMappingURL=util.js.map"],"names":[],"mappings":"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"}
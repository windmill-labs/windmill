{"version":3,"file":"common.js","sources":["../../cli/common.ts"],"sourcesContent":["/**\n * Useful utility functions for interacting with the terminal.\n *\n * NOTE: Despite the name of this module, many of its functions can also be used\n * in the browser environment.\n * @module\n * @experimental\n */\nimport { isFullWidth, isWide } from \"../external/code-point-utils/index.ts\";\nimport { byteLength, chars } from \"../string.ts\";\nimport { EMOJI_CHAR } from \"../string/constants.ts\";\nimport bytes, { equals } from \"../bytes.ts\";\nimport { isBrowserWindow, isDeno, isNodeLike } from \"../env.ts\";\nimport { platform } from \"../runtime.ts\";\nimport { sum } from \"../math.ts\";\nimport { Mutex } from \"../lock.ts\";\nimport { ControlKeys, ControlSequences, FunctionKeys, NavigationKeys, } from \"./constants.ts\";\nexport { ControlKeys, ControlSequences, FunctionKeys, NavigationKeys, };\nconst NonTypingKeys = [\n    ...Object.values(ControlKeys),\n    ...Object.values(NavigationKeys),\n    ...Object.values(FunctionKeys),\n];\n/**\n * The command-line arguments passed to the program.\n *\n * This variable is the same as `Deno.args` in Deno and `process.argv.slice(2)`\n * in Node.js or Bun.\n *\n * @example\n * ```ts\n * // main.ts\n * // launch with `deno run main.ts --name=Bob --age=30`\n * // or `node main.js --name=Bob --age=30`\n * // or `bun run main.ts --name=Bob --age=30`\n * import { args } from \"@ayonli/jsext/cli\";\n *\n * console.log(args);\n * // [\n * //     \"--name=Bob\",\n * //     \"--age=30\"\n * // ]\n * ```\n */\nexport const args = (() => {\n    if (isDeno) {\n        return Deno.args;\n    }\n    else if (isNodeLike) {\n        return process.argv.slice(2);\n    }\n    else {\n        return [];\n    }\n})();\n/**\n * Whether the standard IO is a text terminal.\n */\nexport const isTTY = (() => {\n    if (isDeno) {\n        return Deno.stdin.isTerminal();\n    }\n    else if (isNodeLike) {\n        return process.stdin.isTTY;\n    }\n    else {\n        return false;\n    }\n})();\n/**\n * Returns the width of a single character.\n *\n * @example\n * ```ts\n * import { charWidth } from \"@ayonli/jsext/cli\";\n *\n * console.log(charWidth(\"a\")); // 1\n * console.log(charWidth(\"你\")); // 2\n * console.log(charWidth(\"👋\")); // 2\n * console.log(charWidth(\"♥\")); // 1\n * ```\n */\nexport function charWidth(char) {\n    if (EMOJI_CHAR.test(char)) {\n        const _bytes = byteLength(char);\n        // Most emojis are 4 bytes wide, but some are 3 bytes in Windows/Linux,\n        // and 6 bytes in macOS.\n        return _bytes === 3 || _bytes === 6 ? 1 : 2;\n    }\n    else if (isWide(char.codePointAt(0)) || isFullWidth(char.codePointAt(0))) {\n        return 2;\n    }\n    else {\n        return 1;\n    }\n}\n/**\n * Returns the width of a string.\n *\n * @example\n * ```ts\n * import { stringWidth } from \"@ayonli/jsext/cli\";\n *\n * console.log(stringWidth(\"Hello, World!\")); // 13\n * console.log(stringWidth(\"你好，世界！\")); // 12\n * console.log(stringWidth(\"👋🌍🚀♥️♣\")); // 8\n * ```\n */\nexport function stringWidth(str) {\n    return sum(...chars(str).map(charWidth));\n}\nconst stdinMutex = new Mutex(1);\n/**\n * Requests the standard input to be used only by the given task until it is\n * completed.\n *\n * This function sets the `stdin` in raw mode, and excludes other parts of the\n * program from reading from it at the same time . This is important so that our\n * program won't be affected by other tasks, especially in a REPL environment.\n *\n * @example\n * ```ts\n * // A simple program that reads a line of text from user input.\n * import process from \"node:process\";\n * import bytes, { equals } from \"@ayonli/jsext/bytes\";\n * import { chars } from \"@ayonli/jsext/string\";\n * import {\n *     ControlKeys,\n *     ControlSequences,\n *     lockStdin,\n *     readStdin,\n *     writeStdout,\n *     isTypingInput,\n *     moveLeftBy,\n * } from \"@ayonli/jsext/cli\";\n *\n * const input = await lockStdin(async () => {\n *     await writeStdout(bytes(\"Type something: \"));\n *\n *     const buf: string[] = []\n *\n *     while (true) {\n *         const input = await readStdin();\n *\n *         if (equals(input, ControlKeys.CTRL_C) || equals(input, ControlKeys.ESC)) {\n *             console.error(\"\\nUser cancelled\");\n *             process.exit(1);\n *         } else if (equals(input, ControlKeys.CR) || equals(input, ControlKeys.LF)) {\n *             await writeStdout(ControlKeys.LF);\n *             break;\n *         } else if (equals(input, ControlKeys.BS) || equals(input, ControlKeys.DEL)) {\n *             if (buf.length > 0) {\n *                 const char = buf.pop()!;\n *                 await moveLeftBy(char);\n *                 await writeStdout(ControlSequences.CLR_RIGHT);\n *             }\n *         } else if (isTypingInput(input)) {\n *             buf.push(...chars(String(input)));\n *             await writeStdout(input);\n *         }\n *     }\n *\n *     return buf.join(\"\")\n * });\n *\n * console.log(`You typed: ${input}`);\n * ```\n */\nexport async function lockStdin(task) {\n    if (!isTTY) {\n        throw new Error(\"Not a terminal\");\n    }\n    const lock = await stdinMutex.lock();\n    try {\n        if (isDeno) {\n            try {\n                Deno.stdin.setRaw(true);\n                return await task();\n            }\n            finally {\n                Deno.stdin.setRaw(false);\n            }\n        }\n        else if (isNodeLike) {\n            const { stdin } = process;\n            if (stdin.isPaused()) {\n                stdin.resume();\n            }\n            // copy listeners in cased being modified\n            const listeners = [...stdin.listeners(\"data\")];\n            if (listeners.length) {\n                stdin.removeAllListeners(\"data\");\n            }\n            try {\n                stdin.setRawMode(true);\n                return await task();\n            }\n            finally {\n                stdin.setRawMode(false);\n                if (listeners.length) {\n                    listeners.forEach(listener => stdin.addListener(\"data\", listener));\n                }\n                else {\n                    stdin.pause();\n                }\n            }\n        }\n        else {\n            throw new Error(\"No stdin available\");\n        }\n    }\n    finally {\n        lock.unlock();\n    }\n}\n/**\n * Reads a chunk of data from the standard input. This could be a single key\n * stroke, or a multi-byte sequence for input from an IME.\n *\n * NOTE: This function should be used within the task function of {@link lockStdin}.\n */\nexport async function readStdin() {\n    if (isDeno) {\n        const reader = Deno.stdin.readable.getReader();\n        try {\n            const { done, value } = await reader.read();\n            if (done) {\n                return bytes([]);\n            }\n            else {\n                return bytes(value);\n            }\n        }\n        finally {\n            reader.releaseLock();\n        }\n    }\n    else if (isNodeLike) {\n        const stdin = process.stdin;\n        return new Promise(resolve => {\n            const listener = (chunk) => {\n                stdin.removeListener(\"data\", listener);\n                resolve(bytes(chunk));\n            };\n            // Don't use `once`, it may not keep the program running in some runtimes,\n            // for example, Bun.\n            stdin.on(\"data\", listener);\n        });\n    }\n    else {\n        throw new Error(\"No stdin available\");\n    }\n}\n/**\n * Writes a chunk of data to the standard output.\n */\nexport async function writeStdout(data) {\n    if (isDeno) {\n        await Deno.stdout.write(data);\n    }\n    else if (isNodeLike) {\n        await new Promise(resolve => {\n            process.stdout.write(data, () => resolve());\n        });\n    }\n    else {\n        throw new Error(\"No stdout available\");\n    }\n}\n/**\n * Writes a chunk of data to the standard output synchronously.\n *\n * NOTE: Despite the function name, the synchronous behavior is only guaranteed\n * in Deno, in Node.js, it may still be asynchronous.\n *\n * Since the behavior is not guaranteed, it is recommended to use the asynchronous\n * `writeStdout` function instead. This synchronous function is only provided for\n * special cases where the asynchronous behavior is not acceptable.\n */\nexport function writeStdoutSync(data) {\n    if (isDeno) {\n        Deno.stdout.writeSync(data);\n    }\n    else if (isNodeLike) {\n        process.stdout.write(data);\n    }\n    else {\n        throw new Error(\"No stdout available\");\n    }\n}\n/**\n * Moves the cursor to the left base on the width of the given string.\n */\nexport async function moveLeftBy(str) {\n    await writeStdout(bytes(`\\u001b[${stringWidth(str)}D`));\n}\n/**\n * Moves the cursor to the right base on the width of the given string.\n */\nexport async function moveRightBy(str) {\n    await writeStdout(bytes(`\\u001b[${stringWidth(str)}C`));\n}\n/**\n * Returns `true` if the given data is a typing input. That is, it is not a\n * control key, navigation key, or function key.\n */\nexport function isTypingInput(data) {\n    return data.length > 0 && !NonTypingKeys.some(key => equals(data, key));\n}\n/**\n * Returns the current size of the application window.\n *\n * In the terminal, this is the size of the terminal window, where `width` and\n * `height` are the corresponding columns and rows.\n *\n * In the browser, this is the size of the viewport, where `width` and `height`\n * are measured in pixels.\n */\nexport function getWindowSize() {\n    if (isDeno) {\n        try {\n            const { columns, rows } = Deno.consoleSize(); // this could fail in some environments\n            return { width: columns, height: rows };\n        }\n        catch (_a) {\n            return { width: 0, height: 0 };\n        }\n    }\n    else if (isNodeLike) {\n        return {\n            width: process.stdout.columns,\n            height: process.stdout.rows,\n        };\n    }\n    else if (isBrowserWindow) {\n        return {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n    }\n    else {\n        return { width: 0, height: 0 };\n    }\n}\n/** Checks if the program is running in Windows Subsystem for Linux. */\nexport function isWSL() {\n    if (platform() !== \"linux\")\n        return false;\n    if (isDeno) {\n        return Deno.osRelease().includes(\"microsoft-standard-WSL\");\n    }\n    else if (isNodeLike) {\n        return !!process.env[\"WSL_INTEROP\"];\n    }\n    return false;\n}\nfunction parseValue(arg) {\n    let value = arg.trim();\n    if (value === \"true\") {\n        value = true;\n    }\n    else if (value === \"false\") {\n        value = false;\n    }\n    else if (/^[-+]?\\d+(\\.\\d+)?$/.test(value)) {\n        value = Number(value);\n    }\n    return value;\n}\nfunction parseKeyValue(arg, noCoercion = false) {\n    let index = arg.indexOf(\"=\");\n    if (index === -1) {\n        return [arg, undefined];\n    }\n    else {\n        const key = arg.slice(0, index);\n        const value = arg.slice(index + 1);\n        if (noCoercion === true || (Array.isArray(noCoercion) && noCoercion.includes(key))) {\n            return [key, value];\n        }\n        else {\n            return [key, parseValue(value)];\n        }\n    }\n}\n/**\n * Parses the given CLI arguments into an object.\n *\n * @example\n * ```ts\n * import { parseArgs } from \"@ayonli/jsext/cli\";\n *\n * const args = parseArgs([\n *     \"Bob\",\n *     \"--age\", \"30\",\n *     \"--married\",\n *     \"--wife=Alice\",\n *     \"--children\", \"Mia\",\n *     \"--children\", \"Ava\",\n *     \"-p\"\n * ], {\n *     alias: { \"p\": \"has-parents\" },\n *     lists: [\"children\"],\n * });\n *\n * console.log(args);\n * // {\n * //     \"0\": \"Bob\",\n * //     age: 30,\n * //     married: true,\n * //     wife: \"Alice\",\n * //     children: [\"Mia\", \"Ava\"],\n * //     \"has-parents\": true\n * // }\n * ```\n */\nexport function parseArgs(args, options = {}) {\n    var _a;\n    const { alias: alias = {}, lists = [], noCoercion = false } = options;\n    const result = {};\n    let key = null;\n    let index = 0;\n    const set = (key, value) => {\n        var _a;\n        if (lists.includes(key)) {\n            ((_a = result[key]) !== null && _a !== void 0 ? _a : (result[key] = [])).push(value);\n        }\n        else {\n            result[key] = value;\n        }\n    };\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (arg === \"--\") {\n            result[\"--\"] = args.slice(i + 1);\n            break;\n        }\n        else if (arg.startsWith(\"--\")) {\n            if (key) {\n                set(key, true);\n                key = null;\n            }\n            const [_key, value] = parseKeyValue(arg.slice(2), noCoercion);\n            if (value !== undefined) {\n                set(_key, value);\n            }\n            else {\n                key = arg.slice(2);\n            }\n        }\n        else if (arg.startsWith(\"-\")) {\n            if (key) {\n                set(key, true);\n                key = null;\n            }\n            const char = arg.slice(1);\n            key = (_a = alias[char]) !== null && _a !== void 0 ? _a : char;\n        }\n        else if (key) {\n            if (noCoercion === true || (Array.isArray(noCoercion) && noCoercion.includes(key))) {\n                set(key, arg);\n            }\n            else {\n                set(key, parseValue(arg));\n            }\n            key = null;\n        }\n        else {\n            const _key = String(index++);\n            if (noCoercion === true || (Array.isArray(noCoercion) && noCoercion.includes(_key))) {\n                set(_key, arg);\n            }\n            else {\n                set(_key, parseValue(arg));\n            }\n        }\n    }\n    if (key) {\n        set(key, true);\n    }\n    return result;\n}\n/**\n * Quotes a string to be used as a single argument to a shell command.\n *\n * @example\n * ```ts\n * import { quote } from \"@ayonli/jsext/cli\";\n *\n * console.log(quote(\"Hello, World!\")); // \"Hello, World!\"\n * console.log(quote(\"Hello, 'World'!\")); // \"Hello, 'World'!\"\n * console.log(quote(\"Hello, \\\"World\\\"!\")); // \"Hello, \\\"World\\\"!\"\n * console.log(quote(\"Hello, $World!\")); // \"Hello, \\$World!\"\n * console.log(quote(\"Hello, `World`!\")); // \"Hello, \\`World\\`!\"\n * console.log(quote(\"Hello, \\\\World!\")); // \"Hello, \\\\World!\"\n * ```\n */\nexport function quote(arg) {\n    if ((/[\"'\\s]/).test(arg)) {\n        return `\"` + arg.replace(/([\"\\\\$])/g, '\\\\$1') + `\"`;\n    }\n    return String(arg).replace(/([A-Za-z]:)?([#!\"$&'()*,:;<=>?@[\\\\\\]^`{|}])/g, '$1\\\\$2');\n}\n//# sourceMappingURL=common.js.map"],"names":[],"mappings":"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"}
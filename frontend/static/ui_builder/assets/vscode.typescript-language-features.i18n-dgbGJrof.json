{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"bundle": {
			"(loading...)/Prefix displayed for hover entries while the server is still loading": "(carregando...)",
			"...1 additional file not shown": "...1 arquivo adicional não mostrado",
			"...{0} additional files not shown": "...{0} arquivos adicionais não mostrados",
			"1 implementation": "Uma implementação",
			"1 reference": "Uma referência",
			"Acquiring typings definitions for IntelliSense./Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized": "Adquirindo definições de digitações para o Intellisense.",
			"Acquiring typings.../Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized": "Adquirindo digitações...",
			"Add all missing imports": "Adicionar todas as importações ausentes",
			"Allow": "Permitir",
			"Always": "Sempre",
			"An error occurred while renaming file": "Ocorreu um erro ao renomear o arquivo",
			"Analyzing '{0}' and its dependencies": "Analisando \"{0}\" e suas dependências",
			"Checking for update of JS/TS imports": "Verificando a atualização das importações JS/TS",
			"Configure Excludes": "Configurar Exclusões",
			"Configure jsconfig": "Configurar jsconfig.json",
			"Configure jsconfig.json": "Configurar jsconfig.json",
			"Configure tsconfig": "Configurar tsconfig.json",
			"Configure tsconfig.json": "Configurar tsconfig.json",
			"Could not apply refactoring": "Não pode aplicar a refatoração",
			"Could not detect a Node installation to run TS Server.": "Não foi possível detectar uma instalação de Nó para executar o Servidor TS.",
			"Could not determine TypeScript or JavaScript project": "Não foi possível determinar o projeto do TypeScript ou JavaScript",
			"Could not determine TypeScript or JavaScript project. Unsupported file type": "Não foi possível determinar o projeto do TypeScript ou JavaScript. Tipo de arquivo sem suporte",
			"Could not determine references": "Não foi possível determinar as referências",
			"Could not install typings files for JavaScript language features. Please ensure that NPM is installed, or configure 'typescript.npm' in your user settings. Alternatively, check the [documentation]({0}) to learn more.": "Não foi possível instalar os arquivos de digitação aos recursos de linguagem JavaScript. Verifique se o NPM está instalado ou configure 'typescript.npm' nas configurações de usuário. Clique [aqui]({0}) para saber mais.",
			"Could not load the TypeScript version at this path": "Não foi possível carregar a versão do TypeScript neste caminho",
			"Could not open TS Server log file": "Não foi possível abrir o arquivo de log do TS Server",
			"Disable logging": "Desabilitar o registro em log",
			"Disables semantic checking in a JavaScript file. Must be at the top of a file.": "Desabilita verificação semântica em um arquivo JavaScript. Deve estar no topo de um arquivo.",
			"Dismiss": "Ignorar",
			"Don't Show Again": "Não Mostrar Novamente",
			"Don't show again": "Não mostrar novamente",
			"Enable logging and restart TS server": "Habilitar o registro em log e reiniciar o TS Server",
			"Enables semantic checking in a JavaScript file. Must be at the top of a file.": "Habilita verificação semântica em um arquivo JavaScript. Deve estar no topo de um arquivo.",
			"Enter file path": "Inserir caminho do arquivo",
			"Enter new file path...": "Digite o novo caminho do arquivo...",
			"Extract to constant": "Extrair para constante",
			"Extract to function": "Extrair para função",
			"Failed to resolve {0} as module": "Falha ao resolver {0} como módulo",
			"Fetching data for better TypeScript IntelliSense": "Buscando dados para melhor o IntelliSense para TypeScript",
			"File is not part of a JavaScript project. View the [jsconfig.json documentation]({0}) to learn more.": "O arquivo não faz parte de um projeto JavaScript. Exiba a [documentação jsconfig.json]({0}) para saber mais.",
			"File is not part of a TypeScript project. View the [tsconfig.json documentation]({0}) to learn more.": "O arquivo não faz parte de um projeto TypeScript. Exiba a [documentação tsconfig.json]({0}) para saber mais.",
			"File is not part opened folders": "O arquivo não é parte das pastas abertas",
			"Find file references failed. No resource provided.": "Falha ao localizar as referências de arquivo. Nenhum recurso fornecido.",
			"Find file references failed. Requires TypeScript 4.2+.": "Falha ao localizar as referências de arquivo. Exige o TypeScript 4.2 +.",
			"Find file references failed. Unknown file type.": "Falha ao localizar as referências de arquivo. Tipo de arquivo desconhecido.",
			"Find file references failed. Unsupported file type.": "Falha ao localizar as referências de arquivo. Tipo de arquivo sem suporte.",
			"Finding file references": "Encontrando as Referências do Arquivo",
			"Finding source definitions": "Localizando definições de origem",
			"Fix all fixable JS/TS issues": "Corrija todos os problemas corrigíveis de JS/TS",
			"Follow link": "Seguir o link",
			"Go to Source Definition failed. No resource provided.": "Falha ao ir para Definição de Origem. Nenhum recurso fornecido.",
			"Go to Source Definition failed. Requires TypeScript 4.7+.": "Falha ao Ir para a Definição de origem. Requer TypeScript 4.7+.",
			"Go to Source Definition failed. Unknown file type.": "Falha ao ir para Definição de Origem. Tipo de arquivo desconhecido.",
			"Go to Source Definition failed. Unsupported file type.": "Falha ao ir para Definição de Origem. Tipo de arquivo sem suporte.",
			"Initializing '{0}'": "Inicializando “{0}”",
			"JS/TS IntelliSense Status": "Status do IntelliSense JS/TS",
			"JSDoc comment": "Comentário do JSDoc",
			"Learn More": "Saiba mais",
			"Learn more about JS/TS refactorings": "Saiba mais sobre refatoramentos JS/TS",
			"Learn more about managing TypeScript versions": "Saiba mais sobre o gerenciamento de versões do TypeScript",
			"Loading IntelliSense status": "Carregando o status do IntelliSense",
			"Move to File": "Mover para Arquivo",
			"Never": "Nunca",
			"Never in this Workspace": "Nunca neste Workspace",
			"No": "Não",
			"No jsconfig": "Nenhum jsconfig",
			"No opened folders": "Nenhuma pasta aberta",
			"No source definitions found.": "Nenhuma definição de origem encontrada.",
			"No tsconfig": "Nenhum tsconfig",
			"Not now": "Agora não",
			"Open config file": "Abrir o Arquivo de Configuração",
			"Organize Imports": "Organizar Importações",
			"Partial Mode": "Modo Parcial",
			"Paste with imports": "Colar com importações",
			"Please open a folder in VS Code to use a TypeScript or JavaScript project": "Abra uma pasta no VS Code para usar um projeto do TypeScript ou JavaScript",
			"Please report an issue against Yarn PnP": "Relate um problema com o Yarn PnP",
			"Please update your TypeScript version": "Atualize sua versão do TypeScript",
			"Project Wide IntelliSense not available": "O IntelliSense não está disponível em Todo o Projeto",
			"Remove Unused Imports": "Remover Importações Não Utilizadas",
			"Remove all unused code": "Remover todo o código não usado",
			"Report Issue": "Relatar Problema",
			"Report issue against Yarn PnP": "Relatar problema com o Yarn PnP",
			"Select Version": "Selecionar a Versão",
			"Select code action to apply": "Selecione uma ação de código para aplicar",
			"Select existing file...": "Selecione o arquivo existente...",
			"Select move destination": "Selecionar o destino de movimentação",
			"Select the TypeScript version used for JavaScript and TypeScript language features": "Selecione a versão do TypeScript usada para os recursos de linguagem JavaScript e TypeScript",
			"Sort Imports": "Classificar Importações",
			"Suppresses @ts-check errors on the next line of a file, expecting at least one to exist.": "Suprime erros de verificação de @ts-check na próxima linha de um arquivo, esperando que pelo menos um exista.",
			"Suppresses @ts-check errors on the next line of a file.": "Suprime erros de @ts-check na próxima linha de um arquivo.",
			"TS Server has not started logging.": "O TS Server não iniciou o registro em log.",
			"TS Server logging is currently enabled which may impact performance.": "O log do TS Server está habilitado no momento, o que pode afetar o desempenho.",
			"TS Server logging is off. Please set 'typescript.tsserver.log' and restart the TS server to enable logging": "O registro em log do Servidor TS está desativado. Defina 'typescript.tsserver.log' e reinicie o Servidor TS para habilitar o registro em log",
			"The JS/TS language service crashed 5 times in the last 5 Minutes.": "O serviço de linguagem JS/TS falhou cinco vezes nos últimos 5 minutos.",
			"The JS/TS language service crashed 5 times in the last 5 Minutes.\nThis may be caused by a plugin contributed by one of these extensions: {0}\nPlease try disabling these extensions before filing an issue against VS Code.": "O serviço de linguagem JS/TS travou 5 vezes nos últimos 5 minutos.\nIsso pode ser causado por um plug-in fornecido por uma destas extensões: {0}\nTente desabilitar essas extensões antes de registrar um problema contra o VS Code.",
			"The JS/TS language service crashed.": "O serviço de linguagem JS/TS falhou.",
			"The JS/TS language service crashed.\nThis may be caused by a plugin contributed by one of these extensions: {0}.\nPlease try disabling these extensions before filing an issue against VS Code.": "O serviço de linguagem JS/TS travou.\nIsso pode ser causado por um plug-in fornecido por uma destas extensões: {0}.\nTente desabilitar essas extensões antes de registrar um problema contra o VS Code.",
			"The JS/TS language service immediately crashed 5 times. The service will not be restarted.": "O serviço de linguagem JS/TS falhou imediatamente cinco vezes. O serviço não será reiniciado.",
			"The JS/TS language service immediately crashed 5 times. The service will not be restarted.\nThis may be caused by a plugin contributed by one of these extensions: {0}.\nPlease try disabling these extensions before filing an issue against VS Code.": "O serviço de linguagem JS/TS travou imediatamente 5 vezes. O serviço não será reiniciado.\nIsso pode ser causado por um plug-in fornecido por uma destas extensões: {0}.\nTente desabilitar essas extensões antes de registrar um problema contra o VS Code.",
			"The current selection cannot be extracted": "A seleção atual não pode ser extraída",
			"The path {0} doesn't point to a valid Node installation to run TS Server. Falling back to bundled Node.": "O caminho {0} não aponta para uma instalação válida do Node para executar o TS Server. Voltando ao Node empacotado.",
			"The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.": "O caminho {0} não aponta para uma instalação tsserver válida. Voltando para a versão do TypeScript em pacote.",
			"The workspace is using a version of the TypeScript Server that has been patched by Yarn PnP. This patching is a common source of bugs.": "O workspace está usando uma versão do Servidor TypeScript que foi corrigida pelo Yarn PnP. Esta aplicação de patch é uma fonte comum de bugs.",
			"The workspace is using an old version of TypeScript ({0}).\n\nBefore reporting an issue, please update the workspace to use TypeScript {1} or newer to make sure the bug has not already been fixed.": "O workspace está usando uma versão antiga do TypeScript ({0}).\n\nAntes de relatar um problema, atualize o workspace para usar TypeScript {1} ou mais recente para garantir que o bug ainda não tenha sido corrigido.",
			"This workspace contains a TypeScript version. Would you like to use the workspace TypeScript version for TypeScript and JavaScript language features?": "Este workspace contém uma versão do TypeScript. Deseja usar a versão do TypeScript do workspace para recursos de linguagem TypeScript e JavaScript?",
			"This workspace wants to use the Node installation at '{0}' to run TS Server. Would you like to use it?": "Esse workspace deseja usar a instalação do Nó em '{0}' para executar o Servidor TS. Deseja usar isso?",
			"To enable project-wide JavaScript/TypeScript language features, exclude folders with many files, like: {0}": "Para habilitar recursos de linguagem JavaScript/TypeScript em todo o projeto, exclua pastas com muitos arquivos, como: {0}",
			"To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.": "Para habilitar os recursos de linguagem JavaScript/TypeScript em todo o projeto, exclua pastas grandes com arquivos de origem nos quais você não trabalha.",
			"TypeScript Server Log": "TypeScript Server Log",
			"TypeScript Task in tasks.json contains \"\\\\\". TypeScript tasks tsconfig must use \"/\"": "A tarefa TypeScript em tasks.json contém \"\\\\\". Tarefas TypeScript tsconfig devem usar \"/\"",
			"TypeScript Version": "Versão TypeScript",
			"TypeScript language server exited with error. Error message is: {0}": "O servidor de linguagem TypeScript foi encerrado com o erro. A mensagem de erro é: {0}",
			"TypeScript: Configure Excludes": "TypeScript: Configurar Exclusões",
			"Update imports for '{0}'?": "Atualizar as importações para '{0}'?",
			"Update imports for the following {0} files?": "Atualizar as importações para os seguintes arquivos {0}?",
			"Use VS Code's Version": "Use a versão do VS Code",
			"Use Workspace Version": "Usar Versão do Workspace",
			"VS Code's tsserver was deleted by another application such as a misbehaving virus detection tool. Please reinstall VS Code.": "Tsserver do VS Code foi eliminado por outro aplicativo como uma ferramenta de detecção de vírus com um comportamento inadequado. Por favor reinstale o VS Code.",
			"Yes": "Sim",
			"build - {0}": "compilar – {0}",
			"destination files": "arquivos de destino",
			"invalid version": "versão inválida",
			"watch - {0}": "monitorar – {0}",
			"{0} (Fix all in file)": "{0} (Reparar tudo no arquivo)",
			"{0} implementations": "{0} implementações",
			"{0} references": "{0} referências"
		},
		"package": {
			"configuration.expandableHover": "Habilitar/desabilitar a expansão ao focalizar.",
			"configuration.implicitProjectConfig.checkJs": "Habilitar/desabilitar a verificação semântica de arquivos JavaScript. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.",
			"configuration.implicitProjectConfig.experimentalDecorators": "Habilitar/desabilitar os `experimentalDecorators` em arquivos JavaScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.",
			"configuration.implicitProjectConfig.module": "Define o sistema do módulo do programa. Ver mais: https://www.typescriptlang.org/tsconfig#module.",
			"configuration.implicitProjectConfig.strictFunctionTypes": "Habilitar/desabilitar os [tipos de função estritos](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) em arquivos JavaScript e TypeScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.",
			"configuration.implicitProjectConfig.strictNullChecks": "Habilitar/desabilitar as [verificações nulas estritas](https://www.typescriptlang.org/tsconfig#strictNullChecks) em arquivos JavaScript e TypeScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.",
			"configuration.implicitProjectConfig.target": "Defina a versão da linguagem JavaScript de destino para JavaScript emitido e inclua as declarações de biblioteca. Veja mais: https://www.typescriptlang.org/tsconfig#target.",
			"configuration.inlayHints.enumMemberValues.enabled": "Habilitar/desabilitar dicas embutidas para valores de membro em declarações de enumeração:\r\n''''typescript\r\n\r\nenum MyValue {\r\n A /* = 0 */;\r\n\tB /* = 1 */;\r\n}\r\n\r\n ```",
			"configuration.inlayHints.functionLikeReturnTypes.enabled": "Habilitar/desabilitar dicas embutidas para tipos de retorno implícitos em assinaturas de função:\r\n'''função typescript\r\n\r\nfoo() /* :number */ { return\r\n Date.now();} \r\n\r\n\r\n ```",
			"configuration.inlayHints.parameterNames.enabled": "Habilitar/desabilitar dicas embutidas para nomes de parâmetro:\r\n'''typescript\r\n\r\nparseInt(/* str: */ '123', /* radix: */ 8)\r\n\r\n'''",
			"configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName": "Suprime dicas de nome de parâmetro em argumentos cujo texto é idêntico ao nome do parâmetro.",
			"configuration.inlayHints.parameterTypes.enabled": "Habilitar/desabilitar dicas embutidas para tipos de parâmetro implícitos:\r\n'''typescript\r\n\r\nel.addEventListener('click', e /* :MouseEvent */ =>...)\r\n\r\n ```",
			"configuration.inlayHints.propertyDeclarationTypes.enabled": "Habilitar/desabilitar dicas embutidas para tipos implícitos em declarações de propriedade:\r\n'''classe typescript\r\n\r\nFoo {\r\n prop /* :number */ = Date.now();}\r\n\r\n\r\n ```",
			"configuration.inlayHints.variableTypes.enabled": "Habilitar/desabilitar dicas embutidas para tipos de variáveis implícitas:\r\n'''typescript\r\n\r\nconst foo /* :number */ = Date.now();\r\n\r\n ```",
			"configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName": "Suprime dicas de tipo em variáveis cujo nome é idêntico ao nome do tipo.",
			"configuration.javascript.checkJs.checkJs.deprecation": "Esta configuração foi preterida e substituída por `js/ts.implicitProjectConfig.checkJs`.",
			"configuration.javascript.checkJs.experimentalDecorators.deprecation": "Esta configuração foi preterida e substituída por `js/ts.implicitProjectConfig.experimentalDecorators`.",
			"configuration.preferGoToSourceDefinition": "Faz com que “Ir para a Definição” evite arquivos de declaração de tipo quando possível, acionando “Ir para Definição de Origem”. Isso permite que “Ir para a Definição de Origem” seja acionado com o gesto do mouse.",
			"configuration.suggest.autoImports": "Habilitar/desabilitar sugestões de importação automática.",
			"configuration.suggest.classMemberSnippets.enabled": "Habilitar/desabilitar preenchimentos de snippet para membros de classe.",
			"configuration.suggest.completeFunctionCalls": "Concluir funções com assinaturas de parâmetro.",
			"configuration.suggest.completeJSDocs": "Habilitar/desabilitar sugestão para concluir comentários JSDoc.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Habilitar/desabilitar a exibição de conclusões sobre valores potencialmente indefinidos que inserem uma chamada de cadeia opcional. Requer que verificações de nulo estrito sejam habilitadas.",
			"configuration.suggest.includeCompletionsForImportStatements": "Habilitar/desabilitar as conclusões do estilo de importação automática nas instruções de importação de tipo parcial.",
			"configuration.suggest.jsdoc.generateReturns": "Habilitar/desabilitar a geração de anotações '@returns' para modelos JSDoc.",
			"configuration.suggest.names": "Habilitar/desabilitar incluindo nomes exclusivos do arquivo em sugestões do JavaScript. Observe que as sugestões de nome sempre são desabilitadas no código do JavaScript que é verificado semanticamente usando `@ts-check` ou `checkJs`.",
			"configuration.suggest.objectLiteralMethodSnippets.enabled": "Habilite/desabilite conclusões de snippet para métodos em literais de objeto.",
			"configuration.suggest.paths": "Habilitar/desabilitar sugestões para caminhos em instruções de importação e exigir chamadas.",
			"configuration.surveys.enabled": "Habilitar/desabilitar pesquisas ocasionais que nos ajudam a melhorar o suporte a JavaScript e TypeScript do VS Code.",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "Habilitar relatórios de erro em todo o projeto.",
			"configuration.tsserver.maxTsServerMemory": "A quantidade máxima de memória (em MB) a ser alocada para o processo do servidor do TypeScript. Para usar um limite de memória maior que 4 GB, use '#typescript.tsserver.nodePath#' para executar o Servidor TS com uma instalação personalizada do Node.",
			"configuration.tsserver.nodePath": "Execute o Servidor TS em uma instalação de Nó personalizada. Isso pode ser um caminho para um executável de Nó ou 'nó' se você quiser que o VS Code detecte uma instalação de Nó.",
			"configuration.tsserver.useSeparateSyntaxServer": "Habilitar/desabilitar a geração de um servidor TypeScript separado que pode responder mais rapidamente às operações relacionadas à sintaxe, como calcular a dobragem ou computar os símbolos de documentos.",
			"configuration.tsserver.useSeparateSyntaxServer.deprecation": "Essa configuração foi preterida e substituída por `typescript.tsserver.useSyntaxServer`.",
			"configuration.tsserver.useSyntaxServer": "Controla se TypeScript inicia um servidor dedicado para lidar mais rapidamente com as operações relacionadas à sintaxe, como o dobramento de código de computação.",
			"configuration.tsserver.useSyntaxServer.always": "Use um servidor de sintaxe mais leve para lidar com todas as operações do IntelliSense. Este servidor de sintaxe só pode fornecer IntelliSense para arquivos abertos.",
			"configuration.tsserver.useSyntaxServer.auto": "Gere um servidor completo e um servidor mais leve dedicado às operações de sintaxe. O servidor de sintaxe é usado para acelerar as operações de sintaxe e fornecer IntelliSense durante o carregamento de projetos.",
			"configuration.tsserver.useSyntaxServer.never": "Não use um servidor de sintaxe dedicado. Use um único servidor para lidar com todas as operações do IntelliSense.",
			"configuration.tsserver.useVsCodeWatcher": "Use os observadores de arquivos do VS Code em vez dos do TypeScript. Requer o uso do TypeScript 5.4+ no workspace.",
			"configuration.tsserver.useVsCodeWatcher.deprecation": "Use a configuração`#typescript.tsserver.watchOptions#`.",
			"configuration.tsserver.watchOptions": "Configurar as estratégias de monitoramento que devem ser usadas para manter o controle de arquivos e diretórios.",
			"configuration.tsserver.watchOptions.fallbackPolling": "Ao usar eventos do sistema de arquivos, esta opção especifica a estratégia de sondagem usada quando o sistema é executado sem inspetores de arquivo nativos e/ou não dá suporte a inspetores de arquivo nativos.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Usar uma fila dinâmica na qual os arquivos modificados menos frequentemente serão verificados com uma frequência menor.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Verificar todos os arquivos várias vezes por segundo a um intervalo fixo para ver se há alterações.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Verificar todos os arquivos várias vezes por segundo para ver se há alterações, mas usar heurística para verificar determinados tipos de arquivos com uma frequência inferior à dos outros.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Desabilitar a observação adiada nos diretórios. A observação adiada é útil quando muitas alterações de arquivo podem ocorrer ao mesmo tempo (por exemplo, uma alteração em node_modules por causa da execução da instalação do npm), mas você pode desabilitá-la com esse sinalizador para algumas configurações menos comuns.",
			"configuration.tsserver.watchOptions.vscode": "Use os observadores de arquivos do VS Code em vez dos do TypeScript. Requer o uso do TypeScript 5.4+ no workspace.",
			"configuration.tsserver.watchOptions.watchDirectory": "Estratégia para como árvores de diretório inteiras são observadas em sistemas que não têm funcionalidade recursiva de observação de arquivo.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Usar uma fila dinâmica na qual os diretórios modificados com menos frequência serão verificados com menos frequência.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling": "Pesquisa diretórios em partes a intervalos regulares.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Verificar se há alterações em todos os diretórios várias vezes por segundo em um intervalo fixo.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Tente usar os eventos nativos do sistema operacional/sistema de arquivos para alterações no diretório.",
			"configuration.tsserver.watchOptions.watchFile": "Estratégia para como os arquivos individuais são observados.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Usar uma fila dinâmica na qual os arquivos modificados menos frequentemente serão verificados com uma frequência menor.",
			"configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling": "Pesquisa arquivos em partes a intervalos regulares.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Verificar todos os arquivos várias vezes por segundo a um intervalo fixo para ver se há alterações.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Verificar todos os arquivos várias vezes por segundo para ver se há alterações, mas usar heurística para verificar determinados tipos de arquivos com uma frequência inferior à dos outros.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Tente usar os eventos nativos do sistema operacional/sistema de arquivos para alterações de arquivo.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Tente usar os eventos nativos do sistema operacional/sistema de arquivos para escutar alterações nos diretórios de um arquivo. Isso pode usar menos inspetores de arquivo, mas pode ser menos preciso.",
			"configuration.tsserver.web.projectWideIntellisense.enabled": "Habilitar/desabilitar o IntelliSense de todo o projeto na Web. Requer que o VS Code esteja sendo executado em um contexto confiável.",
			"configuration.tsserver.web.projectWideIntellisense.suppressSemanticErrors": "Suprime erros semânticos na Web, mesmo quando o IntelliSense de todo o projeto está habilitado. Isso está sempre ativado quando o IntelliSense em todo o projeto não está habilitado ou disponível. Consulte `#typescript.tsserver.web.projectWideIntellisense.enabled#`",
			"configuration.tsserver.web.typeAcquisition.enabled": "Habilitar/desabilitar a aquisição de pacote na Web. Isso habilita o IntelliSense para pacotes importados. Requer '#typescript.tsserver.web.projectWideIntellisense.enabled#'. No momento, não há suporte para o Safari.",
			"configuration.typescript": "TypeScript",
			"configuration.updateImportsOnPaste": "Habilite a atualização de importações ao colar o código. Requer TypeScript 5.7+.\r\n\r\nPor padrão, isso mostra uma opção para atualizar as importações após a colagem. Você pode usar a configuração “#editor.pasteAs.preferences#” para atualizar as importações automaticamente ao colar: “”editor.pasteAs.preferences”: [ \"text.updateImports.jsts\" ]”.",
			"description": "Fornece suporte de linguagem avançada para JavaScript e TypeScript.",
			"displayName": "Recursos de Linguagem TypeScript e JavaScript",
			"format.indentSwitchCase": "Recuar cláusulas de caso em instruções alternadas. Requer o uso do TypeScript 5.1+ no espaço de trabalho.",
			"format.insertSpaceAfterCommaDelimiter": "Define o tratamento de espaço após um delimitador de vírgula.",
			"format.insertSpaceAfterConstructor": "Define o tratamento de espaço após a palavra-chave do construtor.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Define o tratamento de espaço após a palavra-chave de função para funções anônimas.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Define o tratamento de espaço após palavras-chave em uma instrução de fluxo de controle.",
			"format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": "Define o tratamento de espaço após abrir e antes de fechar chaves vazias.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Define o tratamento de espaço após a abertura e antes do fechamento de chaves da expressão JSX.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Define o tratamento de espaço após abrir e antes de fechar chaves não vazias.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Define o tratamento de espaço após abrir e antes de fechar colchetes não vazios.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Define o tratamento de espaço após abrir e antes de fechar parênteses não vazios.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Define o tratamento de espaço após abrir e antes de fechar chaves de cadeia de caracteres do modelo.",
			"format.insertSpaceAfterSemicolonInForStatements": "Define o tratamento de espaço após um ponto e vírgula em uma instrução for.",
			"format.insertSpaceAfterTypeAssertion": "Define o tratamento de espaços após declarações de tipo no TypeScript.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Define o tratamento de espaço após um operador binário.",
			"format.insertSpaceBeforeFunctionParenthesis": "Define o tratamento de espaço antes dos parênteses do argumento de função.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Define se uma chave de abertura é colocada em uma nova linha para blocos de controle.",
			"format.placeOpenBraceOnNewLineForFunctions": "Define se uma chave de abertura é colocada em uma nova linha para funções.",
			"format.semicolons": "Define a manipulação de ponto e vírgulas opcionais.",
			"format.semicolons.ignore": "Não inserir nem remover pontos e vírgulas.",
			"format.semicolons.insert": "Inserir pontos e vírgulas nos finais da instrução.",
			"format.semicolons.remove": "Remover sinais de ponto e vírgula desnecessários.",
			"inlayHints.parameterNames.all": "Habilite dicas de nome de parâmetro para argumentos literais e não literais.",
			"inlayHints.parameterNames.literals": "Habilite dicas de nome de parâmetro apenas para argumentos literais.",
			"inlayHints.parameterNames.none": "Desabilite as dicas de nome de parâmetro.",
			"javascript.format.enable": "Habilitar/desabilitar o formatador padrão do JavaScript.",
			"javascript.goToProjectConfig.title": "Vá para Configuração do Projeto (jsconfig / tsconfig)",
			"javascript.preferences.jsxAttributeCompletionStyle.auto": "Insira “={}” ou “=\"\"” após os nomes dos atributos com base no tipo de objeto. Consulte “#javascript.preferences.quoteStyle#” para controlar o tipo de aspas usadas nos atributos de cadeia de caracteres.",
			"javascript.preferences.organizeImports": "Preferências avançadas que controlam como as importações são ordenadas.",
			"javascript.referencesCodeLens.enabled": "Habilitar/desabilitar CodeLens de referências em arquivos JavaScript.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Habilitar/desabilitar CodeLens de referências em todas as funções em arquivos JavaScript.",
			"javascript.suggestionActions.enabled": "Habilitar/desabilitar o diagnóstico de sugestão para arquivos JavaScript no editor.",
			"javascript.validate.enable": "Habilitar/desabilitar a validação do JavaScript.",
			"reloadProjects.title": "Recarregar Projeto",
			"taskDefinition.tsconfig.description": "O arquivo tsconfig que define o build do TS.",
			"typescript.autoClosingTags": "Habilitar/desabilitar o fechamento automático de marcas JSX.",
			"typescript.check.npmIsInstalled": "Verifique se o NPM está instalado para [Aquisição Automática de Tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.disableAutomaticTypeAcquisition": "Desabilita [Aquisição Automática de Tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). A aquisição automática de tipos busca pacotes `@types` do NPM para melhorar o IntelliSense para bibliotecas externas.",
			"typescript.enablePromptUseWorkspaceTsdk": "Permite solicitar que os usuários usem a versão do TypeScript configurada no workspace para IntelliSense.",
			"typescript.findAllFileReferences": "Encontrar as Referências do Arquivo",
			"typescript.format.enable": "Habilitar/desabilitar o formatador do TypeScript padrão.",
			"typescript.goToProjectConfig.title": "Vá para Configuração do Projeto (tsconfig)",
			"typescript.goToSourceDefinition": "Ir para Definição de Origem",
			"typescript.implementationsCodeLens.enabled": "Habilitar/desabilitar CodeLens de implementações. Este CodeLens mostra os implementadores de uma interface.",
			"typescript.implementationsCodeLens.showOnInterfaceMethods": "Habilitar/desabilitar implementações do CodeLens em métodos de interface.",
			"typescript.locale": "Define a localidade usada para relatar erros de JavaScript e TypeScript. O padrão é usar a localidade do VS Code.",
			"typescript.locale.auto": "Use o idioma de exibição configurado do VS Code.",
			"typescript.npm": "Especifica o caminho para o NPM executável para [Aquisição Automática de Tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.openTsServerLog.title": "Abrir o log do TS Server",
			"typescript.preferences.autoImportFileExcludePatterns": "Especifique padrões globais de arquivos a serem excluídos das importações automáticas. Os caminhos relativos são resolvidos em relação à raiz do espaço de trabalho. Os padrões são avaliados usando a semântica tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude).",
			"typescript.preferences.autoImportSpecifierExcludeRegexes": "Especifique expressões regulares para excluir importações automáticas com especificadores de importação correspondentes. Exemplos:\r\n\r\n- `^node:`\r\n- `lib/internal` (as barras não precisam ser escapadas...)\r\n- `/lib\\/internal/i` (...a menos que inclua barras para os sinalizadores `i` ou `u`)\r\n- `^lodash$` (permite apenas importações de subcaminhos do lodash)",
			"typescript.preferences.importModuleSpecifier": "Estilo de caminho preferencial para importações automáticas.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Prefere uma importação não relativa com base na `baseUrl` ou nos `paths` configurados no `jsconfig.json`/`tsconfig.json`.",
			"typescript.preferences.importModuleSpecifier.projectRelative": "Prefere usar uma importação não relativa somente se o caminho da importação relativa sai do pacote ou do diretório do projeto.",
			"typescript.preferences.importModuleSpecifier.relative": "Prefere um caminho relativo para o local do arquivo importado.",
			"typescript.preferences.importModuleSpecifier.shortest": "Prefere uma importação não relativa somente quando há uma disponível com menos segmentos de caminho do que uma importação relativa.",
			"typescript.preferences.importModuleSpecifierEnding": "Terminação de caminho preferencial para importações automáticas.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Usar as configurações do projeto para selecionar um padrão.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Encurtar `./component/index.js` para `./component/index`.",
			"typescript.preferences.importModuleSpecifierEnding.js": "Não encurtar as terminações de caminho; incluem a extensão '.js' ou '.ts'.",
			"typescript.preferences.importModuleSpecifierEnding.label.js": ".js / .ts",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Encurtar `./component/index.js` para `./component`.",
			"typescript.preferences.includePackageJsonAutoImports": "Habilitar/desabilitar a pesquisa de dependências `package.json` para importações automáticas disponíveis.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Pesquisar dependências com base no impacto de desempenho estimado.",
			"typescript.preferences.includePackageJsonAutoImports.off": "Nunca pesquisar dependências.",
			"typescript.preferences.includePackageJsonAutoImports.on": "Sempre pesquisar dependências.",
			"typescript.preferences.jsxAttributeCompletionStyle": "Estilo preferido para conclusões de atributos JSX.",
			"typescript.preferences.jsxAttributeCompletionStyle.auto": "Insira “={}” ou “=\"\"” após os nomes dos atributos com base no tipo de objeto. Consulte “#typescript.preferences.quoteStyle#” para controlar o tipo de aspas usadas nos atributos de cadeia de caracteres.",
			"typescript.preferences.jsxAttributeCompletionStyle.braces": "Insira `= {} `após os nomes dos atributos.",
			"typescript.preferences.jsxAttributeCompletionStyle.none": "Insira apenas nomes de atributos.",
			"typescript.preferences.organizeImports": "Preferências avançadas que controlam como as importações são ordenadas.",
			"typescript.preferences.organizeImports.accentCollation": "Requer “organizeImports.unicodeCollation: “unicode””. Comparar os caracteres com sinais diacríticos como sendo diferentes do caractere base.",
			"typescript.preferences.organizeImports.caseFirst": "Requer “organizeImports.unicodeCollation: “unicode”” e “organizeImports.caseSensitivity” não é “caseInsensitive”. Indica se as letras maiúsculas serão classificadas antes das letras minúsculas.",
			"typescript.preferences.organizeImports.caseFirst.default": "Ordem padrão fornecida por “locale”.",
			"typescript.preferences.organizeImports.caseFirst.lower": "As letras minúsculas vêm antes das maiúsculas. Por exemplo, “a, A, z, Z”.",
			"typescript.preferences.organizeImports.caseFirst.upper": "As letras maiúsculas vêm antes das minúsculas. Por exemplo, “A, a, B, b”.",
			"typescript.preferences.organizeImports.caseSensitivity": "Especifica como as importações devem ser classificadas com relação à distinção entre maiúsculas e minúsculas. Se for “automático” ou não especificado, detectaremos a diferenciação de maiúsculas e minúsculas por arquivo",
			"typescript.preferences.organizeImports.caseSensitivity.auto": "Detectar diferenciação de maiúsculas e minúsculas para a classificação de importações.",
			"typescript.preferences.organizeImports.caseSensitivity.insensitive": "Classifica as importações sem diferenciação de maiúsculas e minúsculas.",
			"typescript.preferences.organizeImports.caseSensitivity.sensitive": "Classificar as importações com distinção entre maiúsculas e minúsculas.",
			"typescript.preferences.organizeImports.locale": "Requer “organizeImports.unicodeCollation: “unicode””. Substitui a localidade usada para agrupamento. Especifique “auto” para usar a localidade da interface do usuário.",
			"typescript.preferences.organizeImports.numericCollation": "Requer “organizeImports.unicodeCollation: “unicode””. Classificar as cadeias numéricas por valor inteiro.",
			"typescript.preferences.organizeImports.typeOrder": "Especifique como as importações nomeadas somente por tipo devem ser classificadas.",
			"typescript.preferences.organizeImports.typeOrder.auto": "Detectar onde as importações nomeadas somente por tipo devem ser classificadas.",
			"typescript.preferences.organizeImports.typeOrder.first": "Somente as importações nomeadas de tipo são classificadas no início da lista de importação. Por exemplo, `import { type A, type Y, B, Z } from 'module';`",
			"typescript.preferences.organizeImports.typeOrder.inline": "As importações nomeadas são classificadas apenas pelo nome. Por exemplo, `import { type A, B, type Y, Z } from 'module';`",
			"typescript.preferences.organizeImports.typeOrder.last": "Somente as importações nomeadas de tipo são classificadas no final da lista de importação. Por exemplo, `import { B, Z, type A, type Y } from 'module';`",
			"typescript.preferences.organizeImports.unicodeCollation": "Especifique se as importações devem ser classificadas usando Ordenação Unicode ou Ordinal.",
			"typescript.preferences.organizeImports.unicodeCollation.ordinal": "Classifica as importações usando o valor numérico de cada ponto de código.",
			"typescript.preferences.organizeImports.unicodeCollation.unicode": "Codificar as importações usando a ordenação por código Unicode.",
			"typescript.preferences.preferTypeOnlyAutoImports": "Inclua a palavra-chave \"type\" em importações automáticas sempre que possível. Requer o uso de TypeScript 5.3+ no espaço de trabalho.",
			"typescript.preferences.quoteStyle": "Estilo de citação preferencial a ser usado para Correções Rápidas.",
			"typescript.preferences.quoteStyle.auto": "Inferir o tipo de cotação do código existente",
			"typescript.preferences.quoteStyle.double": "Sempre usar aspas duplas: `\"`",
			"typescript.preferences.quoteStyle.single": "Sempre usar aspas simples: `'`",
			"typescript.preferences.renameMatchingJsxTags": "Quando estiver em uma marca JSX, tente renomear a marca correspondente em vez de renomear o símbolo. Requer o uso do TypeScript 5.1+ no espaço de trabalho.",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "A configuração 'typescript.preferences.renameShorthandProperties' foi preterida em favor de 'typescript.preferences.useAliasesForRenames'",
			"typescript.preferences.useAliasesForRenames": "Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação.",
			"typescript.problemMatchers.tsc.label": "Problemas do TypeScript",
			"typescript.problemMatchers.tscWatch.label": "Problemas do TypeScript (modo de inspeção)",
			"typescript.referencesCodeLens.enabled": "Habilitar/desabilitar CodeLens de referências em arquivos TypeScript.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Habilitar/desabilitar CodeLens de referências em todas as funções em arquivos TypeScript.",
			"typescript.removeUnusedImports": "Remover Importações Não Utilizadas",
			"typescript.reportStyleChecksAsWarnings": "Relatar verificações de estilo como avisos.",
			"typescript.restartTsServer": "Reiniciar Servidor TS",
			"typescript.selectTypeScriptVersion.title": "Selecionar a Versão do TypeScript...",
			"typescript.sortImports": "Classificar Importações",
			"typescript.suggest.enabled": "Habilitar/desabilitar sugestões de preenchimento automático.",
			"typescript.suggestionActions.enabled": "Habilitar/desabilitar diagnóstico de sugestão para arquivos TypeScript no editor.",
			"typescript.tsc.autoDetect": "Controla a detecção automática de tarefas tsc.",
			"typescript.tsc.autoDetect.build": "Criar apenas tarefas de compilação de execução única.",
			"typescript.tsc.autoDetect.off": "Desabilitar este recurso.",
			"typescript.tsc.autoDetect.on": "Criar tarefas de build e de inspeção.",
			"typescript.tsc.autoDetect.watch": "Criar apenas tarefas de compilação e inspeção.",
			"typescript.tsdk.desc": "Especifica o caminho da pasta para os arquivos tsserver e `lib*.d.ts` em uma instalação do TypeScript a ser usada para IntelliSense, por exemplo: `./node_modules/typescript/lib`.\r\n\r\n– Quando especificado como uma configuração de usuário, a versão do TypeScript de `typescript.tsdk` substitui automaticamente a versão interna do TypeScript.\r\n– Quando especificado como uma configuração de workspace, `typescript.tsdk` permite mudar para o uso da versão do workspace do TypeScript para IntelliSense com o comando `TypeScript: Select TypeScript version`.\r\n\r\nConfira a [documentação do TypeScript](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) para obter mais detalhes sobre o gerenciamento de versões do TypeScript.",
			"typescript.tsserver.enableRegionDiagnostics": "Habilita o diagnóstico baseado em região no TypeScript. Requer o uso do TypeScript 5.6+ no workspace.",
			"typescript.tsserver.enableTracing": "Habilita o rastreamento do desempenho do servidor TS em um diretório. Esses arquivos de rastreamento podem ser usados para diagnosticar problemas de desempenho do Servidor TS. O log pode conter caminhos de arquivo, código-fonte e outras informações possivelmente confidenciais do projeto.",
			"typescript.tsserver.log": "Habilita o registro em log do TS Server em um arquivo. Esse log pode ser usado para diagnosticar problemas do TS Server. O log pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.",
			"typescript.tsserver.pluginPaths": "Caminhos adicionais para descobrir os plugins do Serviço de Linguagem TypeScript.",
			"typescript.tsserver.pluginPaths.item": "Um caminho absoluto ou relativo. O caminho relativo será resolvido nas pastas do workspace.",
			"typescript.tsserver.trace": "Habilita o rastreamento de mensagens enviadas para o TS Server. Esse rastreamento pode ser usado para diagnosticar problemas do TS Server. O rastreamento pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.",
			"typescript.updateImportsOnFileMove.enabled": "Habilitar/Desabilitar atualização automática de caminhos de importação ao renomear ou mover um arquivo no VS Code.",
			"typescript.updateImportsOnFileMove.enabled.always": "Sempre atualizar caminhos automaticamente.",
			"typescript.updateImportsOnFileMove.enabled.never": "Nunca renomear caminhos e não avisar.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Avisar em cada renomeação.",
			"typescript.validate.enable": "Habilitar/desabilitar a validação do TypeScript.",
			"typescript.workspaceSymbols.excludeLibrarySymbols": "Exclua símbolos provenientes dos arquivos de biblioteca nos resultados de “Ir para o Símbolo no Workspace”. Requer o uso de TypeScript 5.3+ no espaço de trabalho.",
			"typescript.workspaceSymbols.scope": "Controla quais arquivos são pesquisados por [ir para o símbolo no workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Pesquise símbolos em todos os projetos JavaScript ou TypeScript abertos.",
			"typescript.workspaceSymbols.scope.currentProject": "Somente pesquisar símbolos no projeto JavaScript ou TypeScript atual.",
			"virtualWorkspaces": "Em espaços de trabalho virtuais, a resolução e localização de referências entre arquivos não é suportada.",
			"walkthroughs.nodejsWelcome.debugJsFile.altText": "Depure e execute seu código JavaScript no Node.js com o Visual Studio Code.",
			"walkthroughs.nodejsWelcome.debugJsFile.description": "Depois de instalar o Node.js, você pode executar programas JavaScript em um terminal digitando ``node your-file-name.js``\r\nOutra maneira fácil de executar programas Node.js é usar o depurador do VS Code, que permite execute seu código, pause em diferentes pontos e ajude você a entender o que está acontecendo passo a passo.\r\n[Iniciar Depuração](command:javascript-walkthrough.commands.debugJsFile)",
			"walkthroughs.nodejsWelcome.debugJsFile.title": "Execute e depure seu JavaScript",
			"walkthroughs.nodejsWelcome.description": "Aproveite ao máximo a experiência JavaScript de primeira classe do Visual Studio Code.",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.description": "Node.js é uma maneira fácil de executar código JavaScript. Você pode usá-lo para criar rapidamente aplicativos e servidores de linha de comando. Ele também vem com npm, um gerenciador de pacotes que facilita a reutilização e o compartilhamento de código JavaScript.\r\n[Install Node.js](https://nodejs.org/en/download/package-manager/)",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.title": "Instalar SDK do Node.js",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.description": "Node.js é uma maneira fácil de executar código JavaScript. Você pode usá-lo para criar rapidamente aplicativos e servidores de linha de comando. Ele também vem com npm, um gerenciador de pacotes que facilita a reutilização e o compartilhamento de código JavaScript.\r\n[Instalar Node.js](https://nodejs.org/en/download/package-manager/)",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.title": "Instalar SDK do Node.js",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.altText": "Saiba mais sobre JavaScript e Node.js no Visual Studio Code.",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.description": "Quer ficar mais confortável com JavaScript, Node.js e VS Code? Não deixe de conferir nossos documentos!\r\nTemos muitos recursos para aprender [JavaScript](https://code.visualstudio.com/docs/nodejs/working-with-javascript) e [Node.js](https://code.visualstudio. com/docs/nodejs/nodejs-tutorial).\r\n\r\n[Saber mais](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial)",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.title": "Explorar Mais",
			"walkthroughs.nodejsWelcome.makeJsFile.description": "Vamos escrever nosso primeiro arquivo JavaScript. Teremos que criar um novo arquivo e salvá-lo com a extensão ``.js`` no final do nome do arquivo.\r\n[Criar um arquivo JavaScript](command:javascript-walkthrough.commands.createJsFile)",
			"walkthroughs.nodejsWelcome.makeJsFile.title": "Criar um arquivo JavaScript",
			"walkthroughs.nodejsWelcome.title": "Introdução ao JavaScript e Node.js",
			"workspaceTrust": "A extensão requer confiança na área de trabalho quando a versão da área de trabalho é usada porque executa o código especificado pela área de trabalho."
		}
	}
}
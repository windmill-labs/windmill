{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"bundle": {
			"(loading...)/Prefix displayed for hover entries while the server is still loading": "(wird geladen...)",
			"...1 additional file not shown": "...1 weitere Datei wird nicht angezeigt",
			"...{0} additional files not shown": "...{0} weitere Dateien werden nicht angezeigt",
			"1 implementation": "1 Implementierung",
			"1 reference": "1 Verweis",
			"Acquiring typings definitions for IntelliSense./Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized": "Eingabedefinitionen für IntelliSense werden abgerufen.",
			"Acquiring typings.../Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized": "Eingaben werden abgerufen...",
			"Add all missing imports": "Alle fehlenden Importe hinzufügen",
			"Allow": "Zulassen",
			"Always": "Immer",
			"An error occurred while renaming file": "Beim Umbenennen der Datei ist ein Fehler aufgetreten.",
			"Analyzing '{0}' and its dependencies": "\"{0}\" und Abhängigkeiten werden analysiert.",
			"Checking for update of JS/TS imports": "Überprüfung der Aktualisierung der JS/TS-Importe",
			"Configure Excludes": "Auszuschließende Elemente konfigurieren",
			"Configure jsconfig": "JSCONFIG konfigurieren",
			"Configure jsconfig.json": "jsconfig.json konfigurieren",
			"Configure tsconfig": "TSCONFIG konfigurieren",
			"Configure tsconfig.json": "tsconfig.json konfigurieren",
			"Could not apply refactoring": "Umgestaltung nicht möglich",
			"Could not detect a Node installation to run TS Server.": "Es wurde keine Node-Installation zur Ausführung von TS Server erkannt.",
			"Could not determine TypeScript or JavaScript project": "TypeScript- oder JavaScript-Projekt konnte nicht ermittelt werden.",
			"Could not determine TypeScript or JavaScript project. Unsupported file type": "TypeScript- oder JavaScript-Projekt konnte nicht ermittelt werden. Nicht unterstützter Dateityp.",
			"Could not determine references": "Verweise konnten nicht bestimmt werden",
			"Could not install typings files for JavaScript language features. Please ensure that NPM is installed, or configure 'typescript.npm' in your user settings. Alternatively, check the [documentation]({0}) to learn more.": "Eingabedateien für JavaScript-Sprachfeatures konnten nicht installiert werden. Stellen Sie sicher, dass npm installiert ist, oder konfigurieren Sie \"typescript.npm\" in Ihren Benutzereinstellungen. Alternativ können Sie in der [Dokumentation]({0}) weitere Informationen erhalten.",
			"Could not load the TypeScript version at this path": "Die TypeScript-Version konnte unter diesem Pfad nicht geladen werden.",
			"Could not open TS Server log file": "Die TS-Server-Protokolldatei konnte nicht geöffnet werden.",
			"Disable logging": "Protokollierung deaktivieren",
			"Disables semantic checking in a JavaScript file. Must be at the top of a file.": "Deaktiviert die Semantiküberprüfung in einer JavaScript-Datei. Muss sich oben in einer Datei befinden.",
			"Dismiss": "Schließen",
			"Don't Show Again": "Nicht mehr anzeigen",
			"Don't show again": "Nicht mehr anzeigen",
			"Enable logging and restart TS server": "Aktiviert die Protokollierung und startet den TS-Server neu.",
			"Enables semantic checking in a JavaScript file. Must be at the top of a file.": "Aktiviert die Semantiküberprüfung in einer JavaScript-Datei. Muss sich oben in einer Datei befinden.",
			"Enter file path": "Dateipfad eingeben",
			"Enter new file path...": "Neuen Dateipfad eingeben...",
			"Extract to constant": "In Konstante extrahieren",
			"Extract to function": "In Funktion extrahieren",
			"Failed to resolve {0} as module": "Fehler beim Auflösen von {0} als Modul",
			"Fetching data for better TypeScript IntelliSense": "Daten werden zum Optimieren von TypeScript IntelliSense abgerufen",
			"File is not part of a JavaScript project. View the [jsconfig.json documentation]({0}) to learn more.": "Die Datei ist nicht Teil eines JavaScript-Projekts. Weitere Informationen finden Sie in der [jsconfig.json-Dokumentation]({0}).",
			"File is not part of a TypeScript project. View the [tsconfig.json documentation]({0}) to learn more.": "Die Datei ist nicht Teil eines TypeScript-Projekts. Weitere Informationen finden Sie in der [tsconfig.json-Dokumentation]({0}).",
			"File is not part opened folders": "Datei ist kein Teil geöffneter Ordner",
			"Find file references failed. No resource provided.": "Fehler beim Suchen nach Dateiverweisen. Es wurde keine Ressource angegeben.",
			"Find file references failed. Requires TypeScript 4.2+.": "Fehler beim Suchen nach Dateiverweisen. Erfordert TypeScript 4.2+.",
			"Find file references failed. Unknown file type.": "Fehler beim Suchen nach Dateiverweisen. Unbekannter Dateityp.",
			"Find file references failed. Unsupported file type.": "Fehler beim Suchen nach Dateiverweisen. Nicht unterstützter Dateityp.",
			"Finding file references": "Dateiverweise werden gesucht",
			"Finding source definitions": "Quellendefinitionen finden",
			"Fix all fixable JS/TS issues": "Alle behebbaren JS/TS-Probleme beheben",
			"Follow link": "Link folgen",
			"Go to Source Definition failed. No resource provided.": "Gehe zu Quelldefinition fehlgeschlagen. Keine Ressource bereitgestellt.",
			"Go to Source Definition failed. Requires TypeScript 4.7+.": "Gehe zu Quelldefinition fehlgeschlagen. Erfordert TypeScript 4.7+.",
			"Go to Source Definition failed. Unknown file type.": "Gehe zu Quelldefinition fehlgeschlagen. Unbekannter Dateityp.",
			"Go to Source Definition failed. Unsupported file type.": "Gehe zu Quelldefinition fehlgeschlagen. Nicht unterstütztes Dateiformat.",
			"Initializing '{0}'": "Initialisierung von „{0}“ wird ausgeführt",
			"JS/TS IntelliSense Status": "JS/TS IntelliSense-Status",
			"JSDoc comment": "JSDoc-Kommentar",
			"Learn More": "Weitere Informationen",
			"Learn more about JS/TS refactorings": "Weitere Informationen zu JS/TS-Refactorings",
			"Learn more about managing TypeScript versions": "Weitere Informationen zum Verwalten von TypeScript-Versionen",
			"Loading IntelliSense status": "IntelliSense-Status wird geladen",
			"Move to File": "In Datei verschieben",
			"Never": "Nie",
			"Never in this Workspace": "Nie in diesem Arbeitsbereich",
			"No": "Nein",
			"No jsconfig": "Keine jsconfig",
			"No opened folders": "Keine geöffneten Ordner",
			"No source definitions found.": "Keine Definitionen gefunden.",
			"No tsconfig": "Keine tsconfig",
			"Not now": "Nicht jetzt",
			"Open config file": "Konfigurationsdatei öffnen",
			"Organize Imports": "Importe organisieren",
			"Partial Mode": "Teilmodus",
			"Paste with imports": "Mit Importen einfügen",
			"Please open a folder in VS Code to use a TypeScript or JavaScript project": "Öffnen Sie einen Ordner in VS Code, um ein TypeScript- oder JavaScript-Projekt zu verwenden.",
			"Please report an issue against Yarn PnP": "Ein Problem mit Yarn PnP melden",
			"Please update your TypeScript version": "Bitte aktualisieren Sie Ihre TypeScript-Version.",
			"Project Wide IntelliSense not available": "Projektweites IntelliSense nicht verfügbar",
			"Remove Unused Imports": "Nicht verwendete Importe entfernen",
			"Remove all unused code": "Gesamten nicht verwendeten Code entfernen",
			"Report Issue": "Problem melden",
			"Report issue against Yarn PnP": "Problem mit Yarn PnP melden",
			"Select Version": "Version auswählen",
			"Select code action to apply": "Anzuwendende Codeaktion auswählen",
			"Select existing file...": "Vorhandene Datei auswählen...",
			"Select move destination": "\"Ziel verschieben\" auswählen",
			"Select the TypeScript version used for JavaScript and TypeScript language features": "Wählen Sie die für die JavaScript- und TypeScript-Sprachfunktionen verwendete TypeScript-Version aus.",
			"Sort Imports": "Importe sortieren",
			"Suppresses @ts-check errors on the next line of a file, expecting at least one to exist.": "Unterdrückt @ts-check-Fehler in der nächsten Zeile einer Datei und erwartet, dass mindestens einer vorhanden ist.",
			"Suppresses @ts-check errors on the next line of a file.": "Unterdrückt @ts-check-Fehler in der nächsten Zeile einer Datei.",
			"TS Server has not started logging.": "TS Server hat noch nicht mit der Protokollierung begonnen.",
			"TS Server logging is currently enabled which may impact performance.": "Die TS Server-Protokollierung ist derzeit aktiviert. Das kann Auswirkungen auf die Leistung haben.",
			"TS Server logging is off. Please set 'typescript.tsserver.log' and restart the TS server to enable logging": "Die TS Server-Protokollierung ist deaktiviert. Legen Sie \"typescript.tsserver.log\" fest, und laden Sie VS Code erneut, um die Protokollierung zu aktivieren.",
			"The JS/TS language service crashed 5 times in the last 5 Minutes.": "Der JS/TS-Sprachdienst ist in den letzten fünf Minuten fünfmal abgestürzt.",
			"The JS/TS language service crashed 5 times in the last 5 Minutes.\nThis may be caused by a plugin contributed by one of these extensions: {0}\nPlease try disabling these extensions before filing an issue against VS Code.": "Der JS/TS-Sprachdienst ist in den letzten fünf Minuten fünfmal abgestürzt.\nDies kann durch ein Plug-In verursacht werden, das von einer der folgenden Erweiterungen beigetragen wurde: {0}\nVersuchen Sie, diese Erweiterungen zu deaktivieren, bevor Sie ein Problem mit VS Code melden.",
			"The JS/TS language service crashed.": "Der JS/TS-Sprachdienst ist abgestürzt.",
			"The JS/TS language service crashed.\nThis may be caused by a plugin contributed by one of these extensions: {0}.\nPlease try disabling these extensions before filing an issue against VS Code.": "Der JS/TS-Sprachdienst ist abgestürzt.\nDies kann durch ein Plug-In verursacht werden, das von einer der folgenden Erweiterungen beigetragen wurde: {0}.\nVersuchen Sie, diese Erweiterungen zu deaktivieren, bevor Sie ein Problem mit VS Code melden.",
			"The JS/TS language service immediately crashed 5 times. The service will not be restarted.": "Der JS/TS-Sprachdienst ist sofort fünfmal abgestürzt. Der Dienst wird nicht neu gestartet.",
			"The JS/TS language service immediately crashed 5 times. The service will not be restarted.\nThis may be caused by a plugin contributed by one of these extensions: {0}.\nPlease try disabling these extensions before filing an issue against VS Code.": "Der JS/TS-Sprachdienst ist sofort fünfmal abgestürzt. Der Dienst wird nicht neu gestartet.\nDies kann durch ein Plug-In verursacht werden, das von einer der folgenden Erweiterungen beigetragen wurde: {0}.\nVersuchen Sie, diese Erweiterungen zu deaktivieren, bevor Sie ein Problem mit VS Code melden.",
			"The current selection cannot be extracted": "Die aktuelle Auswahl kann nicht extrahiert werden.",
			"The path {0} doesn't point to a valid Node installation to run TS Server. Falling back to bundled Node.": "Der Pfad {0} verweist nicht auf eine gültige Knoteninstallation zum Ausführen des Terminaldiensteservers. Fallback auf Node-Bundle.",
			"The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.": "Der Pfad \"{0}\" zeigt nicht auf eine gültige tsserver-Installation. Fallback auf gebündelte TypeScript-Version wird durchgeführt.",
			"The workspace is using a version of the TypeScript Server that has been patched by Yarn PnP. This patching is a common source of bugs.": "Der Arbeitsbereich verwendet eine Version des TypeScript-Servers, die von Yarn PnP gepatcht wurde. Dieses Patchen ist eine häufige Fehlerquelle.",
			"The workspace is using an old version of TypeScript ({0}).\n\nBefore reporting an issue, please update the workspace to use TypeScript {1} or newer to make sure the bug has not already been fixed.": "Der Arbeitsbereich verwendet eine alte Version von TypeScript ({0}).\n\nBevor Sie ein Problem melden, aktualisieren Sie den Arbeitsbereich, um TypeScript {1} oder neuer zu verwenden, um sicherzustellen, dass der Fehler noch nicht behoben wurde.",
			"This workspace contains a TypeScript version. Would you like to use the workspace TypeScript version for TypeScript and JavaScript language features?": "Dieser Arbeitsbereich enthält eine TypeScript-Version. Möchten Sie die TypeScript-Version des Arbeitsbereichs für TypeScript- und JavaScript-Sprachfeatures verwenden?",
			"This workspace wants to use the Node installation at '{0}' to run TS Server. Would you like to use it?": "Dieser Arbeitsbereich möchte die Node-Installation unter \"{0}\" verwenden, um TS Server auszuführen. Möchten Sie diese Installation verwenden?",
			"To enable project-wide JavaScript/TypeScript language features, exclude folders with many files, like: {0}": "Um die JavaScript/TypeScript-Sprachfunktionen für das gesamte Projekt zu aktivieren, schließen Sie Ordner mit vielen Dateien aus. Beispiel: {0}",
			"To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.": "Um JavaScript/TypeScript-Sprachfunktionen für das gesamte Projekt zu aktivieren, schließen Sie große Ordner mit Quelldateien aus, an denen Sie nicht arbeiten.",
			"TypeScript Server Log": "TypeScript-Serverprotokoll",
			"TypeScript Task in tasks.json contains \"\\\\\". TypeScript tasks tsconfig must use \"/\"": "Die TypeScript-Task in tasks.json enthält \"\\\\\". Für TypeScript-Tasks in tsconfig muss \"/\" verwendet werden.",
			"TypeScript Version": "TypeScript-Version",
			"TypeScript language server exited with error. Error message is: {0}": "Der TypeScript-Sprachserver wurde durch einen Fehler beendet. Fehlermeldung: {0}",
			"TypeScript: Configure Excludes": "TypeScript: Ausschlüsse konfigurieren",
			"Update imports for '{0}'?": "Importe für \"{0}\" aktualisieren?",
			"Update imports for the following {0} files?": "Importe für die folgenden {0}-Dateien aktualisieren?",
			"Use VS Code's Version": "Version von VS Code verwenden",
			"Use Workspace Version": "Arbeitsbereichsversion verwenden",
			"VS Code's tsserver was deleted by another application such as a misbehaving virus detection tool. Please reinstall VS Code.": "Der tsserver von VS Code wurde von einer anderen Anwendung wie etwa einem fehlerhaften Tool zur Viruserkennung gelöscht. Führen Sie eine Neuinstallation von VS Code durch.",
			"Yes": "Ja",
			"build - {0}": "Erstellen – {0}",
			"destination files": "Zieldateien",
			"invalid version": "Ungültige Version",
			"watch - {0}": "Überwachen – {0}",
			"{0} (Fix all in file)": "{0} (Behebe alle in Datei)",
			"{0} implementations": "{0} Implementierungen",
			"{0} references": "{0} Verweise"
		},
		"package": {
			"configuration.expandableHover": "Das Erweitern beim Daraufzeigen aktivieren/deaktivieren.",
			"configuration.implicitProjectConfig.checkJs": "Aktiviert/deaktiviert die Semantikprüfung bei JavaScript-Dateien. Diese Einstellung wird von vorhandenen Dateien \"jsconfig.json\" oder \"tsconfig.json\" außer Kraft gesetzt.",
			"configuration.implicitProjectConfig.experimentalDecorators": "Aktiviert/deaktiviert \"experimentalDecorators\" in JavaScript-Dateien, die keinem Projekt angehören. Diese Einstellung wird von vorhandenen Dateien \"jsconfig.json\" oder \"tsconfig.json\" außer Kraft gesetzt.",
			"configuration.implicitProjectConfig.module": "Legt das Modulsystem für das Programm fest. Weitere Informationen finden Sie unter https://www.typescriptlang.org/tsconfig#module.",
			"configuration.implicitProjectConfig.strictFunctionTypes": "Aktiviert/deaktiviert [strenge Funktionstypen](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) in JavaScript- und TypeScript-Dateien, die keinem Projekt angehören. Diese Einstellung wird von vorhandenen Dateien \"jsconfig.json\" oder \"tsconfig.json\" außer Kraft gesetzt.",
			"configuration.implicitProjectConfig.strictNullChecks": "Aktiviert/deaktiviert [strenge NULL-Prüfungen](https://www.typescriptlang.org/tsconfig#strictNullChecks) in JavaScript- und TypeScript-Dateien, die keinem Projekt angehören. Diese Einstellung wird von vorhandenen Dateien \"jsconfig.json\" oder \"tsconfig.json\" außer Kraft gesetzt.",
			"configuration.implicitProjectConfig.target": "Legen Sie die JavaScript-Zielsprachversion für ausgegebenes JavaScript fest, und schließen Sie Bibliotheksdeklarationen ein. Weitere Informationen finden Sie unter https://www.typescriptlang.org/tsconfig#target.",
			"configuration.inlayHints.enumMemberValues.enabled": "Aktivieren/Deaktivieren Sie Inlayhinweise für Memberwerte in Enumerationsdeklarationen:\r\n```typescript\r\n\r\nenum MyValue {\r\n\tA /* = 0 */;\r\n\tB /* = 1 */;\r\n}\r\n \r\n```",
			"configuration.inlayHints.functionLikeReturnTypes.enabled": "Aktivieren/Deaktivieren Sie Inlayhinweise für implizite Rückgabetypen für Funktionssignaturen:\r\n```typescript\r\n\r\nfunction foo() /* :number */ {\r\n\treturn Date.now();\r\n} \r\n \r\n```",
			"configuration.inlayHints.parameterNames.enabled": "Aktivieren/Deaktivieren Sie Inlayhinweise für Parameternamen:\r\n```typescript\r\n\r\nparseInt(/* str: */ '123', /* radix: */ 8)\r\n \r\n```",
			"configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName": "Unterdrückt Hinweise für Parameternamen auf Argumenten, deren Text mit dem Parameternamen identisch ist.",
			"configuration.inlayHints.parameterTypes.enabled": "Aktivieren/Deaktivieren Sie Inlayhinweise für implizite Parametertypen:\r\n```typescript\r\n\r\nel.addEventListener('click', e /* :MouseEvent */ => ...)\r\n \r\n```",
			"configuration.inlayHints.propertyDeclarationTypes.enabled": "Aktivieren/Deaktivieren Sie Inlayhinweise für implizite Typen in Eigenschaftsdeklarationen:\r\n```typescript\r\n\r\nclass Foo {\r\n\tprop /* :number */ = Date.now();\r\n}\r\n \r\n```",
			"configuration.inlayHints.variableTypes.enabled": "Aktivieren/Deaktivieren Sie Inlayhinweise für implizite Variablentypen:\r\n```typescript\r\n\r\nconst foo /* :number */ = Date.now();\r\n \r\n```",
			"configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName": "Unterdrücken Sie Typhinweise für Variablen, deren Name mit dem Typnamen identisch ist.",
			"configuration.javascript.checkJs.checkJs.deprecation": "Diese Einstellung ist veraltet. Verwenden Sie stattdessen \"js/ts.implicitProjectConfig.checkJs\".",
			"configuration.javascript.checkJs.experimentalDecorators.deprecation": "Diese Einstellung ist veraltet. Verwenden Sie stattdessen \"js/ts.implicitProjectConfig.experimentalDecorators\".",
			"configuration.preferGoToSourceDefinition": "Hiermit werden Typdeklarationsdateien bei „Zur Definition wechseln“ nach Möglichkeit vermieden, indem stattdessen „Zur Quelldefinition wechseln“ ausgelöst wird. Auf diese Weise kann „Zur Quelldefinition wechseln“ mit der Mausgeste ausgelöst werden.",
			"configuration.suggest.autoImports": "Aktiviert/deaktiviert automatische Importvorschläge.",
			"configuration.suggest.classMemberSnippets.enabled": "Aktivieren/Deaktivieren Sie die Codeausschnitt-Vervollständigungen für Klassenmember.",
			"configuration.suggest.completeFunctionCalls": "Vervollständigen Sie Funktionen mit deren Parametersignatur.",
			"configuration.suggest.completeJSDocs": "Vorschläge zum Vervollständigen von JSDoc-Kommentaren aktivieren/deaktivieren.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Aktiviert/deaktiviert Sie die Vervollständigungen für möglicherweise nicht definierte Werte, die eine optionale Aufrufkette einfügen. Hierfür müssen strikte NULL-Überprüfungen aktiviert sein.",
			"configuration.suggest.includeCompletionsForImportStatements": "Aktivieren/Deaktivieren Sie die Vervollständigungen im automatischen Importstil für teilweise typisierte Importanweisungen.",
			"configuration.suggest.jsdoc.generateReturns": "Aktivieren/Deaktivieren Sie das Generieren von „@returns“-Anmerkungen für JSDoc-Vorlagen.",
			"configuration.suggest.names": "Aktivieren/Deaktivieren, dass eindeutige Namen aus der Datei in JavaScript-Vorschläge eingeschlossen werden. Beachten Sie, dass Namensvorschläge in JavaScript-Code, dessen Semantik mit \"@ts-check\" oder \"checkJs\" überprüft wird, immer deaktiviert sind.",
			"configuration.suggest.objectLiteralMethodSnippets.enabled": "Aktivieren/Deaktivieren Sie Vervollständigungen von Codeschnipseln für Methoden in Objektliteralen.",
			"configuration.suggest.paths": "Vorschläge für Pfade in Importanweisungen und require-Aufrufen aktivieren bzw. deaktivieren.",
			"configuration.surveys.enabled": "Gelegentliche Umfragen zur Verbesserung der Unterstützung von JavaScript und TypeScript in Visual Studio Code aktivieren bzw. deaktivieren.",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "Aktiviert die projektweite Fehlerberichterstattung.",
			"configuration.tsserver.maxTsServerMemory": "Der maximale Arbeitsspeicher (in MB), der dem TypeScript-Serverprozess zugeordnet werden soll. Wenn Sie ein Arbeitsspeicherlimit von mehr als 4 GB benötigen, verwenden Sie \"#typescript.tsserver.nodePath#\", um TS Server mit einer benutzerdefinierten Node-Installation auszuführen.",
			"configuration.tsserver.nodePath": "Führen Sie TS Server in einer benutzerdefinierten Node-Installation aus. Dies kann ein Pfad zu einer ausführbaren Node-Datei oder \"node\" sein, wenn Sie möchten, dass VS Code eine Node-Installation erkennt.",
			"configuration.tsserver.useSeparateSyntaxServer": "Aktivieren/Deaktivieren Sie das Erzeugen eines separaten TypeScript-Servers, der schneller auf syntaxbezogene Vorgänge reagieren kann, beispielsweise das Berechnen von Codefaltung oder von Dokumentsymbolen.",
			"configuration.tsserver.useSeparateSyntaxServer.deprecation": "Diese Einstellung ist veraltet und wurde durch „typescript.tsserver.useSyntaxServer“ ersetzt.",
			"configuration.tsserver.useSyntaxServer": "Kontrolliert, ob TypeScript einen dedizierten Server startet, um syntaxbezogene Vorgänge schneller zu verarbeiten, z. B. das Berechnen der Codefaltung.",
			"configuration.tsserver.useSyntaxServer.always": "Verwenden Sie einen Syntaxserver mit leichter Gewichtung, um alle IntelliSense-Vorgänge zu bearbeiten. Dieser Syntaxserver kann IntelliSense nur für geöffnete Dateien bereitstellen.",
			"configuration.tsserver.useSyntaxServer.auto": "Erzeugen Sie einen vollständigen Server und einen Server mit leichter Gewichtung für Syntaxvorgänge. Der Syntaxserver wird verwendet, um Syntaxvorgänge zu beschleunigen und IntelliSense bereitzustellen, während Projekte geladen werden.",
			"configuration.tsserver.useSyntaxServer.never": "Verwenden Sie keinen dedizierten Syntaxserver. Verwenden Sie einen Einzelserver, um alle IntelliSense-Vorgänge zu bearbeiten.",
			"configuration.tsserver.useVsCodeWatcher": "Verwenden Sie die Dateiüberwachungselemente von VS Code anstelle von TypeScript. Erfordert die Verwendung von TypeScript 5.4 und höher im Arbeitsbereich.",
			"configuration.tsserver.useVsCodeWatcher.deprecation": "Verwenden Sie stattdessen die Einstellung „#typescript.tsserver.watchOptions#“.",
			"configuration.tsserver.watchOptions": "Konfigurieren Sie, welche Beobachtungsstrategien verwendet werden sollen, um Dateien und Verzeichnisse nachzuverfolgen.",
			"configuration.tsserver.watchOptions.fallbackPolling": "Bei der Verwendung von Dateisystemereignissen gibt diese Option die Abrufstrategie an, die verwendet wird, wenn das System keine nativen Dateiüberwachungselemente mehr hat und/oder keine nativen Dateiüberwachungselemente unterstützt.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Dynamische Warteschlange verwenden, in der weniger häufig geänderte Dateien seltener überprüft werden.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Jede Datei mehrmals pro Sekunde in einem festen Intervall auf Änderungen überprüfen.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Jede Datei mehrmals pro Sekunde auf Änderungen überprüfen, bestimmte Dateitypen jedoch mithilfe von Heuristiken seltener als andere überprüfen.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Verzögertes Beobachten von Verzeichnissen deaktivieren. Das verzögertes Beobachten ist nützlich, wenn viele Dateiänderungen gleichzeitig auftreten können (z. B. eine Änderung in node_modules über eine Ausführung von npm-install). Sie sollten das verzögerte Beobachten jedoch mit diesem Flag für einige weniger häufige Setups deaktivieren.",
			"configuration.tsserver.watchOptions.vscode": "Verwenden Sie die Dateiüberwachungselemente von VS Code anstelle von TypeScript. Erfordert die Verwendung von TypeScript 5.4 und höher im Arbeitsbereich.",
			"configuration.tsserver.watchOptions.watchDirectory": "Strategie, wie ganze Verzeichnisbäume unter Systemen ohne rekursive Dateibeobachtungsfunktionalität beobachtet werden.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Dynamische Warteschlange verwenden, in der weniger häufig geänderte Verzeichnisse seltener überprüft werden.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling": "Fragt Verzeichnisse in Blöcken in regelmäßigen Intervallen ab.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Jedes Verzeichnis mehrmals pro Sekunde in einem festen Intervall auf Änderungen überprüfen.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Versuchen Sie, die nativen Ereignisse des Betriebssystems/Dateisystems für Verzeichnisänderungen zu verwenden.",
			"configuration.tsserver.watchOptions.watchFile": "Strategie für die Anzeige einzelner Dateien.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Dynamische Warteschlange verwenden, in der weniger häufig geänderte Dateien seltener überprüft werden.",
			"configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling": "Fragt Dateien in Blöcken in regelmäßigen Intervallen ab.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Jede Datei mehrmals pro Sekunde in einem festen Intervall auf Änderungen überprüfen.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Jede Datei mehrmals pro Sekunde auf Änderungen überprüfen, bestimmte Dateitypen jedoch mithilfe von Heuristiken seltener als andere überprüfen.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Versuchen Sie, die nativen Ereignisse des Betriebssystems/Dateisystems für Dateiänderungen zu verwenden.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Versuchen Sie, die nativen Ereignisse des Betriebssystems/Dateisystems zu verwenden, um Änderungen an den Verzeichnissen einer Datei zu überwachen. Dies kann weniger Dateiüberwachungselemente erfordern, doch der Vorgang ist möglicherweise weniger genau.",
			"configuration.tsserver.web.projectWideIntellisense.enabled": "Aktiviert/deaktiviert projektweites IntelliSense im Web. Erfordert, dass VS Code in einem vertrauenswürdigen Kontext ausgeführt wird.",
			"configuration.tsserver.web.projectWideIntellisense.suppressSemanticErrors": "Unterdrückt semantische Fehler im Web, auch wenn projektweites IntelliSense aktiviert ist. Das ist immer aktiviert, wenn projektweites IntelliSense nicht aktiviert oder verfügbar ist. Siehe \"#typescript.tsserver.web.projectWideIntellisense.enabled#\"",
			"configuration.tsserver.web.typeAcquisition.enabled": "Aktiviert/deaktiviert die Paketerfassung im Web. Hiermit wird IntelliSense für importierte Pakete aktiviert. Erfordert \"#typescript.tsserver.web.projectWideIntellisense.enabled#\". Wird für Safari aktuell nicht unterstützt.",
			"configuration.typescript": "TypeScript",
			"configuration.updateImportsOnPaste": "Aktivieren Sie das Aktualisieren von Importen beim Einfügen von Code. Erfordert TypeScript 5.7 und höher.\r\n\r\nStandardmäßig wird eine Option zum Aktualisieren von Importen nach dem Einfügen angezeigt. Sie können die Einstellung „#editor.pasteAs.preferences#“ verwenden, um Importe beim Einfügen automatisch zu aktualisieren: „editor.pasteAs.preferences“: [ „text.updateImports.jsts“ ]'.",
			"description": "Bietet umfangreiche Sprachunterstützung für JavaScript und TypeScript.",
			"displayName": "TypeScript- und JavaScript-Sprachfeatures",
			"format.indentSwitchCase": "Einrücken von Case-Klauseln in Switch-Anweisungen. Erfordert die Verwendung von TypeScript 5.1 und höher im Arbeitsbereich.",
			"format.insertSpaceAfterCommaDelimiter": "Definiert die Verarbeitung von Leerzeichen nach einem Kommatrennzeichen.",
			"format.insertSpaceAfterConstructor": "Definiert die Verarbeitung von Leerzeichen nach dem Konstruktorschlüsselwort.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Definiert die Verarbeitung von Leerzeichen nach einem Funktionsschlüsselwort für anonyme Funktionen.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Definiert die Verarbeitung von Leerzeichen nach Schlüsselwörtern in einer Flusssteuerungsanweisung.",
			"format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": "Definiert die Verarbeitung von Leerzeichen nach geschweifter Klammer links und vor geschweifter Klammer rechts, wenn diese keine Inhalte umschließen.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden geschweiften Klammern für JSX-Ausdrücke.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden nicht leeren geschweiften Klammern.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden nicht leeren eckigen Klammern.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden nicht leeren runden Klammern.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden geschweiften Klammern für Vorlagenzeichenfolgen.",
			"format.insertSpaceAfterSemicolonInForStatements": "Definiert die Verarbeitung von Leerzeichen nach einem Semikolon in einer for-Anweisung.",
			"format.insertSpaceAfterTypeAssertion": "Definiert die Verarbeitung von Leerzeichen nach Typassertionen in TypeScript.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Definiert die Verarbeitung von Leerzeichen nach einem binären Operator.",
			"format.insertSpaceBeforeFunctionParenthesis": "Definiert die Verarbeitung von Leerzeichen vor Funktionsargumentklammern.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Definiert, ob eine öffnende geschweifte Klammer für Kontrollblöcke in eine neue Zeile eingefügt wird.",
			"format.placeOpenBraceOnNewLineForFunctions": "Definiert, ob eine öffnende geschweifte Klammer für Funktionen in eine neue Zeile eingefügt wird.",
			"format.semicolons": "Definiert die Behandlung optionaler Semikolons.",
			"format.semicolons.ignore": "Fügen Sie keine Semikolons ein, und entfernen Sie diese auch nicht.",
			"format.semicolons.insert": "Fügen Sie am Ende von Anweisungen ein Semikolon ein.",
			"format.semicolons.remove": "Entfernen Sie unnötige Semikola.",
			"inlayHints.parameterNames.all": "Aktivieren Sie Hinweise für Parameternamen für literale und nicht literale Argumente.",
			"inlayHints.parameterNames.literals": "Aktivieren Sie Hinweise für Parameternamen nur für literale Argumente.",
			"inlayHints.parameterNames.none": "Deaktivieren Sie Hinweise für Parameternamen.",
			"javascript.format.enable": "Standardmäßigen JavaScript-Formatierer aktivieren/deaktivieren.",
			"javascript.goToProjectConfig.title": "Zu Projektkonfiguration wechseln (jsconfig/tsconfig)",
			"javascript.preferences.jsxAttributeCompletionStyle.auto": "Fügen Sie „={}“ oder „=\"\"“ nach Attributnamen ein, die auf dem Eigenschaftentyp basieren. Informationen zum Steuern des Typs von Anführungszeichen, die für Zeichenfolgenattribute verwendet werden, finden Sie unter „#javascript.preferences.quoteStyle#“.",
			"javascript.preferences.organizeImports": "Erweiterte Einstellungen, die steuern, wie Importe geordnet werden.",
			"javascript.referencesCodeLens.enabled": "Aktiviert oder deaktiviert CodeLens-Verweise in JavaScript-Dateien.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Verweise auf CodeLens für alle Funktionen in JavaScript-Dateien aktivieren/deaktivieren",
			"javascript.suggestionActions.enabled": "Aktiviert oder deaktiviert Vorschlagsdiagnosen für JavaScript-Dateien im Editor.",
			"javascript.validate.enable": "JavaScript-Überprüfung aktivieren/deaktivieren.",
			"reloadProjects.title": "Projekt erneut laden",
			"taskDefinition.tsconfig.description": "Die \"tsconfig\"-Datei, die den TS-Build definiert.",
			"typescript.autoClosingTags": "Aktiviert/deaktiviert das automatische Schließen von JSX-Tags.",
			"typescript.check.npmIsInstalled": "Überprüfen Sie, ob npm für [Automatische Typerfassung](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition) installiert ist.",
			"typescript.disableAutomaticTypeAcquisition": "Deaktiviert [automatische Typerfassung](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Die automatische Typerfassung ruft „@types\" Pakete von npm ab, um IntelliSense für externe Bibliotheken zu verbessern.",
			"typescript.enablePromptUseWorkspaceTsdk": "Aktiviert eine Benutzeraufforderung zur Verwendung der im Arbeitsbereich konfigurierten TypeScript-Version für IntelliSense.",
			"typescript.findAllFileReferences": "Dateiverweise suchen",
			"typescript.format.enable": "Standardmäßigen TypeScript-Formatierer aktivieren/deaktivieren.",
			"typescript.goToProjectConfig.title": "Zur Projektkonfiguration wechseln (tsconfig)",
			"typescript.goToSourceDefinition": "Gehen Sie zu Quelldefinition",
			"typescript.implementationsCodeLens.enabled": "Aktiviert oder deaktiviert CodeLens-Implementierungen. Dieses CodeLens-Element zeigt an, wer eine Schnittstelle implementiert hat.",
			"typescript.implementationsCodeLens.showOnInterfaceMethods": "Aktivieren/Deaktivieren von Implementierungen von CodeLens für Schnittstellenmethoden.",
			"typescript.locale": "Legt das zum Melden von JavaScript- und TypeScript-Fehlern verwendete Gebietsschema fest. Standardmäßig wird das Gebietsschema von VS Code verwendet.",
			"typescript.locale.auto": "Konfigurierte Anzeigesprache von VS Code verwenden.",
			"typescript.npm": "Gibt den Pfad zur ausführbaren npm-Datei an, die für [Automatische Typerfassung](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition) verwendet wird.",
			"typescript.openTsServerLog.title": "TS Server-Protokolldatei öffnen",
			"typescript.preferences.autoImportFileExcludePatterns": "Geben Sie Globmuster von Dateien an, die von automatischen Importen ausgeschlossen werden sollen. Relative Pfade werden relativ zum Arbeitsbereichsstamm aufgelöst. Muster werden mit der [exclude](https://www.typescriptlang.org/tsconfig#exclude)-Semantik von \"tsconfig.json\" ausgewertet.",
			"typescript.preferences.autoImportSpecifierExcludeRegexes": "Geben Sie reguläre Ausdrücke an, um automatische Importe mit übereinstimmenden Importspezifizierern auszuschließen. Beispiele:\r\n\r\n- `^node:`\r\n- `lib/internal` (Schrägstriche müssen mit Escapezeichen verwendet werden)\r\n- `/lib\\/internal/i` (... sofern keine umgebenden Schrägstriche für die Flags \"i\" oder \"u\" eingeschlossen werden)\r\n- `^lodash$` (nur Unterpfadimporte aus Lodash zulassen)",
			"typescript.preferences.importModuleSpecifier": "Bevorzugter Pfadstil für automatische Importe.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Hiermit wird ein nicht relativer Import basierend auf den Werten von \"baseUrl\" oder \"paths\" vorgezogen, die in \"jsconfig.json\"/\"tsconfig.json\" konfiguriert sind.",
			"typescript.preferences.importModuleSpecifier.projectRelative": "Bevorzugt einen nicht relativen Import nur, wenn der relative Importpfad das Paket- oder Projektverzeichnis verlassen würde.",
			"typescript.preferences.importModuleSpecifier.relative": "Hiermit wird ein relativer Pfad zum importierten Dateispeicherort vorgezogen.",
			"typescript.preferences.importModuleSpecifier.shortest": "Hiermit wird ein nicht relativer Import vorgezogen, falls einer verfügbar ist, der weniger Pfadsegmente als ein relativer Import aufweist.",
			"typescript.preferences.importModuleSpecifierEnding": "Bevorzugte Pfadendung für automatische Importe.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Wählen Sie über die Projekteinstellungen einen Standardwert aus.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Hiermit wird \"./component/index.js\" auf \"./component/index\" gekürzt.",
			"typescript.preferences.importModuleSpecifierEnding.js": "Kürzen Sie keine Pfadenden; fügen Sie die Erweiterung \".js\" oder \".ts\" ein.",
			"typescript.preferences.importModuleSpecifierEnding.label.js": ".js / .ts",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "./component/index.js zu ./component kürzen.",
			"typescript.preferences.includePackageJsonAutoImports": "Hiermit wird die Suche nach \"package.json\"-Abhängigkeiten für verfügbare automatische Importe aktiviert/deaktiviert.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Basierend auf der geschätzten Leistungsbeeinträchtigung nach Abhängigkeiten suchen",
			"typescript.preferences.includePackageJsonAutoImports.off": "Niemals nach Abhängigkeiten suchen",
			"typescript.preferences.includePackageJsonAutoImports.on": "Immer nach Abhängigkeiten suchen",
			"typescript.preferences.jsxAttributeCompletionStyle": "Bevorzugter Stil für JSX-Attribut-Vervollständigungen.",
			"typescript.preferences.jsxAttributeCompletionStyle.auto": "Fügen Sie „={}“ oder „=\"\"“ nach Attributnamen ein, die auf dem Eigenschaftentyp basieren. Informationen zum Steuern des Typs von Anführungszeichen, die für Zeichenfolgenattribute verwendet werden, finden Sie unter „#typescript.preferences.quoteStyle#“.",
			"typescript.preferences.jsxAttributeCompletionStyle.braces": "Fügen Sie „={}“ nach Attributnamen ein.",
			"typescript.preferences.jsxAttributeCompletionStyle.none": "Fügen Sie nur Attributnamen ein.",
			"typescript.preferences.organizeImports": "Erweiterte Einstellungen, die steuern, wie Importe geordnet werden.",
			"typescript.preferences.organizeImports.accentCollation": "Erfordert „organizeImports.unicodeCollation: 'unicode'“. Zeichen mit diakritischen Markierungen als ungleich zu Basiszeichen vergleichen.",
			"typescript.preferences.organizeImports.caseFirst": "Erfordert „organizeImports.unicodeCollation: „unicode“, und „organizeImports.caseSensitivity“ ist nicht „caseInsensitive“. Gibt an, ob Großbuchstaben vor Kleinbuchstaben sortiert werden.",
			"typescript.preferences.organizeImports.caseFirst.default": "Standardreihenfolge, die von „locale“ angegeben wird.",
			"typescript.preferences.organizeImports.caseFirst.lower": "Kleinbuchstaben kommen vor Großbuchstaben. Beispiel: a, A, z, Z.",
			"typescript.preferences.organizeImports.caseFirst.upper": "Großbuchstaben kommen vor Kleinbuchstaben. Beispiel: A, a, B, b.",
			"typescript.preferences.organizeImports.caseSensitivity": "Gibt an, wie Importe in Bezug auf die Unterscheidung nach Kleinschreibung sortiert werden sollen. Wenn „auto“ oder nicht angegeben ist, wird die Unterscheidung nach Kleinschreibung pro Datei erkannt.",
			"typescript.preferences.organizeImports.caseSensitivity.auto": "Groß-/Kleinbuchstaben für Importsortierung erkennen.",
			"typescript.preferences.organizeImports.caseSensitivity.insensitive": "Importe ohne Beachtung der Groß-/Kleinschreibung sortieren.",
			"typescript.preferences.organizeImports.caseSensitivity.sensitive": "Importe mit Beachtung der Groß-/Kleinschreibung sortieren.",
			"typescript.preferences.organizeImports.locale": "Erfordert „organizeImports.unicodeCollation: 'unicode'“. Überschreibt das Gebietsschema, das für die Sortierung verwendet wird. Geben Sie \"auto\" an, um das Gebietsschema der Benutzeroberfläche zu verwenden.",
			"typescript.preferences.organizeImports.numericCollation": "Erfordert „organizeImports.unicodeCollation: 'unicode'“. Numerische Zeichenfolgen nach ganzzahligem Wert sortieren.",
			"typescript.preferences.organizeImports.typeOrder": "Angeben, wie nur typbezogene benannte Importe sortiert werden sollen.",
			"typescript.preferences.organizeImports.typeOrder.auto": "Ermitteln, wo nur typbezogene benannte Importe sortiert werden sollen.",
			"typescript.preferences.organizeImports.typeOrder.first": "Nur benannte Importe vom Typ werden bis zum Ende der Importliste sortiert. Beispiel: „import { type A, type Y, B, Z } from 'module';“",
			"typescript.preferences.organizeImports.typeOrder.inline": "Benannte Importe werden nur nach Namen sortiert. Beispiel: „import { type A, B, type Y, Z } from 'module';“",
			"typescript.preferences.organizeImports.typeOrder.last": "Nur benannte Importe vom Typ werden bis zum Ende der Importliste sortiert. Beispiel: „import { B, Z, type A, type Y } from 'module';“",
			"typescript.preferences.organizeImports.unicodeCollation": "Geben Sie an, ob Importe mit Unicode- oder ordinaler Sortierung sortiert werden sollen.",
			"typescript.preferences.organizeImports.unicodeCollation.ordinal": "Importe anhand des numerischen Werts jedes Codepunkts sortieren.",
			"typescript.preferences.organizeImports.unicodeCollation.unicode": "Importe mithilfe der Unicode-Codesortierung sortieren.",
			"typescript.preferences.preferTypeOnlyAutoImports": "Schließen Sie das type-Schlüsselwort nach Möglichkeit in automatische Importe ein. Erfordert die Verwendung von TypeScript 5.3 und höher im Arbeitsbereich.",
			"typescript.preferences.quoteStyle": "Bevorzugtes Anführungszeichenformat, das für schnelle Problembehebungen verwendet werden soll.",
			"typescript.preferences.quoteStyle.auto": "Anführungszeichentyp aus vorhandenem Code ableiten",
			"typescript.preferences.quoteStyle.double": "Verwenden Sie immer doppelte Anführungszeichen: `\"`",
			"typescript.preferences.quoteStyle.single": "Verwenden Sie immer einfache Anführungszeichen: `'`",
			"typescript.preferences.renameMatchingJsxTags": "Wenn Sie ein JSX-Tag verwenden, versuchen Sie, das entsprechende Tag umzubenennen, anstatt das Symbol umzubenennen. Erfordert die Verwendung von TypeScript 5.1 und höher im Arbeitsbereich.",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "Die Einstellung \"typescript.preferences.renameShorthandProperties\" wurde zugunsten von \"typescript.preferences.useAliasesForRenames\" als veraltet markiert.",
			"typescript.preferences.useAliasesForRenames": "Aktivieren/Deaktivieren Sie die Einführung von Aliasen für Objektkompakteigenschaften während des Umbenennens.",
			"typescript.problemMatchers.tsc.label": "TypeScript-Probleme",
			"typescript.problemMatchers.tscWatch.label": "TypeScript-Probleme (Überwachungsmodus)",
			"typescript.referencesCodeLens.enabled": "Aktiviert oder deaktiviert CodeLens-Verweise in TypeScript-Dateien.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Verweise auf CodeLens für alle Funktionen in TypeScript-Dateien aktivieren/deaktivieren",
			"typescript.removeUnusedImports": "Nicht verwendete Importe entfernen",
			"typescript.reportStyleChecksAsWarnings": "Stilüberprüfungen als Warnungen melden.",
			"typescript.restartTsServer": "TS-Server neu starten",
			"typescript.selectTypeScriptVersion.title": "TypeScript-Version auswählen ...",
			"typescript.sortImports": "Importe sortieren",
			"typescript.suggest.enabled": "Vorschläge für die automatische Vervollständigung aktivieren bzw. deaktivieren.",
			"typescript.suggestionActions.enabled": "Aktiviert oder deaktiviert Vorschlagsdiagnosen für TypeScript-Dateien im Editor.",
			"typescript.tsc.autoDetect": "Legt fest, ob tsc-Tasks automatisch erkannt werden.",
			"typescript.tsc.autoDetect.build": "Nur Tasks mit einmaliger Kompilierung erstellen.",
			"typescript.tsc.autoDetect.off": "Dieses Feature deaktivieren.",
			"typescript.tsc.autoDetect.on": "Build- und Überwachungstasks erstellen",
			"typescript.tsc.autoDetect.watch": "Nur Kompilierungs- und Überwachungstasks erstellen.",
			"typescript.tsdk.desc": "Gibt den Ordnerpfad zu den tsserver- und lib*.d.ts-Dateien unter einer TypeScript-Installation zur Verwendung mit IntelliSense an, zum Beispiel: „./node_modules/typescript/lib“.\r\n\r\n– Sofern als Benutzereinstellung angegeben, ersetzt die TypeScript-Version aus „typescript.tsdk“ automatisch die integrierte TypeScript-Version.\r\n– Sofern als Arbeitsbereichseinstellung angegeben, erlaubt Ihnen „typescript.tsdk“ mit dem Befehl „TypeScript: Select TypeScript version“ zu dieser Arbeitsbereichsversion von TypeScript zu wechseln und sie für IntelliSense zu verwenden.\r\n\r\nWeitere Informationen zum Verwalten von TypeScript-Versionen finden Sie in der [Dokumentation zu TypeScript](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions).",
			"typescript.tsserver.enableRegionDiagnostics": "Aktiviert die regionsbasierte Diagnose in TypeScript. Erfordert die Verwendung von TypeScript 5.6 und höher im Arbeitsbereich.",
			"typescript.tsserver.enableTracing": "Aktiviert die Ablaufverfolgung für die TS-Serverleistung in einem Verzeichnis. Mithilfe dieser Ablaufverfolgungsdateien lassen sich Probleme mit der TS-Serverleistung diagnostizieren. Das Protokoll kann Dateipfade, Quellcode und weitere potenziell vertrauliche Informationen aus Ihrem Projekt enthalten.",
			"typescript.tsserver.log": "Aktiviert die Protokollierung des TS-Servers in eine Datei. Mithilfe der Protokolldatei lassen sich Probleme beim TS-Server diagnostizieren. Die Protokolldatei kann Dateipfade, Quellcode und weitere potenziell sensible Informationen aus Ihrem Projekt enthalten.",
			"typescript.tsserver.pluginPaths": "Zusätzliche Pfade zum Ermitteln von TypeScript Language Service-Plug-Ins.",
			"typescript.tsserver.pluginPaths.item": "Ein absoluter oder relativer Pfad. Ein relativer Pfad wird in Bezug auf die Arbeitsbereichsordner aufgelöst.",
			"typescript.tsserver.trace": "Aktiviert die Ablaufverfolgung von an den TS-Server gesendeten Nachrichten. Mithilfe der Ablaufverfolgung lassen sich Probleme beim TS-Server diagnostizieren. Die Ablaufverfolgung kann Dateipfade, Quellcode und weitere potenziell sensible Informationen aus Ihrem Projekt enthalten.",
			"typescript.updateImportsOnFileMove.enabled": "Aktiviert/deaktiviert die automatische Aktualisierung von Importpfaden beim Umbenennen oder Verschieben einer Datei in VS Code.",
			"typescript.updateImportsOnFileMove.enabled.always": "Pfade immer automatisch aktualisieren lassen.",
			"typescript.updateImportsOnFileMove.enabled.never": "Pfade nie umbenennen und keine Aufforderung anzeigen.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Bei jeder Umbenennung auffordern.",
			"typescript.validate.enable": "TypeScript-Überprüfung aktivieren/deaktivieren.",
			"typescript.workspaceSymbols.excludeLibrarySymbols": "Schließt in den Ergebnissen von „Zu Symbol im Arbeitsbereich wechseln“ Symbole aus, die aus Bibliotheksdateien stammen. Erfordert die Verwendung von TypeScript 5.3 und höher im Arbeitsbereich.",
			"typescript.workspaceSymbols.scope": "Hiermit wird gesteuert, welche Dateien über [Zu Symbol im Arbeitsbereich wechseln](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name) durchsucht werden.",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Durchsuchen Sie alle geöffneten JavaScript- oder TypeScript-Projekte nach Symbolen.",
			"typescript.workspaceSymbols.scope.currentProject": "Hiermit wird nur im aktuellen JavaScript- oder TypeScript-Projekt nach Symbolen gesucht.",
			"virtualWorkspaces": "In virtuellen Arbeitsbereichen wird das Auflösen und Suchen von Verweisen in Dateien nicht unterstützt.",
			"walkthroughs.nodejsWelcome.debugJsFile.altText": "Debuggen Sie Ihren JavaScript-Code in Node.js, und führen Sie ihn mit Visual Studio Code aus.",
			"walkthroughs.nodejsWelcome.debugJsFile.description": "Nachdem Sie Node.js installiert haben, können Sie JavaScript-Programme in einem Terminal ausführen, indem Sie \"node your-file-name.js\" eingeben\r\nEine weitere einfache Möglichkeit zum Ausführen von Node.js-Programmen ist die Verwendung des Debuggers von VS Code, mit dem Sie Ihren Code ausführen, an verschiedenen Stellen anhalten und Ihnen helfen, schrittweise zu verstehen, was vor sich geht.\r\n[Debuggen starten](command:javascript-walkthrough.commands.debugJsFile)",
			"walkthroughs.nodejsWelcome.debugJsFile.title": "JavaScript ausführen und debuggen",
			"walkthroughs.nodejsWelcome.description": "Nutzen Sie die erstklassige JavaScript-Erfahrung von Visual Studio Code.",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.description": "Node.js ist eine einfache Möglichkeit zum Ausführen von JavaScript-Code. Sie können damit schnell Befehlszeilen-Apps und -Server erstellen. Außerdem ist npm enthalten, ein Paket-Manager, der das Wiederverwenden und Freigeben von JavaScript-Code vereinfacht.\r\n[Node.js installieren](https://nodejs.org/en/download/package-manager/)",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.title": "Node.js installieren",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.description": "Node.js ist eine einfache Möglichkeit zum Ausführen von JavaScript-Code. Sie können damit schnell Befehlszeilen-Apps und -Server erstellen. Außerdem ist npm enthalten, ein Paket-Manager, der das Wiederverwenden und Freigeben von JavaScript-Code vereinfacht.\r\n[Node.js installieren](https://nodejs.org/en/download/)",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.title": "Node.js installieren",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.altText": "Erfahren Sie mehr über JavaScript und Node.js in Visual Studio Code.",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.description": "Möchten Sie sich mit JavaScript, Node.js und VS Code vertrauter machen? Sehen Sie sich unbedingt unsere Dokumentation an!\r\nWir haben viele Ressourcen zum Lernen [JavaScript](https://code.visualstudio.com/docs/nodejs/working-with-javascript) und [Node.js](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial).\r\n\r\n[Weitere Informationen](https://code.visualstudio.com/docs/nodejs/nodejs-Tutorial)",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.title": "Mehr entdecken",
			"walkthroughs.nodejsWelcome.makeJsFile.description": "Schreiben wir unsere erste JavaScript-Datei. Wir müssen eine neue Datei erstellen und sie mit der Erweiterung \".js\" am Ende des Dateinamens speichern.\r\n[Erstellen einer JavaScript-Datei](command:javascript-walkthrough.commands.createJsFile)",
			"walkthroughs.nodejsWelcome.makeJsFile.title": "JavaScript-Datei erstellen",
			"walkthroughs.nodejsWelcome.title": "Erste Schritte mit JavaScript und Node.js",
			"workspaceTrust": "Für die Erweiterung ist die Arbeitsbereichsvertrauensstellung erforderlich, wenn die Arbeitsbereichsversion verwendet wird, da sie vom Arbeitsbereich angegebene Code ausführt."
		}
	}
}
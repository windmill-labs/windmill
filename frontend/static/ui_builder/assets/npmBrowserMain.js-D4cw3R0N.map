{"version":3,"file":"npmBrowserMain.js","mappings":"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","sources":["webpack://npm/./node_modules/jsonc-parser/lib/esm/impl/scanner.js","webpack://npm/./node_modules/jsonc-parser/lib/esm/impl/parser.js","webpack://npm/./node_modules/jsonc-parser/lib/esm/impl/format.js","webpack://npm/./node_modules/jsonc-parser/lib/esm/impl/edit.js","webpack://npm/./node_modules/jsonc-parser/lib/esm/main.js","webpack://npm/./node_modules/request-light/lib/browser/main.js","webpack://npm/../../node_modules/path-browserify/index.js","webpack://npm/./src/features/bowerJSONContribution.ts","webpack://npm/./src/features/date.ts","webpack://npm/./src/features/jsonContributions.ts","webpack://npm/./src/features/packageJSONContribution.ts","webpack://npm/./src/npmBrowserMain.ts","webpack://npm/external commonjs \"vscode\"","webpack://npm/webpack/bootstrap","webpack://npm/webpack/runtime/define property getters","webpack://npm/webpack/runtime/hasOwnProperty shorthand","webpack://npm/webpack/runtime/make namespace object","webpack://npm/webpack/startup"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia = false) {\n    const len = text.length;\n    let pos = 0, value = '', tokenOffset = 0, token = 16 /* SyntaxKind.Unknown */, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0 /* ScanError.None */;\n    function scanHexDigits(count, exact) {\n        let digits = 0;\n        let value = 0;\n        while (digits < count || !exact) {\n            let ch = text.charCodeAt(pos);\n            if (ch >= 48 /* CharacterCodes._0 */ && ch <= 57 /* CharacterCodes._9 */) {\n                value = value * 16 + ch - 48 /* CharacterCodes._0 */;\n            }\n            else if (ch >= 65 /* CharacterCodes.A */ && ch <= 70 /* CharacterCodes.F */) {\n                value = value * 16 + ch - 65 /* CharacterCodes.A */ + 10;\n            }\n            else if (ch >= 97 /* CharacterCodes.a */ && ch <= 102 /* CharacterCodes.f */) {\n                value = value * 16 + ch - 97 /* CharacterCodes.a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* SyntaxKind.Unknown */;\n        scanError = 0 /* ScanError.None */;\n    }\n    function scanNumber() {\n        let start = pos;\n        if (text.charCodeAt(pos) === 48 /* CharacterCodes._0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* CharacterCodes.dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* ScanError.UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        let end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* CharacterCodes.E */ || text.charCodeAt(pos) === 101 /* CharacterCodes.e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* CharacterCodes.plus */ || text.charCodeAt(pos) === 45 /* CharacterCodes.minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* ScanError.UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        let result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* ScanError.UnexpectedEndOfString */;\n                break;\n            }\n            const ch = text.charCodeAt(pos);\n            if (ch === 34 /* CharacterCodes.doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* CharacterCodes.backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* ScanError.UnexpectedEndOfString */;\n                    break;\n                }\n                const ch2 = text.charCodeAt(pos++);\n                switch (ch2) {\n                    case 34 /* CharacterCodes.doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* CharacterCodes.backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* CharacterCodes.slash */:\n                        result += '/';\n                        break;\n                    case 98 /* CharacterCodes.b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* CharacterCodes.f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* CharacterCodes.n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* CharacterCodes.r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* CharacterCodes.t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* CharacterCodes.u */:\n                        const ch3 = scanHexDigits(4, true);\n                        if (ch3 >= 0) {\n                            result += String.fromCharCode(ch3);\n                        }\n                        else {\n                            scanError = 4 /* ScanError.InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* ScanError.InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* ScanError.UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* ScanError.InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* ScanError.None */;\n        tokenOffset = pos;\n        lineStartOffset = lineNumber;\n        prevTokenLineStartOffset = tokenLineStartOffset;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* SyntaxKind.EOF */;\n        }\n        let code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* SyntaxKind.Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* CharacterCodes.carriageReturn */ && text.charCodeAt(pos) === 10 /* CharacterCodes.lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            lineNumber++;\n            tokenLineStartOffset = pos;\n            return token = 14 /* SyntaxKind.LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* CharacterCodes.openBrace */:\n                pos++;\n                return token = 1 /* SyntaxKind.OpenBraceToken */;\n            case 125 /* CharacterCodes.closeBrace */:\n                pos++;\n                return token = 2 /* SyntaxKind.CloseBraceToken */;\n            case 91 /* CharacterCodes.openBracket */:\n                pos++;\n                return token = 3 /* SyntaxKind.OpenBracketToken */;\n            case 93 /* CharacterCodes.closeBracket */:\n                pos++;\n                return token = 4 /* SyntaxKind.CloseBracketToken */;\n            case 58 /* CharacterCodes.colon */:\n                pos++;\n                return token = 6 /* SyntaxKind.ColonToken */;\n            case 44 /* CharacterCodes.comma */:\n                pos++;\n                return token = 5 /* SyntaxKind.CommaToken */;\n            // strings\n            case 34 /* CharacterCodes.doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* SyntaxKind.StringLiteral */;\n            // comments\n            case 47 /* CharacterCodes.slash */:\n                const start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* CharacterCodes.slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* SyntaxKind.LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* CharacterCodes.asterisk */) {\n                    pos += 2;\n                    const safeLength = len - 1; // For lookahead.\n                    let commentClosed = false;\n                    while (pos < safeLength) {\n                        const ch = text.charCodeAt(pos);\n                        if (ch === 42 /* CharacterCodes.asterisk */ && text.charCodeAt(pos + 1) === 47 /* CharacterCodes.slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                        if (isLineBreak(ch)) {\n                            if (ch === 13 /* CharacterCodes.carriageReturn */ && text.charCodeAt(pos) === 10 /* CharacterCodes.lineFeed */) {\n                                pos++;\n                            }\n                            lineNumber++;\n                            tokenLineStartOffset = pos;\n                        }\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* ScanError.UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* SyntaxKind.BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* SyntaxKind.Unknown */;\n            // numbers\n            case 45 /* CharacterCodes.minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* SyntaxKind.Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* CharacterCodes._0 */:\n            case 49 /* CharacterCodes._1 */:\n            case 50 /* CharacterCodes._2 */:\n            case 51 /* CharacterCodes._3 */:\n            case 52 /* CharacterCodes._4 */:\n            case 53 /* CharacterCodes._5 */:\n            case 54 /* CharacterCodes._6 */:\n            case 55 /* CharacterCodes._7 */:\n            case 56 /* CharacterCodes._8 */:\n            case 57 /* CharacterCodes._9 */:\n                value += scanNumber();\n                return token = 11 /* SyntaxKind.NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* SyntaxKind.TrueKeyword */;\n                        case 'false': return token = 9 /* SyntaxKind.FalseKeyword */;\n                        case 'null': return token = 7 /* SyntaxKind.NullKeyword */;\n                    }\n                    return token = 16 /* SyntaxKind.Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* SyntaxKind.Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* CharacterCodes.closeBrace */:\n            case 93 /* CharacterCodes.closeBracket */:\n            case 123 /* CharacterCodes.openBrace */:\n            case 91 /* CharacterCodes.openBracket */:\n            case 34 /* CharacterCodes.doubleQuote */:\n            case 58 /* CharacterCodes.colon */:\n            case 44 /* CharacterCodes.comma */:\n            case 47 /* CharacterCodes.slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        let result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* SyntaxKind.LineCommentTrivia */ && result <= 15 /* SyntaxKind.Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: () => pos,\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: () => token,\n        getTokenValue: () => value,\n        getTokenOffset: () => tokenOffset,\n        getTokenLength: () => pos - tokenOffset,\n        getTokenStartLine: () => lineStartOffset,\n        getTokenStartCharacter: () => tokenOffset - prevTokenLineStartOffset,\n        getTokenError: () => scanError,\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* CharacterCodes.space */ || ch === 9 /* CharacterCodes.tab */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* CharacterCodes.lineFeed */ || ch === 13 /* CharacterCodes.carriageReturn */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* CharacterCodes._0 */ && ch <= 57 /* CharacterCodes._9 */;\n}\nvar CharacterCodes;\n(function (CharacterCodes) {\n    CharacterCodes[CharacterCodes[\"lineFeed\"] = 10] = \"lineFeed\";\n    CharacterCodes[CharacterCodes[\"carriageReturn\"] = 13] = \"carriageReturn\";\n    CharacterCodes[CharacterCodes[\"space\"] = 32] = \"space\";\n    CharacterCodes[CharacterCodes[\"_0\"] = 48] = \"_0\";\n    CharacterCodes[CharacterCodes[\"_1\"] = 49] = \"_1\";\n    CharacterCodes[CharacterCodes[\"_2\"] = 50] = \"_2\";\n    CharacterCodes[CharacterCodes[\"_3\"] = 51] = \"_3\";\n    CharacterCodes[CharacterCodes[\"_4\"] = 52] = \"_4\";\n    CharacterCodes[CharacterCodes[\"_5\"] = 53] = \"_5\";\n    CharacterCodes[CharacterCodes[\"_6\"] = 54] = \"_6\";\n    CharacterCodes[CharacterCodes[\"_7\"] = 55] = \"_7\";\n    CharacterCodes[CharacterCodes[\"_8\"] = 56] = \"_8\";\n    CharacterCodes[CharacterCodes[\"_9\"] = 57] = \"_9\";\n    CharacterCodes[CharacterCodes[\"a\"] = 97] = \"a\";\n    CharacterCodes[CharacterCodes[\"b\"] = 98] = \"b\";\n    CharacterCodes[CharacterCodes[\"c\"] = 99] = \"c\";\n    CharacterCodes[CharacterCodes[\"d\"] = 100] = \"d\";\n    CharacterCodes[CharacterCodes[\"e\"] = 101] = \"e\";\n    CharacterCodes[CharacterCodes[\"f\"] = 102] = \"f\";\n    CharacterCodes[CharacterCodes[\"g\"] = 103] = \"g\";\n    CharacterCodes[CharacterCodes[\"h\"] = 104] = \"h\";\n    CharacterCodes[CharacterCodes[\"i\"] = 105] = \"i\";\n    CharacterCodes[CharacterCodes[\"j\"] = 106] = \"j\";\n    CharacterCodes[CharacterCodes[\"k\"] = 107] = \"k\";\n    CharacterCodes[CharacterCodes[\"l\"] = 108] = \"l\";\n    CharacterCodes[CharacterCodes[\"m\"] = 109] = \"m\";\n    CharacterCodes[CharacterCodes[\"n\"] = 110] = \"n\";\n    CharacterCodes[CharacterCodes[\"o\"] = 111] = \"o\";\n    CharacterCodes[CharacterCodes[\"p\"] = 112] = \"p\";\n    CharacterCodes[CharacterCodes[\"q\"] = 113] = \"q\";\n    CharacterCodes[CharacterCodes[\"r\"] = 114] = \"r\";\n    CharacterCodes[CharacterCodes[\"s\"] = 115] = \"s\";\n    CharacterCodes[CharacterCodes[\"t\"] = 116] = \"t\";\n    CharacterCodes[CharacterCodes[\"u\"] = 117] = \"u\";\n    CharacterCodes[CharacterCodes[\"v\"] = 118] = \"v\";\n    CharacterCodes[CharacterCodes[\"w\"] = 119] = \"w\";\n    CharacterCodes[CharacterCodes[\"x\"] = 120] = \"x\";\n    CharacterCodes[CharacterCodes[\"y\"] = 121] = \"y\";\n    CharacterCodes[CharacterCodes[\"z\"] = 122] = \"z\";\n    CharacterCodes[CharacterCodes[\"A\"] = 65] = \"A\";\n    CharacterCodes[CharacterCodes[\"B\"] = 66] = \"B\";\n    CharacterCodes[CharacterCodes[\"C\"] = 67] = \"C\";\n    CharacterCodes[CharacterCodes[\"D\"] = 68] = \"D\";\n    CharacterCodes[CharacterCodes[\"E\"] = 69] = \"E\";\n    CharacterCodes[CharacterCodes[\"F\"] = 70] = \"F\";\n    CharacterCodes[CharacterCodes[\"G\"] = 71] = \"G\";\n    CharacterCodes[CharacterCodes[\"H\"] = 72] = \"H\";\n    CharacterCodes[CharacterCodes[\"I\"] = 73] = \"I\";\n    CharacterCodes[CharacterCodes[\"J\"] = 74] = \"J\";\n    CharacterCodes[CharacterCodes[\"K\"] = 75] = \"K\";\n    CharacterCodes[CharacterCodes[\"L\"] = 76] = \"L\";\n    CharacterCodes[CharacterCodes[\"M\"] = 77] = \"M\";\n    CharacterCodes[CharacterCodes[\"N\"] = 78] = \"N\";\n    CharacterCodes[CharacterCodes[\"O\"] = 79] = \"O\";\n    CharacterCodes[CharacterCodes[\"P\"] = 80] = \"P\";\n    CharacterCodes[CharacterCodes[\"Q\"] = 81] = \"Q\";\n    CharacterCodes[CharacterCodes[\"R\"] = 82] = \"R\";\n    CharacterCodes[CharacterCodes[\"S\"] = 83] = \"S\";\n    CharacterCodes[CharacterCodes[\"T\"] = 84] = \"T\";\n    CharacterCodes[CharacterCodes[\"U\"] = 85] = \"U\";\n    CharacterCodes[CharacterCodes[\"V\"] = 86] = \"V\";\n    CharacterCodes[CharacterCodes[\"W\"] = 87] = \"W\";\n    CharacterCodes[CharacterCodes[\"X\"] = 88] = \"X\";\n    CharacterCodes[CharacterCodes[\"Y\"] = 89] = \"Y\";\n    CharacterCodes[CharacterCodes[\"Z\"] = 90] = \"Z\";\n    CharacterCodes[CharacterCodes[\"asterisk\"] = 42] = \"asterisk\";\n    CharacterCodes[CharacterCodes[\"backslash\"] = 92] = \"backslash\";\n    CharacterCodes[CharacterCodes[\"closeBrace\"] = 125] = \"closeBrace\";\n    CharacterCodes[CharacterCodes[\"closeBracket\"] = 93] = \"closeBracket\";\n    CharacterCodes[CharacterCodes[\"colon\"] = 58] = \"colon\";\n    CharacterCodes[CharacterCodes[\"comma\"] = 44] = \"comma\";\n    CharacterCodes[CharacterCodes[\"dot\"] = 46] = \"dot\";\n    CharacterCodes[CharacterCodes[\"doubleQuote\"] = 34] = \"doubleQuote\";\n    CharacterCodes[CharacterCodes[\"minus\"] = 45] = \"minus\";\n    CharacterCodes[CharacterCodes[\"openBrace\"] = 123] = \"openBrace\";\n    CharacterCodes[CharacterCodes[\"openBracket\"] = 91] = \"openBracket\";\n    CharacterCodes[CharacterCodes[\"plus\"] = 43] = \"plus\";\n    CharacterCodes[CharacterCodes[\"slash\"] = 47] = \"slash\";\n    CharacterCodes[CharacterCodes[\"formFeed\"] = 12] = \"formFeed\";\n    CharacterCodes[CharacterCodes[\"tab\"] = 9] = \"tab\";\n})(CharacterCodes || (CharacterCodes = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    const segments = []; // strings or numbers\n    const earlyReturnException = new Object();\n    let previousNode = undefined;\n    const previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: undefined\n    };\n    let isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = undefined;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: (name, offset, length) => {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onArrayBegin: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.push(0);\n            },\n            onArrayEnd: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onLiteralValue: (value, offset, length) => {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: (sep, offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = undefined;\n                }\n                else if (sep === ',') {\n                    const last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = undefined;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode,\n        isAtPropertyKey,\n        matches: (pattern) => {\n            let k = 0;\n            for (let i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors = [], options = ParseOptions.DEFAULT) {\n    let currentProperty = null;\n    let currentParent = [];\n    const previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty !== null) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    const visitor = {\n        onObjectBegin: () => {\n            const object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: (name) => {\n            currentProperty = name;\n        },\n        onObjectEnd: () => {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: () => {\n            const array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: () => {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: (error, offset, length) => {\n            errors.push({ error, offset, length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors = [], options = ParseOptions.DEFAULT) {\n    let currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    const visitor = {\n        onObjectBegin: (offset) => {\n            currentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: (name, offset, length) => {\n            currentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset, length, parent: currentParent });\n        },\n        onObjectEnd: (offset, length) => {\n            ensurePropertyComplete(offset + length); // in case of a missing value for a property: make sure property is complete\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: (offset, length) => {\n            currentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: (offset, length) => {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: (value, offset, length) => {\n            onValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: (sep, offset, length) => {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: (error, offset, length) => {\n            errors.push({ error, offset, length });\n        }\n    };\n    visit(text, visitor, options);\n    const result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return undefined;\n    }\n    let node = root;\n    for (let segment of path) {\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return undefined;\n            }\n            let found = false;\n            for (const propertyNode of node.children) {\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment && propertyNode.children.length === 2) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return undefined;\n            }\n        }\n        else {\n            const index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return undefined;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    const path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        const key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        const index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            const obj = Object.create(null);\n            for (let prop of node.children) {\n                const valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return undefined;\n    }\n}\nexport function contains(node, offset, includeRightBound = false) {\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound = false) {\n    if (contains(node, offset, includeRightBound)) {\n        const children = node.children;\n        if (Array.isArray(children)) {\n            for (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n                const item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return undefined;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options = ParseOptions.DEFAULT) {\n    const _scanner = createScanner(text, false);\n    // Important: Only pass copies of this to visitor functions to prevent accidental modification, and\n    // to not affect visitor functions which stored a reference to a previous JSONPath\n    const _jsonPath = [];\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n    }\n    function toNoArgVisitWithPath(visitFunction) {\n        return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n    }\n    function toOneArgVisitWithPath(visitFunction) {\n        return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n    }\n    const onObjectBegin = toNoArgVisitWithPath(visitor.onObjectBegin), onObjectProperty = toOneArgVisitWithPath(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisitWithPath(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisitWithPath(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    const disallowComments = options && options.disallowComments;\n    const allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            const token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* ScanError.InvalidUnicode */:\n                    handleError(14 /* ParseErrorCode.InvalidUnicode */);\n                    break;\n                case 5 /* ScanError.InvalidEscapeCharacter */:\n                    handleError(15 /* ParseErrorCode.InvalidEscapeCharacter */);\n                    break;\n                case 3 /* ScanError.UnexpectedEndOfNumber */:\n                    handleError(13 /* ParseErrorCode.UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* ScanError.UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* ParseErrorCode.UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* ScanError.UnexpectedEndOfString */:\n                    handleError(12 /* ParseErrorCode.UnexpectedEndOfString */);\n                    break;\n                case 6 /* ScanError.InvalidCharacter */:\n                    handleError(16 /* ParseErrorCode.InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* SyntaxKind.LineCommentTrivia */:\n                case 13 /* SyntaxKind.BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* ParseErrorCode.InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* SyntaxKind.Unknown */:\n                    handleError(1 /* ParseErrorCode.InvalidSymbol */);\n                    break;\n                case 15 /* SyntaxKind.Trivia */:\n                case 14 /* SyntaxKind.LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter = [], skipUntil = []) {\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            let token = _scanner.getToken();\n            while (token !== 17 /* SyntaxKind.EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        const value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n            // add property name afterwards\n            _jsonPath.push(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* SyntaxKind.NumericLiteral */:\n                const tokenValue = _scanner.getTokenValue();\n                let value = Number(tokenValue);\n                if (isNaN(value)) {\n                    handleError(2 /* ParseErrorCode.InvalidNumberFormat */);\n                    value = 0;\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* SyntaxKind.NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* SyntaxKind.TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* SyntaxKind.FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* SyntaxKind.StringLiteral */) {\n            handleError(3 /* ParseErrorCode.PropertyNameExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* SyntaxKind.ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ParseErrorCode.ValueExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ParseErrorCode.ColonExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n        }\n        _jsonPath.pop(); // remove processed property name\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        let needsComma = false;\n        while (_scanner.getToken() !== 2 /* SyntaxKind.CloseBraceToken */ && _scanner.getToken() !== 17 /* SyntaxKind.EOF */) {\n            if (_scanner.getToken() === 5 /* SyntaxKind.CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* SyntaxKind.CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* ParseErrorCode.CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ParseErrorCode.ValueExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* SyntaxKind.CloseBraceToken */) {\n            handleError(7 /* ParseErrorCode.CloseBraceExpected */, [2 /* SyntaxKind.CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        let isFirstElement = true;\n        let needsComma = false;\n        while (_scanner.getToken() !== 4 /* SyntaxKind.CloseBracketToken */ && _scanner.getToken() !== 17 /* SyntaxKind.EOF */) {\n            if (_scanner.getToken() === 5 /* SyntaxKind.CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* SyntaxKind.CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* ParseErrorCode.CommaExpected */, [], []);\n            }\n            if (isFirstElement) {\n                _jsonPath.push(0);\n                isFirstElement = false;\n            }\n            else {\n                _jsonPath[_jsonPath.length - 1]++;\n            }\n            if (!parseValue()) {\n                handleError(4 /* ParseErrorCode.ValueExpected */, [], [4 /* SyntaxKind.CloseBracketToken */, 5 /* SyntaxKind.CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (!isFirstElement) {\n            _jsonPath.pop(); // remove array index\n        }\n        if (_scanner.getToken() !== 4 /* SyntaxKind.CloseBracketToken */) {\n            handleError(8 /* ParseErrorCode.CloseBracketExpected */, [4 /* SyntaxKind.CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* SyntaxKind.OpenBracketToken */:\n                return parseArray();\n            case 1 /* SyntaxKind.OpenBraceToken */:\n                return parseObject();\n            case 10 /* SyntaxKind.StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* SyntaxKind.EOF */) {\n        if (options.allowEmptyContent) {\n            return true;\n        }\n        handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n        return false;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* SyntaxKind.EOF */) {\n        handleError(9 /* ParseErrorCode.EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    let _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* SyntaxKind.LineCommentTrivia */:\n            case 13 /* SyntaxKind.BlockCommentTrivia */:\n            case 17 /* SyntaxKind.EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== undefined) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* SyntaxKind.EOF */);\n    return parts.join('');\n}\nexport function getNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        case 'object': {\n            if (!value) {\n                return 'null';\n            }\n            else if (Array.isArray(value)) {\n                return 'array';\n            }\n            return 'object';\n        }\n        default: return 'null';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nexport function format(documentText, range, options) {\n    let initialIndentLevel;\n    let formatText;\n    let formatTextStart;\n    let rangeStart;\n    let rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        let endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    const eol = getEOL(options, documentText);\n    let numberLineBreaks = 0;\n    let indentLevel = 0;\n    let indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    let scanner = createScanner(formatText, false);\n    let hasError = false;\n    function newLinesAndIndent() {\n        if (numberLineBreaks > 1) {\n            return repeat(eol, numberLineBreaks) + repeat(indentValue, initialIndentLevel + indentLevel);\n        }\n        else {\n            return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n        }\n    }\n    function scanNext() {\n        let token = scanner.scan();\n        numberLineBreaks = 0;\n        while (token === 15 /* SyntaxKind.Trivia */ || token === 14 /* SyntaxKind.LineBreakTrivia */) {\n            if (token === 14 /* SyntaxKind.LineBreakTrivia */ && options.keepLines) {\n                numberLineBreaks += 1;\n            }\n            else if (token === 14 /* SyntaxKind.LineBreakTrivia */) {\n                numberLineBreaks = 1;\n            }\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* SyntaxKind.Unknown */ || scanner.getTokenError() !== 0 /* ScanError.None */;\n        return token;\n    }\n    const editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && (!range || (startOffset < rangeEnd && endOffset > rangeStart)) && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    let firstToken = scanNext();\n    if (options.keepLines && numberLineBreaks > 0) {\n        addEdit(repeat(eol, numberLineBreaks), 0, 0);\n    }\n    if (firstToken !== 17 /* SyntaxKind.EOF */) {\n        let firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        let initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* SyntaxKind.EOF */) {\n        let firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        let secondToken = scanNext();\n        let replaceContent = '';\n        let needsLineBreak = false;\n        while (numberLineBreaks === 0 && (secondToken === 12 /* SyntaxKind.LineCommentTrivia */ || secondToken === 13 /* SyntaxKind.BlockCommentTrivia */)) {\n            let commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            needsLineBreak = secondToken === 12 /* SyntaxKind.LineCommentTrivia */;\n            replaceContent = needsLineBreak ? newLinesAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* SyntaxKind.CloseBraceToken */) {\n            if (firstToken !== 1 /* SyntaxKind.OpenBraceToken */) {\n                indentLevel--;\n            }\n            ;\n            if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 1 /* SyntaxKind.OpenBraceToken */) {\n                replaceContent = newLinesAndIndent();\n            }\n            else if (options.keepLines) {\n                replaceContent = ' ';\n            }\n        }\n        else if (secondToken === 4 /* SyntaxKind.CloseBracketToken */) {\n            if (firstToken !== 3 /* SyntaxKind.OpenBracketToken */) {\n                indentLevel--;\n            }\n            ;\n            if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 3 /* SyntaxKind.OpenBracketToken */) {\n                replaceContent = newLinesAndIndent();\n            }\n            else if (options.keepLines) {\n                replaceContent = ' ';\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* SyntaxKind.OpenBracketToken */:\n                case 1 /* SyntaxKind.OpenBraceToken */:\n                    indentLevel++;\n                    if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else {\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 5 /* SyntaxKind.CommaToken */:\n                    if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else {\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 12 /* SyntaxKind.LineCommentTrivia */:\n                    replaceContent = newLinesAndIndent();\n                    break;\n                case 13 /* SyntaxKind.BlockCommentTrivia */:\n                    if (numberLineBreaks > 0) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else if (!needsLineBreak) {\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* SyntaxKind.ColonToken */:\n                    if (options.keepLines && numberLineBreaks > 0) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else if (!needsLineBreak) {\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 10 /* SyntaxKind.StringLiteral */:\n                    if (options.keepLines && numberLineBreaks > 0) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else if (secondToken === 6 /* SyntaxKind.ColonToken */ && !needsLineBreak) {\n                        replaceContent = '';\n                    }\n                    break;\n                case 7 /* SyntaxKind.NullKeyword */:\n                case 8 /* SyntaxKind.TrueKeyword */:\n                case 9 /* SyntaxKind.FalseKeyword */:\n                case 11 /* SyntaxKind.NumericLiteral */:\n                case 2 /* SyntaxKind.CloseBraceToken */:\n                case 4 /* SyntaxKind.CloseBracketToken */:\n                    if (options.keepLines && numberLineBreaks > 0) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else {\n                        if ((secondToken === 12 /* SyntaxKind.LineCommentTrivia */ || secondToken === 13 /* SyntaxKind.BlockCommentTrivia */) && !needsLineBreak) {\n                            replaceContent = ' ';\n                        }\n                        else if (secondToken !== 5 /* SyntaxKind.CommaToken */ && secondToken !== 17 /* SyntaxKind.EOF */) {\n                            hasError = true;\n                        }\n                    }\n                    break;\n                case 16 /* SyntaxKind.Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (numberLineBreaks > 0 && (secondToken === 12 /* SyntaxKind.LineCommentTrivia */ || secondToken === 13 /* SyntaxKind.BlockCommentTrivia */)) {\n                replaceContent = newLinesAndIndent();\n            }\n        }\n        if (secondToken === 17 /* SyntaxKind.EOF */) {\n            if (options.keepLines && numberLineBreaks > 0) {\n                replaceContent = newLinesAndIndent();\n            }\n            else {\n                replaceContent = options.insertFinalNewline ? eol : '';\n            }\n        }\n        const secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    let result = '';\n    for (let i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, options) {\n    let i = 0;\n    let nChars = 0;\n    const tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        let ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format';\nimport { parseTree, findNodeAtLocation } from './parser';\nexport function removeProperty(text, path, options) {\n    return setProperty(text, path, void 0, options);\n}\nexport function setProperty(text, originalPath, value, options) {\n    const path = originalPath.slice();\n    const errors = [];\n    const root = parseTree(text, errors);\n    let parent = void 0;\n    let lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = { [lastSegment]: value };\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) { // delete\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, options);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        const existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) { // delete\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                const propertyIndex = parent.children.indexOf(existing.parent);\n                let removeBegin;\n                let removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    let previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        let next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, options);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, options);\n            }\n        }\n        else {\n            if (value === void 0) { // delete\n                return []; // property does not exist, nothing to do\n            }\n            const newProperty = `${JSON.stringify(lastSegment)}: ${JSON.stringify(value)}`;\n            const index = options.getInsertionIndex ? options.getInsertionIndex(parent.children.map(p => p.children[0].value)) : parent.children.length;\n            let edit;\n            if (index > 0) {\n                let previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, options);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        const insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            const newProperty = `${JSON.stringify(value)}`;\n            let edit;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                const previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, options);\n        }\n        else if (value === void 0 && parent.children.length >= 0) {\n            // Removal\n            const removalIndex = lastSegment;\n            const toRemove = parent.children[removalIndex];\n            let edit;\n            if (parent.children.length === 1) {\n                // only item\n                edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n            }\n            else if (parent.children.length - 1 === removalIndex) {\n                // last item\n                let previous = parent.children[removalIndex - 1];\n                let offset = previous.offset + previous.length;\n                let parentEndOffset = parent.offset + parent.length;\n                edit = { offset, length: parentEndOffset - 2 - offset, content: '' };\n            }\n            else {\n                edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n            }\n            return withFormatting(text, edit, options);\n        }\n        else if (value !== void 0) {\n            let edit;\n            const newProperty = `${JSON.stringify(value)}`;\n            if (!options.isArrayInsertion && parent.children.length > lastSegment) {\n                const toModify = parent.children[lastSegment];\n                edit = { offset: toModify.offset, length: toModify.length, content: newProperty };\n            }\n            else if (parent.children.length === 0 || lastSegment === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: parent.children.length === 0 ? newProperty : newProperty + ',' };\n            }\n            else {\n                const index = lastSegment > parent.children.length ? parent.children.length : lastSegment;\n                const previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, options);\n        }\n        else {\n            throw new Error(`Can not ${value === void 0 ? 'remove' : (options.isArrayInsertion ? 'insert' : 'modify')} Array index ${insertIndex} as length is not sufficient`);\n        }\n    }\n    else {\n        throw new Error(`Can not add ${typeof lastSegment !== 'number' ? 'index' : 'property'} to parent of type ${parent.type}`);\n    }\n}\nfunction withFormatting(text, edit, options) {\n    if (!options.formattingOptions) {\n        return [edit];\n    }\n    // apply the edit\n    let newText = applyEdit(text, edit);\n    // format the new text\n    let begin = edit.offset;\n    let end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) { // insert or remove\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    const edits = format(newText, { offset: begin, length: end - begin }, { ...options.formattingOptions, keepLines: false });\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (let i = edits.length - 1; i >= 0; i--) {\n        const edit = edits[i];\n        newText = applyEdit(newText, edit);\n        begin = Math.min(begin, edit.offset);\n        end = Math.max(end, edit.offset + edit.length);\n        end += edit.content.length - edit.length;\n    }\n    // create a single edit with all changes\n    const editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format';\nimport * as edit from './impl/edit';\nimport * as scanner from './impl/scanner';\nimport * as parser from './impl/parser';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport const createScanner = scanner.createScanner;\nexport var ScanError;\n(function (ScanError) {\n    ScanError[ScanError[\"None\"] = 0] = \"None\";\n    ScanError[ScanError[\"UnexpectedEndOfComment\"] = 1] = \"UnexpectedEndOfComment\";\n    ScanError[ScanError[\"UnexpectedEndOfString\"] = 2] = \"UnexpectedEndOfString\";\n    ScanError[ScanError[\"UnexpectedEndOfNumber\"] = 3] = \"UnexpectedEndOfNumber\";\n    ScanError[ScanError[\"InvalidUnicode\"] = 4] = \"InvalidUnicode\";\n    ScanError[ScanError[\"InvalidEscapeCharacter\"] = 5] = \"InvalidEscapeCharacter\";\n    ScanError[ScanError[\"InvalidCharacter\"] = 6] = \"InvalidCharacter\";\n})(ScanError || (ScanError = {}));\nexport var SyntaxKind;\n(function (SyntaxKind) {\n    SyntaxKind[SyntaxKind[\"OpenBraceToken\"] = 1] = \"OpenBraceToken\";\n    SyntaxKind[SyntaxKind[\"CloseBraceToken\"] = 2] = \"CloseBraceToken\";\n    SyntaxKind[SyntaxKind[\"OpenBracketToken\"] = 3] = \"OpenBracketToken\";\n    SyntaxKind[SyntaxKind[\"CloseBracketToken\"] = 4] = \"CloseBracketToken\";\n    SyntaxKind[SyntaxKind[\"CommaToken\"] = 5] = \"CommaToken\";\n    SyntaxKind[SyntaxKind[\"ColonToken\"] = 6] = \"ColonToken\";\n    SyntaxKind[SyntaxKind[\"NullKeyword\"] = 7] = \"NullKeyword\";\n    SyntaxKind[SyntaxKind[\"TrueKeyword\"] = 8] = \"TrueKeyword\";\n    SyntaxKind[SyntaxKind[\"FalseKeyword\"] = 9] = \"FalseKeyword\";\n    SyntaxKind[SyntaxKind[\"StringLiteral\"] = 10] = \"StringLiteral\";\n    SyntaxKind[SyntaxKind[\"NumericLiteral\"] = 11] = \"NumericLiteral\";\n    SyntaxKind[SyntaxKind[\"LineCommentTrivia\"] = 12] = \"LineCommentTrivia\";\n    SyntaxKind[SyntaxKind[\"BlockCommentTrivia\"] = 13] = \"BlockCommentTrivia\";\n    SyntaxKind[SyntaxKind[\"LineBreakTrivia\"] = 14] = \"LineBreakTrivia\";\n    SyntaxKind[SyntaxKind[\"Trivia\"] = 15] = \"Trivia\";\n    SyntaxKind[SyntaxKind[\"Unknown\"] = 16] = \"Unknown\";\n    SyntaxKind[SyntaxKind[\"EOF\"] = 17] = \"EOF\";\n})(SyntaxKind || (SyntaxKind = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport const getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore, always check the errors list to find out if the input was valid.\n */\nexport const parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport const parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport const findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the innermost node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport const findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport const getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport const getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport const visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport const stripComments = parser.stripComments;\nexport var ParseErrorCode;\n(function (ParseErrorCode) {\n    ParseErrorCode[ParseErrorCode[\"InvalidSymbol\"] = 1] = \"InvalidSymbol\";\n    ParseErrorCode[ParseErrorCode[\"InvalidNumberFormat\"] = 2] = \"InvalidNumberFormat\";\n    ParseErrorCode[ParseErrorCode[\"PropertyNameExpected\"] = 3] = \"PropertyNameExpected\";\n    ParseErrorCode[ParseErrorCode[\"ValueExpected\"] = 4] = \"ValueExpected\";\n    ParseErrorCode[ParseErrorCode[\"ColonExpected\"] = 5] = \"ColonExpected\";\n    ParseErrorCode[ParseErrorCode[\"CommaExpected\"] = 6] = \"CommaExpected\";\n    ParseErrorCode[ParseErrorCode[\"CloseBraceExpected\"] = 7] = \"CloseBraceExpected\";\n    ParseErrorCode[ParseErrorCode[\"CloseBracketExpected\"] = 8] = \"CloseBracketExpected\";\n    ParseErrorCode[ParseErrorCode[\"EndOfFileExpected\"] = 9] = \"EndOfFileExpected\";\n    ParseErrorCode[ParseErrorCode[\"InvalidCommentToken\"] = 10] = \"InvalidCommentToken\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfComment\"] = 11] = \"UnexpectedEndOfComment\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfString\"] = 12] = \"UnexpectedEndOfString\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfNumber\"] = 13] = \"UnexpectedEndOfNumber\";\n    ParseErrorCode[ParseErrorCode[\"InvalidUnicode\"] = 14] = \"InvalidUnicode\";\n    ParseErrorCode[ParseErrorCode[\"InvalidEscapeCharacter\"] = 15] = \"InvalidEscapeCharacter\";\n    ParseErrorCode[ParseErrorCode[\"InvalidCharacter\"] = 16] = \"InvalidCharacter\";\n})(ParseErrorCode || (ParseErrorCode = {}));\nexport function printParseErrorCode(code) {\n    switch (code) {\n        case 1 /* ParseErrorCode.InvalidSymbol */: return 'InvalidSymbol';\n        case 2 /* ParseErrorCode.InvalidNumberFormat */: return 'InvalidNumberFormat';\n        case 3 /* ParseErrorCode.PropertyNameExpected */: return 'PropertyNameExpected';\n        case 4 /* ParseErrorCode.ValueExpected */: return 'ValueExpected';\n        case 5 /* ParseErrorCode.ColonExpected */: return 'ColonExpected';\n        case 6 /* ParseErrorCode.CommaExpected */: return 'CommaExpected';\n        case 7 /* ParseErrorCode.CloseBraceExpected */: return 'CloseBraceExpected';\n        case 8 /* ParseErrorCode.CloseBracketExpected */: return 'CloseBracketExpected';\n        case 9 /* ParseErrorCode.EndOfFileExpected */: return 'EndOfFileExpected';\n        case 10 /* ParseErrorCode.InvalidCommentToken */: return 'InvalidCommentToken';\n        case 11 /* ParseErrorCode.UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\n        case 12 /* ParseErrorCode.UnexpectedEndOfString */: return 'UnexpectedEndOfString';\n        case 13 /* ParseErrorCode.UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\n        case 14 /* ParseErrorCode.InvalidUnicode */: return 'InvalidUnicode';\n        case 15 /* ParseErrorCode.InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\n        case 16 /* ParseErrorCode.InvalidCharacter */: return 'InvalidCharacter';\n    }\n    return '<unknown ParseErrorCode>';\n}\n/**\n * Computes the edit operations needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns The edit operations describing the formatting changes to the original document following the format described in {@linkcode EditResult}.\n * To apply the edit operations to the input, use {@linkcode applyEdits}.\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edit operations needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns The edit operations describing the changes to the original document, following the format described in {@linkcode EditResult}.\n * To apply the edit operations to the input, use {@linkcode applyEdits}.\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options);\n}\n/**\n * Applies edits to an input string.\n * @param text The input text\n * @param edits Edit operations following the format described in {@linkcode EditResult}.\n * @returns The text with the applied edits.\n * @throws An error if the edit operations are not well-formed as described in {@linkcode EditResult}.\n */\nexport function applyEdits(text, edits) {\n    let sortedEdits = edits.slice(0).sort((a, b) => {\n        const diff = a.offset - b.offset;\n        if (diff === 0) {\n            return a.length - b.length;\n        }\n        return diff;\n    });\n    let lastModifiedOffset = text.length;\n    for (let i = sortedEdits.length - 1; i >= 0; i--) {\n        let e = sortedEdits[i];\n        if (e.offset + e.length <= lastModifiedOffset) {\n            text = edit.applyEdit(text, e);\n        }\n        else {\n            throw new Error('Overlapping edit');\n        }\n        lastModifiedOffset = e.offset;\n    }\n    return text;\n}\n","(()=>{\"use strict\";var e={};(()=>{var r=e;Object.defineProperty(r,\"__esModule\",{value:!0}),r.getErrorStatusDescription=r.xhr=r.configure=void 0,r.configure=(e,r)=>{},r.xhr=async e=>{const r=new Headers;if(e.headers)for(const t in e.headers){const o=e.headers[t];Array.isArray(o)?o.forEach((e=>r.set(t,e))):r.set(t,o)}e.user&&e.password&&r.set(\"Authorization\",\"Basic \"+btoa(e.user+\":\"+e.password));const t={method:e.type,redirect:e.followRedirects>0?\"follow\":\"manual\",mode:\"cors\",headers:r};if(e.data&&(t.body=e.data),e.token){const r=new AbortController;e.token.isCancellationRequested&&r.abort(),e.token.onCancellationRequested((()=>{r.abort()})),t.signal=r.signal}const o=new Request(e.url,t),s=await fetch(o),a={};s.headers.forEach(((e,r)=>{a[r]=e}));const n=await s.arrayBuffer();return new class{constructor(){this.status=s.status,this.headers=a}get responseText(){return(new TextDecoder).decode(n)}get body(){return new Uint8Array(n)}}},r.getErrorStatusDescription=function(e){return String(e)}})();var r=exports;for(var t in e)r[t]=e[t];e.__esModule&&Object.defineProperty(r,\"__esModule\",{value:!0})})();","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MarkdownString, CompletionItemKind, CompletionItem, DocumentSelector, SnippetString, workspace, Uri, l10n } from 'vscode';\nimport { IJSONContribution, ISuggestionsCollector } from './jsonContributions';\nimport { XHRRequest } from 'request-light';\nimport { Location } from 'jsonc-parser';\n\n\nconst USER_AGENT = 'Visual Studio Code';\n\nexport class BowerJSONContribution implements IJSONContribution {\n\n\tprivate topRanked = ['twitter', 'bootstrap', 'angular-1.1.6', 'angular-latest', 'angulerjs', 'd3', 'myjquery', 'jq', 'abcdef1234567890', 'jQuery', 'jquery-1.11.1', 'jquery',\n\t\t'sushi-vanilla-x-data', 'font-awsome', 'Font-Awesome', 'font-awesome', 'fontawesome', 'html5-boilerplate', 'impress.js', 'homebrew',\n\t\t'backbone', 'moment1', 'momentjs', 'moment', 'linux', 'animate.css', 'animate-css', 'reveal.js', 'jquery-file-upload', 'blueimp-file-upload', 'threejs', 'express', 'chosen',\n\t\t'normalize-css', 'normalize.css', 'semantic', 'semantic-ui', 'Semantic-UI', 'modernizr', 'underscore', 'underscore1',\n\t\t'material-design-icons', 'ionic', 'chartjs', 'Chart.js', 'nnnick-chartjs', 'select2-ng', 'select2-dist', 'phantom', 'skrollr', 'scrollr', 'less.js', 'leancss', 'parser-lib',\n\t\t'hui', 'bootstrap-languages', 'async', 'gulp', 'jquery-pjax', 'coffeescript', 'hammer.js', 'ace', 'leaflet', 'jquery-mobile', 'sweetalert', 'typeahead.js', 'soup', 'typehead.js',\n\t\t'sails', 'codeigniter2'];\n\n\tprivate xhr: XHRRequest;\n\n\tpublic constructor(xhr: XHRRequest) {\n\t\tthis.xhr = xhr;\n\t}\n\n\tpublic getDocumentSelector(): DocumentSelector {\n\t\treturn [{ language: 'json', scheme: '*', pattern: '**/bower.json' }, { language: 'json', scheme: '*', pattern: '**/.bower.json' }];\n\t}\n\n\tprivate isEnabled() {\n\t\treturn !!workspace.getConfiguration('npm').get('fetchOnlinePackageInfo');\n\t}\n\n\tpublic collectDefaultSuggestions(_resource: Uri, collector: ISuggestionsCollector): Thenable<any> {\n\t\tconst defaultValue = {\n\t\t\t'name': '${1:name}',\n\t\t\t'description': '${2:description}',\n\t\t\t'authors': ['${3:author}'],\n\t\t\t'version': '${4:1.0.0}',\n\t\t\t'main': '${5:pathToMain}',\n\t\t\t'dependencies': {}\n\t\t};\n\t\tconst proposal = new CompletionItem(l10n.t(\"Default bower.json\"));\n\t\tproposal.kind = CompletionItemKind.Class;\n\t\tproposal.insertText = new SnippetString(JSON.stringify(defaultValue, null, '\\t'));\n\t\tcollector.add(proposal);\n\t\treturn Promise.resolve(null);\n\t}\n\n\tpublic collectPropertySuggestions(_resource: Uri, location: Location, currentWord: string, addValue: boolean, isLast: boolean, collector: ISuggestionsCollector): Thenable<any> | null {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn null;\n\t\t}\n\t\tif ((location.matches(['dependencies']) || location.matches(['devDependencies']))) {\n\t\t\tif (currentWord.length > 0) {\n\t\t\t\tconst queryUrl = 'https://registry.bower.io/packages/search/' + encodeURIComponent(currentWord);\n\n\t\t\t\treturn this.xhr({\n\t\t\t\t\turl: queryUrl,\n\t\t\t\t\theaders: { agent: USER_AGENT }\n\t\t\t\t}).then((success) => {\n\t\t\t\t\tif (success.status === 200) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst obj = JSON.parse(success.responseText);\n\t\t\t\t\t\t\tif (Array.isArray(obj)) {\n\t\t\t\t\t\t\t\tconst results = <{ name: string; description: string }[]>obj;\n\t\t\t\t\t\t\t\tfor (const result of results) {\n\t\t\t\t\t\t\t\t\tconst name = result.name;\n\t\t\t\t\t\t\t\t\tconst description = result.description || '';\n\t\t\t\t\t\t\t\t\tconst insertText = new SnippetString().appendText(JSON.stringify(name));\n\t\t\t\t\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\t\t\t\t\tinsertText.appendText(': ').appendPlaceholder('latest');\n\t\t\t\t\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\t\t\t\t\tinsertText.appendText(',');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst proposal = new CompletionItem(name);\n\t\t\t\t\t\t\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\t\t\t\t\t\t\tproposal.insertText = insertText;\n\t\t\t\t\t\t\t\t\tproposal.filterText = JSON.stringify(name);\n\t\t\t\t\t\t\t\t\tproposal.documentation = description;\n\t\t\t\t\t\t\t\t\tcollector.add(proposal);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcollector.setAsIncomplete();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcollector.error(l10n.t(\"Request to the bower repository failed: {0}\", success.responseText));\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t}, (error) => {\n\t\t\t\t\tcollector.error(l10n.t(\"Request to the bower repository failed: {0}\", error.responseText));\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.topRanked.forEach((name) => {\n\t\t\t\t\tconst insertText = new SnippetString().appendText(JSON.stringify(name));\n\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\tinsertText.appendText(': ').appendPlaceholder('latest');\n\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\tinsertText.appendText(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst proposal = new CompletionItem(name);\n\t\t\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\t\t\tproposal.insertText = insertText;\n\t\t\t\t\tproposal.filterText = JSON.stringify(name);\n\t\t\t\t\tproposal.documentation = '';\n\t\t\t\t\tcollector.add(proposal);\n\t\t\t\t});\n\t\t\t\tcollector.setAsIncomplete();\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic collectValueSuggestions(_resource: Uri, location: Location, collector: ISuggestionsCollector): Promise<any> | null {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn null;\n\t\t}\n\t\tif ((location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']))) {\n\t\t\t// not implemented. Could be do done calling the bower command. Waiting for web API: https://github.com/bower/registry/issues/26\n\t\t\tconst proposal = new CompletionItem(l10n.t(\"latest\"));\n\t\t\tproposal.insertText = new SnippetString('\"${1:latest}\"');\n\t\t\tproposal.filterText = '\"\"';\n\t\t\tproposal.kind = CompletionItemKind.Value;\n\t\t\tproposal.documentation = 'The latest version of the package';\n\t\t\tcollector.add(proposal);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic resolveSuggestion(_resource: Uri | undefined, item: CompletionItem): Thenable<CompletionItem | null> | null {\n\t\tif (item.kind === CompletionItemKind.Property && item.documentation === '') {\n\n\t\t\tlet label = item.label;\n\t\t\tif (typeof label !== 'string') {\n\t\t\t\tlabel = label.label;\n\t\t\t}\n\n\t\t\treturn this.getInfo(label).then(documentation => {\n\t\t\t\tif (documentation) {\n\t\t\t\t\titem.documentation = documentation;\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getInfo(pack: string): Thenable<string | undefined> {\n\t\tconst queryUrl = 'https://registry.bower.io/packages/' + encodeURIComponent(pack);\n\n\t\treturn this.xhr({\n\t\t\turl: queryUrl,\n\t\t\theaders: { agent: USER_AGENT }\n\t\t}).then((success) => {\n\t\t\ttry {\n\t\t\t\tconst obj = JSON.parse(success.responseText);\n\t\t\t\tif (obj && obj.url) {\n\t\t\t\t\tlet url: string = obj.url;\n\t\t\t\t\tif (url.indexOf('git://') === 0) {\n\t\t\t\t\t\turl = url.substring(6);\n\t\t\t\t\t}\n\t\t\t\t\tif (url.length >= 4 && url.substr(url.length - 4) === '.git') {\n\t\t\t\t\t\turl = url.substring(0, url.length - 4);\n\t\t\t\t\t}\n\t\t\t\t\treturn url;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}, () => {\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tpublic getInfoContribution(_resource: Uri, location: Location): Thenable<MarkdownString[] | null> | null {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn null;\n\t\t}\n\t\tif ((location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']))) {\n\t\t\tconst pack = location.path[location.path.length - 1];\n\t\t\tif (typeof pack === 'string') {\n\t\t\t\treturn this.getInfo(pack).then(documentation => {\n\t\t\t\t\tif (documentation) {\n\t\t\t\t\t\tconst str = new MarkdownString();\n\t\t\t\t\t\tstr.appendText(documentation);\n\t\t\t\t\t\treturn [str];\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { l10n } from 'vscode';\n\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\n/**\n * Create a localized of the time between now and the specified date.\n * @param date The date to generate the difference from.\n * @param appendAgoLabel Whether to append the \" ago\" to the end.\n * @param useFullTimeWords Whether to use full words (eg. seconds) instead of\n * shortened (eg. secs).\n * @param disallowNow Whether to disallow the string \"now\" when the difference\n * is less than 30 seconds.\n */\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean, useFullTimeWords?: boolean, disallowNow?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < -30) {\n\t\treturn l10n.t('in {0}', fromNow(new Date().getTime() + seconds * 1000, false));\n\t}\n\n\tif (!disallowNow && seconds < 30) {\n\t\treturn l10n.t('now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} second ago', value)\n\t\t\t\t\t: l10n.t('{0} sec ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} seconds ago', value)\n\t\t\t\t\t: l10n.t('{0} secs ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} second', value)\n\t\t\t\t\t: l10n.t('{0} sec', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} seconds', value)\n\t\t\t\t\t: l10n.t('{0} secs', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} minute ago', value)\n\t\t\t\t\t: l10n.t('{0} min ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} minutes ago', value)\n\t\t\t\t\t: l10n.t('{0} mins ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} minute', value)\n\t\t\t\t\t: l10n.t('{0} min', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} minutes', value)\n\t\t\t\t\t: l10n.t('{0} mins', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} hour ago', value)\n\t\t\t\t\t: l10n.t('{0} hr ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} hours ago', value)\n\t\t\t\t\t: l10n.t('{0} hrs ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} hour', value)\n\t\t\t\t\t: l10n.t('{0} hr', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} hours', value)\n\t\t\t\t\t: l10n.t('{0} hrs', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? l10n.t('{0} day ago', value)\n\t\t\t\t: l10n.t('{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? l10n.t('{0} day', value)\n\t\t\t\t: l10n.t('{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} week ago', value)\n\t\t\t\t\t: l10n.t('{0} wk ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} weeks ago', value)\n\t\t\t\t\t: l10n.t('{0} wks ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} week', value)\n\t\t\t\t\t: l10n.t('{0} wk', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} weeks', value)\n\t\t\t\t\t: l10n.t('{0} wks', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} month ago', value)\n\t\t\t\t\t: l10n.t('{0} mo ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} months ago', value)\n\t\t\t\t\t: l10n.t('{0} mos ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} month', value)\n\t\t\t\t\t: l10n.t('{0} mo', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} months', value)\n\t\t\t\t\t: l10n.t('{0} mos', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\tif (value === 1) {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? l10n.t('{0} year ago', value)\n\t\t\t\t: l10n.t('{0} yr ago', value);\n\t\t} else {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? l10n.t('{0} years ago', value)\n\t\t\t\t: l10n.t('{0} yrs ago', value);\n\t\t}\n\t} else {\n\t\tif (value === 1) {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? l10n.t('{0} year', value)\n\t\t\t\t: l10n.t('{0} yr', value);\n\t\t} else {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? l10n.t('{0} years', value)\n\t\t\t\t: l10n.t('{0} yrs', value);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Location, getLocation, createScanner, SyntaxKind, ScanError, JSONScanner } from 'jsonc-parser';\nimport { BowerJSONContribution } from './bowerJSONContribution';\nimport { PackageJSONContribution } from './packageJSONContribution';\nimport { XHRRequest } from 'request-light';\n\nimport {\n\tCompletionItem, CompletionItemProvider, CompletionList, TextDocument, Position, Hover, HoverProvider,\n\tCancellationToken, Range, DocumentSelector, languages, Disposable, Uri, MarkdownString\n} from 'vscode';\n\nexport interface ISuggestionsCollector {\n\tadd(suggestion: CompletionItem): void;\n\terror(message: string): void;\n\tlog(message: string): void;\n\tsetAsIncomplete(): void;\n}\n\nexport interface IJSONContribution {\n\tgetDocumentSelector(): DocumentSelector;\n\tgetInfoContribution(resourceUri: Uri, location: Location): Thenable<MarkdownString[] | null> | null;\n\tcollectPropertySuggestions(resourceUri: Uri, location: Location, currentWord: string, addValue: boolean, isLast: boolean, result: ISuggestionsCollector): Thenable<any> | null;\n\tcollectValueSuggestions(resourceUri: Uri, location: Location, result: ISuggestionsCollector): Thenable<any> | null;\n\tcollectDefaultSuggestions(resourceUri: Uri, result: ISuggestionsCollector): Thenable<any>;\n\tresolveSuggestion?(resourceUri: Uri | undefined, item: CompletionItem): Thenable<CompletionItem | null> | null;\n}\n\nexport function addJSONProviders(xhr: XHRRequest, npmCommandPath: string | undefined): Disposable {\n\tconst contributions = [new PackageJSONContribution(xhr, npmCommandPath), new BowerJSONContribution(xhr)];\n\tconst subscriptions: Disposable[] = [];\n\tcontributions.forEach(contribution => {\n\t\tconst selector = contribution.getDocumentSelector();\n\t\tsubscriptions.push(languages.registerCompletionItemProvider(selector, new JSONCompletionItemProvider(contribution), '\"', ':'));\n\t\tsubscriptions.push(languages.registerHoverProvider(selector, new JSONHoverProvider(contribution)));\n\t});\n\treturn Disposable.from(...subscriptions);\n}\n\nexport class JSONHoverProvider implements HoverProvider {\n\n\tconstructor(private jsonContribution: IJSONContribution) {\n\t}\n\n\tpublic provideHover(document: TextDocument, position: Position, _token: CancellationToken): Thenable<Hover> | null {\n\t\tconst offset = document.offsetAt(position);\n\t\tconst location = getLocation(document.getText(), offset);\n\t\tif (!location.previousNode) {\n\t\t\treturn null;\n\t\t}\n\t\tconst node = location.previousNode;\n\t\tif (node && node.offset <= offset && offset <= node.offset + node.length) {\n\t\t\tconst promise = this.jsonContribution.getInfoContribution(document.uri, location);\n\t\t\tif (promise) {\n\t\t\t\treturn promise.then(htmlContent => {\n\t\t\t\t\tconst range = new Range(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n\t\t\t\t\tconst result: Hover = {\n\t\t\t\t\t\tcontents: htmlContent || [],\n\t\t\t\t\t\trange: range\n\t\t\t\t\t};\n\t\t\t\t\treturn result;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport class JSONCompletionItemProvider implements CompletionItemProvider {\n\n\tprivate lastResource: Uri | undefined;\n\n\tconstructor(private jsonContribution: IJSONContribution) {\n\t}\n\n\tpublic resolveCompletionItem(item: CompletionItem, _token: CancellationToken): Thenable<CompletionItem | null> {\n\t\tif (this.jsonContribution.resolveSuggestion) {\n\t\t\tconst resolver = this.jsonContribution.resolveSuggestion(this.lastResource, item);\n\t\t\tif (resolver) {\n\t\t\t\treturn resolver;\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(item);\n\t}\n\n\tpublic provideCompletionItems(document: TextDocument, position: Position, _token: CancellationToken): Thenable<CompletionList | null> | null {\n\t\tthis.lastResource = document.uri;\n\n\n\t\tconst currentWord = this.getCurrentWord(document, position);\n\t\tlet overwriteRange: Range;\n\n\t\tconst items: CompletionItem[] = [];\n\t\tlet isIncomplete = false;\n\n\t\tconst offset = document.offsetAt(position);\n\t\tconst location = getLocation(document.getText(), offset);\n\n\t\tconst node = location.previousNode;\n\t\tif (node && node.offset <= offset && offset <= node.offset + node.length && (node.type === 'property' || node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n\t\t\toverwriteRange = new Range(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n\t\t} else {\n\t\t\toverwriteRange = new Range(document.positionAt(offset - currentWord.length), position);\n\t\t}\n\n\t\tconst proposed: { [key: string]: boolean } = {};\n\t\tconst collector: ISuggestionsCollector = {\n\t\t\tadd: (suggestion: CompletionItem) => {\n\t\t\t\tconst key = typeof suggestion.label === 'string'\n\t\t\t\t\t? suggestion.label\n\t\t\t\t\t: suggestion.label.label;\n\t\t\t\tif (!proposed[key]) {\n\t\t\t\t\tproposed[key] = true;\n\t\t\t\t\tsuggestion.range = { replacing: overwriteRange, inserting: new Range(overwriteRange.start, overwriteRange.start) };\n\t\t\t\t\titems.push(suggestion);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsetAsIncomplete: () => isIncomplete = true,\n\t\t\terror: (message: string) => console.error(message),\n\t\t\tlog: (message: string) => console.log(message)\n\t\t};\n\n\t\tlet collectPromise: Thenable<any> | null = null;\n\n\t\tif (location.isAtPropertyKey) {\n\t\t\tconst scanner = createScanner(document.getText(), true);\n\t\t\tconst addValue = !location.previousNode || !this.hasColonAfter(scanner, location.previousNode.offset + location.previousNode.length);\n\t\t\tconst isLast = this.isLast(scanner, document.offsetAt(position));\n\t\t\tcollectPromise = this.jsonContribution.collectPropertySuggestions(document.uri, location, currentWord, addValue, isLast, collector);\n\t\t} else {\n\t\t\tif (location.path.length === 0) {\n\t\t\t\tcollectPromise = this.jsonContribution.collectDefaultSuggestions(document.uri, collector);\n\t\t\t} else {\n\t\t\t\tcollectPromise = this.jsonContribution.collectValueSuggestions(document.uri, location, collector);\n\t\t\t}\n\t\t}\n\t\tif (collectPromise) {\n\t\t\treturn collectPromise.then(() => {\n\t\t\t\tif (items.length > 0 || isIncomplete) {\n\t\t\t\t\treturn new CompletionList(items, isIncomplete);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getCurrentWord(document: TextDocument, position: Position) {\n\t\tlet i = position.character - 1;\n\t\tconst text = document.lineAt(position.line).text;\n\t\twhile (i >= 0 && ' \\t\\n\\r\\v\":{[,'.indexOf(text.charAt(i)) === -1) {\n\t\t\ti--;\n\t\t}\n\t\treturn text.substring(i + 1, position.character);\n\t}\n\n\tprivate isLast(scanner: JSONScanner, offset: number): boolean {\n\t\tscanner.setPosition(offset);\n\t\tlet nextToken = scanner.scan();\n\t\tif (nextToken === SyntaxKind.StringLiteral && scanner.getTokenError() === ScanError.UnexpectedEndOfString) {\n\t\t\tnextToken = scanner.scan();\n\t\t}\n\t\treturn nextToken === SyntaxKind.CloseBraceToken || nextToken === SyntaxKind.EOF;\n\t}\n\tprivate hasColonAfter(scanner: JSONScanner, offset: number): boolean {\n\t\tscanner.setPosition(offset);\n\t\treturn scanner.scan() === SyntaxKind.ColonToken;\n\t}\n\n}\n\nexport const xhrDisabled = () => Promise.reject({ responseText: 'Use of online resources is disabled.' });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CompletionItemKind, CompletionItem, DocumentSelector, SnippetString, workspace, MarkdownString, Uri, l10n } from 'vscode';\nimport { IJSONContribution, ISuggestionsCollector } from './jsonContributions';\nimport { XHRRequest } from 'request-light';\nimport { Location } from 'jsonc-parser';\n\nimport * as cp from 'child_process';\nimport { dirname } from 'path';\nimport { fromNow } from './date';\n\nconst LIMIT = 40;\n\nconst USER_AGENT = 'Visual Studio Code';\n\nexport class PackageJSONContribution implements IJSONContribution {\n\n\tprivate mostDependedOn = ['lodash', 'async', 'underscore', 'request', 'commander', 'express', 'debug', 'chalk', 'colors', 'q', 'coffee-script',\n\t\t'mkdirp', 'optimist', 'through2', 'yeoman-generator', 'moment', 'bluebird', 'glob', 'gulp-util', 'minimist', 'cheerio', 'pug', 'redis', 'node-uuid',\n\t\t'socket', 'io', 'uglify-js', 'winston', 'through', 'fs-extra', 'handlebars', 'body-parser', 'rimraf', 'mime', 'semver', 'mongodb', 'jquery',\n\t\t'grunt', 'connect', 'yosay', 'underscore', 'string', 'xml2js', 'ejs', 'mongoose', 'marked', 'extend', 'mocha', 'superagent', 'js-yaml', 'xtend',\n\t\t'shelljs', 'gulp', 'yargs', 'browserify', 'minimatch', 'react', 'less', 'prompt', 'inquirer', 'ws', 'event-stream', 'inherits', 'mysql', 'esprima',\n\t\t'jsdom', 'stylus', 'when', 'readable-stream', 'aws-sdk', 'concat-stream', 'chai', 'Thenable', 'wrench'];\n\n\tprivate knownScopes = ['@types', '@angular', '@babel', '@nuxtjs', '@vue', '@bazel'];\n\n\tpublic getDocumentSelector(): DocumentSelector {\n\t\treturn [{ language: 'json', scheme: '*', pattern: '**/package.json' }];\n\t}\n\n\tpublic constructor(private xhr: XHRRequest, private npmCommandPath: string | undefined) {\n\t}\n\n\tpublic collectDefaultSuggestions(_resource: Uri, result: ISuggestionsCollector): Thenable<any> {\n\t\tconst defaultValue = {\n\t\t\t'name': '${1:name}',\n\t\t\t'description': '${2:description}',\n\t\t\t'authors': '${3:author}',\n\t\t\t'version': '${4:1.0.0}',\n\t\t\t'main': '${5:pathToMain}',\n\t\t\t'dependencies': {}\n\t\t};\n\t\tconst proposal = new CompletionItem(l10n.t(\"Default package.json\"));\n\t\tproposal.kind = CompletionItemKind.Module;\n\t\tproposal.insertText = new SnippetString(JSON.stringify(defaultValue, null, '\\t'));\n\t\tresult.add(proposal);\n\t\treturn Promise.resolve(null);\n\t}\n\n\tprivate isEnabled() {\n\t\treturn this.npmCommandPath || this.onlineEnabled();\n\t}\n\n\tprivate onlineEnabled() {\n\t\treturn !!workspace.getConfiguration('npm').get('fetchOnlinePackageInfo');\n\t}\n\n\tpublic collectPropertySuggestions(\n\t\t_resource: Uri,\n\t\tlocation: Location,\n\t\tcurrentWord: string,\n\t\taddValue: boolean,\n\t\tisLast: boolean,\n\t\tcollector: ISuggestionsCollector\n\t): Thenable<any> | null {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ((location.matches(['dependencies']) || location.matches(['devDependencies']) || location.matches(['optionalDependencies']) || location.matches(['peerDependencies']))) {\n\t\t\tlet queryUrl: string;\n\t\t\tif (currentWord.length > 0) {\n\t\t\t\tif (currentWord[0] === '@') {\n\t\t\t\t\tif (currentWord.indexOf('/') !== -1) {\n\t\t\t\t\t\treturn this.collectScopedPackages(currentWord, addValue, isLast, collector);\n\t\t\t\t\t}\n\t\t\t\t\tfor (const scope of this.knownScopes) {\n\t\t\t\t\t\tconst proposal = new CompletionItem(scope);\n\t\t\t\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\t\t\t\tproposal.insertText = new SnippetString().appendText(`\"${scope}/`).appendTabstop().appendText('\"');\n\t\t\t\t\t\tproposal.filterText = JSON.stringify(scope);\n\t\t\t\t\t\tproposal.documentation = '';\n\t\t\t\t\t\tproposal.command = {\n\t\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\t\tcommand: 'editor.action.triggerSuggest'\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcollector.add(proposal);\n\t\t\t\t\t}\n\t\t\t\t\tcollector.setAsIncomplete();\n\t\t\t\t}\n\n\t\t\t\tqueryUrl = `https://registry.npmjs.org/-/v1/search?size=${LIMIT}&text=${encodeURIComponent(currentWord)}`;\n\t\t\t\treturn this.xhr({\n\t\t\t\t\turl: queryUrl,\n\t\t\t\t\theaders: { agent: USER_AGENT }\n\t\t\t\t}).then((success) => {\n\t\t\t\t\tif (success.status === 200) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst obj = JSON.parse(success.responseText);\n\t\t\t\t\t\t\tif (obj && obj.objects && Array.isArray(obj.objects)) {\n\t\t\t\t\t\t\t\tconst results = <{ package: SearchPackageInfo }[]>obj.objects;\n\t\t\t\t\t\t\t\tfor (const result of results) {\n\t\t\t\t\t\t\t\t\tthis.processPackage(result.package, addValue, isLast, collector);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcollector.setAsIncomplete();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcollector.error(l10n.t(\"Request to the NPM repository failed: {0}\", success.responseText));\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t}, (error) => {\n\t\t\t\t\tcollector.error(l10n.t(\"Request to the NPM repository failed: {0}\", error.responseText));\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.mostDependedOn.forEach((name) => {\n\t\t\t\t\tconst insertText = new SnippetString().appendText(JSON.stringify(name));\n\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\tinsertText.appendText(': \"').appendTabstop().appendText('\"');\n\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\tinsertText.appendText(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst proposal = new CompletionItem(name);\n\t\t\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\t\t\tproposal.insertText = insertText;\n\t\t\t\t\tproposal.filterText = JSON.stringify(name);\n\t\t\t\t\tproposal.documentation = '';\n\t\t\t\t\tcollector.add(proposal);\n\t\t\t\t});\n\t\t\t\tthis.collectScopedPackages(currentWord, addValue, isLast, collector);\n\t\t\t\tcollector.setAsIncomplete();\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate collectScopedPackages(currentWord: string, addValue: boolean, isLast: boolean, collector: ISuggestionsCollector): Thenable<any> {\n\t\tconst segments = currentWord.split('/');\n\t\tif (segments.length === 2 && segments[0].length > 1) {\n\t\t\tconst scope = segments[0].substr(1);\n\t\t\tlet name = segments[1];\n\t\t\tif (name.length < 4) {\n\t\t\t\tname = '';\n\t\t\t}\n\t\t\tconst queryUrl = `https://registry.npmjs.com/-/v1/search?text=scope:${scope}%20${name}&size=250`;\n\t\t\treturn this.xhr({\n\t\t\t\turl: queryUrl,\n\t\t\t\theaders: { agent: USER_AGENT }\n\t\t\t}).then((success) => {\n\t\t\t\tif (success.status === 200) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst obj = JSON.parse(success.responseText);\n\t\t\t\t\t\tif (obj && Array.isArray(obj.objects)) {\n\t\t\t\t\t\t\tconst objects = <{ package: SearchPackageInfo }[]>obj.objects;\n\t\t\t\t\t\t\tfor (const object of objects) {\n\t\t\t\t\t\t\t\tthis.processPackage(object.package, addValue, isLast, collector);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t}\n\t\t\t\t\tcollector.setAsIncomplete();\n\t\t\t\t} else {\n\t\t\t\t\tcollector.error(l10n.t(\"Request to the NPM repository failed: {0}\", success.responseText));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tpublic async collectValueSuggestions(resource: Uri, location: Location, result: ISuggestionsCollector): Promise<any> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ((location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']) || location.matches(['optionalDependencies', '*']) || location.matches(['peerDependencies', '*']))) {\n\t\t\tconst currentKey = location.path[location.path.length - 1];\n\t\t\tif (typeof currentKey === 'string') {\n\t\t\t\tconst info = await this.fetchPackageInfo(currentKey, resource);\n\t\t\t\tif (info && info.version) {\n\n\t\t\t\t\tlet name = JSON.stringify(info.version);\n\t\t\t\t\tlet proposal = new CompletionItem(name);\n\t\t\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\t\t\tproposal.insertText = name;\n\t\t\t\t\tproposal.documentation = l10n.t(\"The currently latest version of the package\");\n\t\t\t\t\tresult.add(proposal);\n\n\t\t\t\t\tname = JSON.stringify('^' + info.version);\n\t\t\t\t\tproposal = new CompletionItem(name);\n\t\t\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\t\t\tproposal.insertText = name;\n\t\t\t\t\tproposal.documentation = l10n.t(\"Matches the most recent major version (1.x.x)\");\n\t\t\t\t\tresult.add(proposal);\n\n\t\t\t\t\tname = JSON.stringify('~' + info.version);\n\t\t\t\t\tproposal = new CompletionItem(name);\n\t\t\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\t\t\tproposal.insertText = name;\n\t\t\t\t\tproposal.documentation = l10n.t(\"Matches the most recent minor version (1.2.x)\");\n\t\t\t\t\tresult.add(proposal);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getDocumentation(description: string | undefined, version: string | undefined, time: string | undefined, homepage: string | undefined): MarkdownString {\n\t\tconst str = new MarkdownString();\n\t\tif (description) {\n\t\t\tstr.appendText(description);\n\t\t}\n\t\tif (version) {\n\t\t\tstr.appendText('\\n\\n');\n\t\t\tstr.appendText(time ? l10n.t(\"Latest version: {0} published {1}\", version, fromNow(Date.parse(time), true, true)) : l10n.t(\"Latest version: {0}\", version));\n\t\t}\n\t\tif (homepage) {\n\t\t\tstr.appendText('\\n\\n');\n\t\t\tstr.appendText(homepage);\n\t\t}\n\t\treturn str;\n\t}\n\n\tpublic resolveSuggestion(resource: Uri | undefined, item: CompletionItem): Thenable<CompletionItem | null> | null {\n\t\tif (item.kind === CompletionItemKind.Property && !item.documentation) {\n\n\t\t\tlet name = item.label;\n\t\t\tif (typeof name !== 'string') {\n\t\t\t\tname = name.label;\n\t\t\t}\n\n\t\t\treturn this.fetchPackageInfo(name, resource).then(info => {\n\t\t\t\tif (info) {\n\t\t\t\t\titem.documentation = this.getDocumentation(info.description, info.version, info.time, info.homepage);\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate isValidNPMName(name: string): boolean {\n\t\t// following rules from https://github.com/npm/validate-npm-package-name,\n\t\t// leading slash added as additional security measure\n\t\tif (!name || name.length > 214 || name.match(/^[-_.\\s]/)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst match = name.match(/^(?:@([^/~\\s)('!*]+?)[/])?([^/~)('!*\\s]+?)$/);\n\t\tif (match) {\n\t\t\tconst scope = match[1];\n\t\t\tif (scope && encodeURIComponent(scope) !== scope) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst name = match[2];\n\t\t\treturn encodeURIComponent(name) === name;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async fetchPackageInfo(pack: string, resource: Uri | undefined): Promise<ViewPackageInfo | undefined> {\n\t\tif (!this.isValidNPMName(pack)) {\n\t\t\treturn undefined; // avoid unnecessary lookups\n\t\t}\n\t\tlet info: ViewPackageInfo | undefined;\n\t\tif (this.npmCommandPath) {\n\t\t\tinfo = await this.npmView(this.npmCommandPath, pack, resource);\n\t\t}\n\t\tif (!info && this.onlineEnabled()) {\n\t\t\tinfo = await this.npmjsView(pack);\n\t\t}\n\t\treturn info;\n\t}\n\n\tprivate npmView(npmCommandPath: string, pack: string, resource: Uri | undefined): Promise<ViewPackageInfo | undefined> {\n\t\treturn new Promise((resolve, _reject) => {\n\t\t\tconst args = ['view', '--json', '--', pack, 'description', 'dist-tags.latest', 'homepage', 'version', 'time'];\n\t\t\tconst cwd = resource && resource.scheme === 'file' ? dirname(resource.fsPath) : undefined;\n\n\t\t\t// corepack npm wrapper would automatically update package.json. disable that behavior.\n\t\t\t// COREPACK_ENABLE_AUTO_PIN disables the package.json overwrite, and\n\t\t\t// COREPACK_ENABLE_PROJECT_SPEC makes the npm view command succeed\n\t\t\t//   even if packageManager specified a package manager other than npm.\n\t\t\tconst env = { ...process.env, COREPACK_ENABLE_AUTO_PIN: '0', COREPACK_ENABLE_PROJECT_SPEC: '0' };\n\t\t\tlet options: cp.ExecFileOptions = { cwd, env };\n\t\t\tlet commandPath: string = npmCommandPath;\n\t\t\tif (process.platform === 'win32') {\n\t\t\t\toptions = { cwd, env, shell: true };\n\t\t\t\tcommandPath = `\"${npmCommandPath}\"`;\n\t\t\t}\n\t\t\tcp.execFile(commandPath, args, options, (error, stdout) => {\n\t\t\t\tif (!error) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst content = JSON.parse(stdout);\n\t\t\t\t\t\tconst version = content['dist-tags.latest'] || content['version'];\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\tdescription: content['description'],\n\t\t\t\t\t\t\tversion,\n\t\t\t\t\t\t\ttime: content.time?.[version],\n\t\t\t\t\t\t\thomepage: content['homepage']\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresolve(undefined);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async npmjsView(pack: string): Promise<ViewPackageInfo | undefined> {\n\t\tconst queryUrl = 'https://registry.npmjs.org/' + encodeURIComponent(pack);\n\t\ttry {\n\t\t\tconst success = await this.xhr({\n\t\t\t\turl: queryUrl,\n\t\t\t\theaders: { agent: USER_AGENT }\n\t\t\t});\n\t\t\tconst obj = JSON.parse(success.responseText);\n\t\t\tconst version = obj['dist-tags']?.latest || Object.keys(obj.versions).pop() || '';\n\t\t\treturn {\n\t\t\t\tdescription: obj.description || '',\n\t\t\t\tversion,\n\t\t\t\ttime: obj.time?.[version],\n\t\t\t\thomepage: obj.homepage || ''\n\t\t\t};\n\t\t}\n\t\tcatch (e) {\n\t\t\t//ignore\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic getInfoContribution(resource: Uri, location: Location): Thenable<MarkdownString[] | null> | null {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn null;\n\t\t}\n\t\tif ((location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']) || location.matches(['optionalDependencies', '*']) || location.matches(['peerDependencies', '*']))) {\n\t\t\tconst pack = location.path[location.path.length - 1];\n\t\t\tif (typeof pack === 'string') {\n\t\t\t\treturn this.fetchPackageInfo(pack, resource).then(info => {\n\t\t\t\t\tif (info) {\n\t\t\t\t\t\treturn [this.getDocumentation(info.description, info.version, info.time, info.homepage)];\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate processPackage(pack: SearchPackageInfo, addValue: boolean, isLast: boolean, collector: ISuggestionsCollector) {\n\t\tif (pack && pack.name) {\n\t\t\tconst name = pack.name;\n\t\t\tconst insertText = new SnippetString().appendText(JSON.stringify(name));\n\t\t\tif (addValue) {\n\t\t\t\tinsertText.appendText(': \"');\n\t\t\t\tif (pack.version) {\n\t\t\t\t\tinsertText.appendVariable('version', pack.version);\n\t\t\t\t} else {\n\t\t\t\t\tinsertText.appendTabstop();\n\t\t\t\t}\n\t\t\t\tinsertText.appendText('\"');\n\t\t\t\tif (!isLast) {\n\t\t\t\t\tinsertText.appendText(',');\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst proposal = new CompletionItem(name);\n\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\tproposal.insertText = insertText;\n\t\t\tproposal.filterText = JSON.stringify(name);\n\t\t\tproposal.documentation = this.getDocumentation(pack.description, pack.version, undefined, pack?.links?.homepage);\n\t\t\tcollector.add(proposal);\n\t\t}\n\t}\n}\n\ninterface SearchPackageInfo {\n\tname: string;\n\tdescription?: string;\n\tversion?: string;\n\tlinks?: { homepage?: string };\n}\n\ninterface ViewPackageInfo {\n\tdescription: string;\n\tversion?: string;\n\ttime?: string;\n\thomepage?: string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as httpRequest from 'request-light';\nimport * as vscode from 'vscode';\nimport { addJSONProviders } from './features/jsonContributions';\n\nexport async function activate(context: vscode.ExtensionContext): Promise<void> {\n\tcontext.subscriptions.push(addJSONProviders(httpRequest.xhr, undefined));\n}\n\nexport function deactivate(): void {\n}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(303);\n"],"names":["createScanner","text","ignoreTrivia","len","length","pos","value","tokenOffset","token","lineNumber","lineStartOffset","tokenLineStartOffset","prevTokenLineStartOffset","scanError","scanHexDigits","count","exact","digits","ch","charCodeAt","scanNext","code","isWhiteSpace","String","fromCharCode","isLineBreak","result","start","substring","ch3","scanString","safeLength","commentClosed","isDigit","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenStartLine","getTokenStartCharacter","getTokenError","CharacterCodes","ParseOptions","format","documentText","range","options","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","offset","isEOL","endOffset","content","i","nChars","tabSize","charAt","Math","floor","computeIndentLevel","eol","getEOL","indentValue","numberLineBreaks","indentLevel","insertSpaces","repeat","scanner","hasError","newLinesAndIndent","keepLines","editOperations","addEdit","startOffset","push","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","needsLineBreak","insertFinalNewline","s","indexOf","parseTree","errors","DEFAULT","currentParent","type","children","parent","undefined","ensurePropertyComplete","onValue","valueNode","visit","onObjectBegin","onObjectProperty","name","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","getNodeType","onSeparator","sep","colonOffset","onError","error","findNodeAtLocation","root","path","node","segment","Array","isArray","found","propertyNode","index","visitor","_scanner","_jsonPath","toNoArgVisit","visitFunction","toNoArgVisitWithPath","slice","toOneArgVisit","arg","toOneArgVisitWithPath","onComment","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","allowEmptyContent","parseValue","isFirstElement","needsComma","pop","parseArray","parseObject","tokenValue","Number","isNaN","parseLiteral","withFormatting","edit","formattingOptions","newText","applyEdit","begin","edits","min","max","ScanError","SyntaxKind","position","segments","earlyReturnException","Object","previousNode","previousNodeInst","isAtPropertyKey","setPreviousNode","last","e","matches","pattern","k","currentProperty","previousParents","object","array","findNodeAtOffset","includeRightBound","contains","item","getNodePath","key","getNodeValue","map","obj","create","prop","replaceCh","kind","parts","replace","join","ParseErrorCode","printParseErrorCode","modify","originalPath","lastSegment","existing","Error","propertyIndex","removeBegin","removeEnd","previous","JSON","stringify","newProperty","getInsertionIndex","p","insertIndex","removalIndex","toRemove","isArrayInsertion","toModify","applyEdits","sortedEdits","sort","a","b","diff","lastModifiedOffset","r","defineProperty","getErrorStatusDescription","xhr","configure","async","Headers","headers","t","o","forEach","set","user","password","btoa","method","redirect","followRedirects","mode","data","body","AbortController","isCancellationRequested","abort","onCancellationRequested","signal","Request","url","fetch","n","arrayBuffer","constructor","this","status","responseText","TextDecoder","decode","Uint8Array","exports","__esModule","assertPath","TypeError","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","process","normalize","isAbsolute","trailingSeparator","joined","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","matchedSlash","basename","ext","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","dir","base","_format","parse","ret","delimiter","win32","module","USER_AGENT","topRanked","getDocumentSelector","language","scheme","isEnabled","workspace","getConfiguration","get","collectDefaultSuggestions","_resource","collector","proposal","CompletionItem","l10n","CompletionItemKind","Class","insertText","SnippetString","add","Promise","collectPropertySuggestions","location","currentWord","addValue","isLast","queryUrl","encodeURIComponent","agent","then","success","results","description","appendText","appendPlaceholder","Property","filterText","documentation","setAsIncomplete","collectValueSuggestions","Value","resolveSuggestion","label","getInfo","pack","substr","getInfoContribution","str","MarkdownString","fromNow","date","appendAgoLabel","useFullTimeWords","disallowNow","getTime","seconds","round","Date","minute","hour","day","week","month","year","npmCommandPath","contributions","PackageJSONContribution","BowerJSONContribution","subscriptions","contribution","selector","languages","registerCompletionItemProvider","JSONCompletionItemProvider","registerHoverProvider","JSONHoverProvider","Disposable","jsonContribution","provideHover","document","_token","offsetAt","getLocation","getText","promise","uri","htmlContent","contents","Range","positionAt","resolveCompletionItem","resolver","lastResource","provideCompletionItems","getCurrentWord","overwriteRange","items","isIncomplete","proposed","suggestion","replacing","inserting","message","console","log","collectPromise","hasColonAfter","CompletionList","character","lineAt","line","nextToken","xhrDisabled","reject","mostDependedOn","knownScopes","Module","onlineEnabled","collectScopedPackages","scope","appendTabstop","command","title","objects","processPackage","package","split","resource","currentKey","info","fetchPackageInfo","version","getDocumentation","time","homepage","isValidNPMName","match","npmView","npmjsView","_reject","args","fsPath","env","COREPACK_ENABLE_AUTO_PIN","COREPACK_ENABLE_PROJECT_SPEC","commandPath","cp","execFile","stdout","latest","keys","versions","appendVariable","links","context","addJSONProviders","httpRequest","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","d","definition","enumerable","prototype","hasOwnProperty","Symbol","toStringTag","__webpack_exports__"],"sourceRoot":""}
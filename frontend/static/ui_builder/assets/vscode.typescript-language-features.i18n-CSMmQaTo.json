{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"bundle": {
			"(loading...)/Prefix displayed for hover entries while the server is still loading": "(загрузка...)",
			"...1 additional file not shown": "...1 дополнительный файл не показан",
			"...{0} additional files not shown": "...не показано дополнительных файлов: {0}",
			"1 implementation": "1 реализация",
			"1 reference": "1 ссылка",
			"Acquiring typings definitions for IntelliSense./Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized": "Получение определений typings для IntelliSense.",
			"Acquiring typings.../Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized": "Получение typings...",
			"Add all missing imports": "Добавить все недостающие импорты",
			"Allow": "Разрешить",
			"Always": "Всегда",
			"An error occurred while renaming file": "Ошибка при переименовании файла",
			"Analyzing '{0}' and its dependencies": "Анализ \"{0}\" и их зависимостей",
			"Checking for update of JS/TS imports": "Проверка обновления для импортируемых данных JS/TS",
			"Configure Excludes": "Настройка исключений",
			"Configure jsconfig": "Настроить jsconfig",
			"Configure jsconfig.json": "Настроить jsconfig.json",
			"Configure tsconfig": "Настроить tsconfig",
			"Configure tsconfig.json": "Настроить tsconfig.json",
			"Could not apply refactoring": "Не удалось применить рефакторинг",
			"Could not detect a Node installation to run TS Server.": "Не удалось обнаружить установку Node для запуска TS Server.",
			"Could not determine TypeScript or JavaScript project": "Не удалось определить проект TypeScript или JavaScript.",
			"Could not determine TypeScript or JavaScript project. Unsupported file type": "Не удалось определить проект TypeScript или JavaScript. Неподдерживаемый тип файла",
			"Could not determine references": "Не удалось определить ссылки.",
			"Could not install typings files for JavaScript language features. Please ensure that NPM is installed, or configure 'typescript.npm' in your user settings. Alternatively, check the [documentation]({0}) to learn more.": "Не удалось установить файлы типизации для языка JavaScript. Убедитесь, что NPM установлен или укажите путь к файлу \"typescript.npm\" в параметрах среды пользователя. Дополнительные сведения можно просмотреть в [документации]({0}).",
			"Could not load the TypeScript version at this path": "Не удалось загрузить версию TypeScript по этому пути",
			"Could not open TS Server log file": "Не удалось открыть файл журнала сервера TS",
			"Disable logging": "Отключить ведение журнала",
			"Disables semantic checking in a JavaScript file. Must be at the top of a file.": "Отключает семантическую проверку в JavaScript файле. Необходимо расположить в самом начале файла.",
			"Dismiss": "Отклонить",
			"Don't Show Again": "Больше не показывать",
			"Don't show again": "Больше не показывать",
			"Enable logging and restart TS server": "Войдите и перезагрузите TS server",
			"Enables semantic checking in a JavaScript file. Must be at the top of a file.": "Включает семантическую проверку в JavaScript файле. Необходимо расположить в самом начале файла.",
			"Enter file path": "Введите путь к файлу",
			"Enter new file path...": "Введите путь к новому файлу...",
			"Extract to constant": "Извлечение в константу",
			"Extract to function": "Извлечение в функцию",
			"Failed to resolve {0} as module": "Не удалось разрешить {0} в виде модуля",
			"Fetching data for better TypeScript IntelliSense": "Получение данных для повышения эффективности IntelliSense TypeScript",
			"File is not part of a JavaScript project. View the [jsconfig.json documentation]({0}) to learn more.": "Файл не является частью проекта JavaScript. Просмотрите [документацию tsconfig.json] ({0}), чтобы получить дополнительные сведения.",
			"File is not part of a TypeScript project. View the [tsconfig.json documentation]({0}) to learn more.": "Файл не является частью проекта TypeScript. Просмотрите [документацию tsconfig.json] ({0}), чтобы получить дополнительные сведения.",
			"File is not part opened folders": "Файл не является частью открытых папок",
			"Find file references failed. No resource provided.": "Не удалось найти ссылки на файлы. Не указаны ресурсы.",
			"Find file references failed. Requires TypeScript 4.2+.": "Не удалось найти ссылки на файлы. Требуется TypeScript версии 4.2 или более поздних версий.",
			"Find file references failed. Unknown file type.": "Не удалось найти ссылки на файлы. Неизвестный тип файла.",
			"Find file references failed. Unsupported file type.": "Не удалось найти ссылки на файлы. Неподдерживаемый тип файла.",
			"Finding file references": "Поиск ссылок на файлы",
			"Finding source definitions": "Поиск определений источников",
			"Fix all fixable JS/TS issues": "Устранить все устранимые проблемы JS/TS",
			"Follow link": "Перейти по ссылке",
			"Go to Source Definition failed. No resource provided.": "Не удалось перейти к определению источника. Не предоставлен ресурсы.",
			"Go to Source Definition failed. Requires TypeScript 4.7+.": "Не удалось перейти к определению источника. Требуется TypeScript 4.7 или более поздней версии.",
			"Go to Source Definition failed. Unknown file type.": "Не удалось перейти к определению источника. Неизвестный тип файла.",
			"Go to Source Definition failed. Unsupported file type.": "Не удалось перейти к определению источника. Тип файла не поддерживается.",
			"Initializing '{0}'": "Инициализация \"{0}\"",
			"JS/TS IntelliSense Status": "Состояние IntelliSense JS/TS",
			"JSDoc comment": "Комментарий JSDoc",
			"Learn More": "Дополнительные сведения",
			"Learn more about JS/TS refactorings": "Дополнительные сведения о рефакторингах JS/TS",
			"Learn more about managing TypeScript versions": "Дополнительные сведения об управлении версиями TypeScript",
			"Loading IntelliSense status": "Загрузка состояния IntelliSense",
			"Move to File": "Переместить в файл",
			"Never": "Никогда",
			"Never in this Workspace": "Никогда в этой рабочей области",
			"No": "Нет",
			"No jsconfig": "Нет jsconfig",
			"No opened folders": "Нет открытых папок",
			"No source definitions found.": "Определения источников не найдены.",
			"No tsconfig": "Нет tsconfig",
			"Not now": "Не сейчас",
			"Open config file": "Открыть файл конфигурации",
			"Organize Imports": "Упорядочение импортированных данных",
			"Partial Mode": "Частичный режим",
			"Paste with imports": "Вставить с импортом",
			"Please open a folder in VS Code to use a TypeScript or JavaScript project": "Откройте папку в VS Code, чтобы использовать проект JavaScript или TypeScript.",
			"Please report an issue against Yarn PnP": "Сообщите о проблеме, связанной с Yarn PnP",
			"Please update your TypeScript version": "Обновите версию TypeScript",
			"Project Wide IntelliSense not available": "IntelliSense для всего проекта недоступен",
			"Remove Unused Imports": "Удаление неиспользованных импортированных данных",
			"Remove all unused code": "Удалить весь неиспользуемый код",
			"Report Issue": "Сообщить об ошибке",
			"Report issue against Yarn PnP": "Сообщить о проблеме, связанной с Yarn PnP",
			"Select Version": "Выбор версии",
			"Select code action to apply": "Выберите применяемое действие кода",
			"Select existing file...": "Выберите существующий файл...",
			"Select move destination": "Выберите назначение перемещения",
			"Select the TypeScript version used for JavaScript and TypeScript language features": "Выберите версию TypeScript, используемую для языковых функций JavaScript и TypeScript.",
			"Sort Imports": "Сортировать импорты",
			"Suppresses @ts-check errors on the next line of a file, expecting at least one to exist.": "Подавляет ошибки @ts-check на следующей строке файла, ожидая, что по меньшей мере одна из них будет существовать.",
			"Suppresses @ts-check errors on the next line of a file.": "Отключает вывод ошибок @ts-check для следующей строки файла.",
			"TS Server has not started logging.": "Сервер TS не начал ведение журнала.",
			"TS Server logging is currently enabled which may impact performance.": "В настоящее время включено ведение журнала сервера службы TS, что может повлиять на производительность.",
			"TS Server logging is off. Please set 'typescript.tsserver.log' and restart the TS server to enable logging": "Вход в TS Server отключен. Задайте \"typescript.tsserver.log\" и перезагрузите VS Code, чтобы включить ведение журнала",
			"The JS/TS language service crashed 5 times in the last 5 Minutes.": "Языковая служба JS/TS аварийно завершала работу 5 раз за последние 5 минут.",
			"The JS/TS language service crashed 5 times in the last 5 Minutes.\nThis may be caused by a plugin contributed by one of these extensions: {0}\nPlease try disabling these extensions before filing an issue against VS Code.": "За последние 5 минут языковая служба JS/TS аварийно завершала работу 5 раз.\nЭто может быть вызвано подключаемым модулем, предоставленным одним из следующих расширений: {0}\nПопробуйте отключить эти расширения, прежде чем сообщать о проблеме с VS Code.",
			"The JS/TS language service crashed.": "Языковая служба JS/TS аварийно завершила работу.",
			"The JS/TS language service crashed.\nThis may be caused by a plugin contributed by one of these extensions: {0}.\nPlease try disabling these extensions before filing an issue against VS Code.": "Языковая служба JS/TS аварийно завершила работу.\nЭто может быть вызвано подключаемым модулем, предоставленным одним из следующих расширений: {0}.\nПопробуйте отключить эти расширения, прежде чем сообщать о проблеме с VS Code.",
			"The JS/TS language service immediately crashed 5 times. The service will not be restarted.": "Служба языка JS/TS 5 раз немедленно аварийно завершила работу. Служба не будет перезапущена.",
			"The JS/TS language service immediately crashed 5 times. The service will not be restarted.\nThis may be caused by a plugin contributed by one of these extensions: {0}.\nPlease try disabling these extensions before filing an issue against VS Code.": "Языковая служба JS/TS аварийно завершила работу 5 раз. Служба не будет перезагружена.\nЭто может быть вызвано подключаемым модулем, предоставленным одним из следующих расширений: {0}.\nПопробуйте отключить эти расширения, прежде чем сообщать о проблеме с VS Code.",
			"The current selection cannot be extracted": "Невозможно извлечь выбранные параметры",
			"The path {0} doesn't point to a valid Node installation to run TS Server. Falling back to bundled Node.": "Путь {0} не указывает на действительную установку узла для запуска TS-сервера. Возврат к объединенному пакету Node.",
			"The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.": "Путь {0} не указывает на допустимый файл программы установки tsserver. Выполняется откат до пакетной версии TypeScript.",
			"The workspace is using a version of the TypeScript Server that has been patched by Yarn PnP. This patching is a common source of bugs.": "Рабочая область использует версию сервера TypeScript, исправленную посредством Yarn PnP. Это исправление является распространенным источником ошибок.",
			"The workspace is using an old version of TypeScript ({0}).\n\nBefore reporting an issue, please update the workspace to use TypeScript {1} or newer to make sure the bug has not already been fixed.": "В рабочей области используется старая версия TypeScript ({0}).\n\nПрежде чем сообщить о проблеме, обновите рабочую область, чтобы использовать TypeScript {1} или более новую версию, чтобы убедиться, что ошибка еще не исправлена.",
			"This workspace contains a TypeScript version. Would you like to use the workspace TypeScript version for TypeScript and JavaScript language features?": "Эта рабочая область содержит версию TypeScript. Вы хотите использовать версию TypeScript рабочей области для функций языка TypeScript и JavaScript?",
			"This workspace wants to use the Node installation at '{0}' to run TS Server. Would you like to use it?": "В этой рабочей области необходимо использовать установку Node в \"{0}\" для запуска TS Server. Хотели бы вы его использовать?",
			"To enable project-wide JavaScript/TypeScript language features, exclude folders with many files, like: {0}": "Чтобы включить языковые функции JavaScript/TypeScript IntelliSense во всем проекте, исключите папки с большим числом файлов, например: {0}.",
			"To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.": "Чтобы включить языковые функции JavaScript/TypeScript IntelliSense во всем проекте, исключите большие папки с исходными файлами, с которыми вы не работаете.",
			"TypeScript Server Log": "Журнал сервера TypeScript",
			"TypeScript Task in tasks.json contains \"\\\\\". TypeScript tasks tsconfig must use \"/\"": "Задача TypeScript в файле tasks.json содержит \"\\\\\". В конфигурации tsconfig задач TypeScript необходимо использовать \"/\"",
			"TypeScript Version": "Версия TypeScript",
			"TypeScript language server exited with error. Error message is: {0}": "Языковой сервер TypeScript завершил работу с ошибкой. Сообщение об ошибке: \"{0}\".",
			"TypeScript: Configure Excludes": "TypeScript: настройка исключений",
			"Update imports for '{0}'?": "Обновить импорты для \"{0}\"?",
			"Update imports for the following {0} files?": "Обновить импорты для следующих файлов ({0})?",
			"Use VS Code's Version": "Использовать версию VS Code",
			"Use Workspace Version": "Использовать версию рабочей области",
			"VS Code's tsserver was deleted by another application such as a misbehaving virus detection tool. Please reinstall VS Code.": "Файл tsserver VSCode был удален другим приложением, например, в результате ошибочного срабатывания средства обнаружения вирусов. Переустановите VSCode.",
			"Yes": "Да",
			"build - {0}": "сборка — {0}",
			"destination files": "конечные файлы",
			"invalid version": "Недопустимая версия",
			"watch - {0}": "отслеживание — {0}",
			"{0} (Fix all in file)": "{0} (Исправить все в файле)",
			"{0} implementations": "Реализаций: {0}",
			"{0} references": "Ссылок: {0}"
		},
		"package": {
			"configuration.expandableHover": "Включать или отключать расширение при наведении.",
			"configuration.implicitProjectConfig.checkJs": "Включение или отключение семантической проверки файлов JavaScript. Этот параметр переопределяется файлом \"jsconfig.json\" или \"tsconfig.json\".",
			"configuration.implicitProjectConfig.experimentalDecorators": "Включение или отключение параметра \"experimentalDecorators\" в файлах JavaScript, которые не являются частью проекта. Этот параметр переопределяется файлом \"jsconfig.json\" или \"tsconfig.json\".",
			"configuration.implicitProjectConfig.module": "Задает систему модуля для программы. Дополнительные сведения: https://www.typescriptlang.org/tsconfig#module.",
			"configuration.implicitProjectConfig.strictFunctionTypes": "Включение или отключение [строгих типов функций](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) в файлах JavaScript и TypeScript, которые не являются частью проекта. Этот параметр переопределяется файлом \"jsconfig.json\" или \"tsconfig.json\".",
			"configuration.implicitProjectConfig.strictNullChecks": "Включение или отключение [строгих проверок значения NULL](https://www.typescriptlang.org/tsconfig#strictNullChecks) в файлах JavaScript и TypeScript, которые не являются частью проекта. Этот параметр переопределяется файлом \"jsconfig.json\" или \"tsconfig.json\".",
			"configuration.implicitProjectConfig.target": "Задайте целевую версию языка JavaScript для выданного JavaScript и включите объявления библиотеки. Дополнительные сведения: https://www.typescriptlang.org/tsconfig#target.",
			"configuration.inlayHints.enumMemberValues.enabled": "Включить или отключить вложенные указания для значений элементов в объявлениях перечисления:\r\n```typescript\r\n\r\nenum MyValue {\r\n\tA /* = 0 */;\r\n\tB /* = 1 */;\r\n}\r\n \r\n```",
			"configuration.inlayHints.functionLikeReturnTypes.enabled": "Включить или отключить вложенные указания для неявных типов возвращаемого числа в подписях функции:\r\n```typescript\r\n\r\nfunction foo() /* :number */ {\r\n\treturn Date.now();\r\n} \r\n \r\n```",
			"configuration.inlayHints.parameterNames.enabled": "Включить или отключить вложенные указания для имен параметров:\r\n```typescript\r\n\r\nparseInt(/* str: */ '123', /* radix: */ 8)\r\n \r\n```",
			"configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName": "Подавление указаний имен параметров для аргументов, текст которых совпадает с именем параметра.",
			"configuration.inlayHints.parameterTypes.enabled": "Включить или отключить вложенные указания для неявных типов параметров:\r\n```typescript\r\n\r\nel.addEventListener('click', e /* :MouseEvent */ => ...)\r\n \r\n```",
			"configuration.inlayHints.propertyDeclarationTypes.enabled": "Включить или отключить вложенные указания для неявных типов в объявлениях свойств:\r\n```typescript\r\n\r\nclass Foo {\r\n\tprop /* :number */ = Date.now();\r\n}\r\n \r\n```",
			"configuration.inlayHints.variableTypes.enabled": "Включить или отключить вложенные указания для неявных типов переменных:\r\n```typescript\r\n\r\nconst foo /* :number */ = Date.now();\r\n \r\n```",
			"configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName": "Скрывайте подсказки о типе для переменных, имена которых совпадают с именем типа.",
			"configuration.javascript.checkJs.checkJs.deprecation": "Этот параметр устарел. Вместо него следует использовать \"js/ts.implicitProjectConfig.checkJs\".",
			"configuration.javascript.checkJs.experimentalDecorators.deprecation": "Этот параметр устарел. Вместо него следует использовать \"js/ts.implicitProjectConfig.experimentalDecorators\".",
			"configuration.preferGoToSourceDefinition": "Заставляет \"Перейти к определению\" избегать файлов объявлений типов, когда это возможно, вызывая вместо этого \"Перейти к исходному определению\". Это позволяет активировать функцию \"Перейти к определению источника\" с помощью жеста мыши.",
			"configuration.suggest.autoImports": "Включить или отключить предложения автоимпорта.",
			"configuration.suggest.classMemberSnippets.enabled": "Включить или отключить завершение фрагментов кода для участников класса.",
			"configuration.suggest.completeFunctionCalls": "Дополните функции сигнатурами их параметров.",
			"configuration.suggest.completeJSDocs": "Включить/отключить предложение для завершения комментариев JSDoc.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Включение или отключение отображения завершений для потенциально неопределенных значений, которые вставляют необязательный вызов по цепочке. Требует включения строгих проверок на значения NULL.",
			"configuration.suggest.includeCompletionsForImportStatements": "Включение или отключение автоматически импортированных завершений стиля для операторов импорта, введенных не полностью.",
			"configuration.suggest.jsdoc.generateReturns": "Включение или отключение создания заметок @returns для шаблонов JSDoc.",
			"configuration.suggest.names": "Включение/отключение добавления уникальных имен из файла в предложения JavaScript. Обратите внимание, что предложения имен всегда отключены в коде JavaScript, семантика которого проверяется с помощью \"@ts-check\" или \"checkJs\".",
			"configuration.suggest.objectLiteralMethodSnippets.enabled": "Включить или отключить завершение фрагментов кода для методов в объектных литералах.",
			"configuration.suggest.paths": "Включить/отключить предложения для путей в выражениях импорта и в вызовах.",
			"configuration.surveys.enabled": "Включить/отключить периодические опросы, которые помогают нам улучшить поддержку JavaScript и TypeScript в VS Code.",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "Включает ведение отчетов об ошибках в масштабе всего проекта.",
			"configuration.tsserver.maxTsServerMemory": "Максимальный объем памяти (в МБ), выделяемый для процесса сервера TypeScript. Чтобы использовать ограничение памяти более 4 ГБ, укажите параметр \"#typescript.tsserver.nodePath#\" для запуска сервера TS с настраиваемой установкой узла.",
			"configuration.tsserver.nodePath": "Запустите TS Server при выборочной установке узла. Это может быть путь к исполняемому файлу Node или \"node\", если вы хотите, чтобы VS Code обнаружил установку Node.",
			"configuration.tsserver.useSeparateSyntaxServer": "Включение или отключение порождения отдельного сервера TypeScript, который может оперативнее реагировать на операции, связанные с синтаксисом, такие как вычисление свертывания или символов документа.",
			"configuration.tsserver.useSeparateSyntaxServer.deprecation": "Этот параметр устарел и заменен на \"typescript.tsserver.useSyntaxServer\".",
			"configuration.tsserver.useSyntaxServer": "Управляет запуском TypeScript выделенного сервера для более быстрой обработки операций, связанных с синтаксисом, таких как вычисление свертывания кода.",
			"configuration.tsserver.useSyntaxServer.always": "Используйте более светлый сервера синтаксиса для обработки всех операций IntelliSense. Этот синтаксис-сервер может предоставлять IntelliSense только для открытых файлов.",
			"configuration.tsserver.useSyntaxServer.auto": "Создайте как полноценный, так и более легкий сервер, предназначенный для операций с синтаксисом. Сервер синтаксиса используется для ускорения операций с синтаксисом и обеспечения IntelliSense во время загрузки проектов.",
			"configuration.tsserver.useSyntaxServer.never": "Не используйте выделенный сервер синтаксиса. Используйте один сервер для обработки всех операций IntelliSense.",
			"configuration.tsserver.useVsCodeWatcher": "Используйте наблюдатели за файлами VS Code вместо TypeScript. Требуется использование TypeScript 5.4+ в рабочей области.",
			"configuration.tsserver.useVsCodeWatcher.deprecation": "Используйте вместо этого параметр \"#typescript.tsserver.watchOptions#\".",
			"configuration.tsserver.watchOptions": "Настройка стратегий наблюдения для отслеживания файлов и каталогов.",
			"configuration.tsserver.watchOptions.fallbackPolling": "При использовании событий файловой системы этот параметр указывает стратегию опроса, которая используется, когда система исчерпывает запас собственных наблюдателей файлов или не поддерживает собственные наблюдатели файлов.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Используйте динамическую очередь, где чем реже изменяются файлы, тем реже они проверяются.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Проверка каждого файла на наличие изменений несколько раз в секунду с фиксированным интервалом.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Проверка каждого файла на наличие изменений несколько раз в секунду, но с использованием эвристики, чтобы проверять определенные типы файлов реже, чем другие.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Отключение отложенного наблюдения за каталогами. Отложенное наблюдение удобно, когда одновременно может иметь место множество изменений (например, изменение node_modules из запущенной установки npm), однако для некоторых менее распространенных вариантов настройки этот флаг может потребоваться отключить.",
			"configuration.tsserver.watchOptions.vscode": "Используйте наблюдатели за файлами VS Code вместо TypeScript. Требует использования в рабочей области TypeScript версии не ниже 5.4.",
			"configuration.tsserver.watchOptions.watchDirectory": "Стратегия того, как все деревья каталога отображаются в системах, где нет рекурсивной функции просмотра файлов.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Используйте динамическую очередь, где чем реже изменяются каталоги, тем реже они проверяются.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling": "Регулярно опрашивает каталоги по блокам.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Проверка каждого каталога на наличие изменений несколько раз в секунду с фиксированным интервалом.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Попытка использовать собственные события операционной системы или файловой системы для изменений каталогов.",
			"configuration.tsserver.watchOptions.watchFile": "Стратегия просмотра отдельных файлов.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Используйте динамическую очередь, где чем реже изменяются файлы, тем реже они проверяются.",
			"configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling": "Регулярно опрашивает файлы по блокам.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Проверка каждого файла на предмет изменений несколько раз в секунду с фиксированным интервалом.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Проверка каждого файла на наличие изменений несколько раз в секунду, но с использованием эвристики, чтобы проверять определенные типы файлов реже, чем другие.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Попытка использовать собственные события операционной системы или файловой системы для изменений файлов.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Попытка использования собственных событий операционной системы или файловой системы для прослушивания изменений в каталогах, содержащих файл. Такой подход позволяет использовать меньше наблюдателей файлов, но может оказаться менее точным.",
			"configuration.tsserver.web.projectWideIntellisense.enabled": "Включить или отключить IntelliSense для всего проекта в Интернете. Требует, чтобы VS Code был запущен в доверенного контекста.",
			"configuration.tsserver.web.projectWideIntellisense.suppressSemanticErrors": "Подавляет семантические ошибки в Интернете, даже если включен IntelliSense для всего проекта. Этот параметр включен всегда, если IntelliSense для всего проекта не включен или недоступен. См. \"#typescript.tsserver.web.projectWideIntellisense.enabled#\"",
			"configuration.tsserver.web.typeAcquisition.enabled": "Включить или отключить получение пакетов через Интернет. Это включает IntelliSense для импортируемых пакетов. Требуется \"#typescript.tsserver.web.projectWideIntellisense.enabled#\". Сейчас не поддерживается для Safari.",
			"configuration.typescript": "TypeScript",
			"configuration.updateImportsOnPaste": "Включить обновление импорта при вставке кода. Требуется TypeScript версии не ниже 5.7.\r\n\r\nПо умолчанию отображается опция обновления импорта после вставки. Вы можете использовать настройку \"#editor.pasteAs.preferences#\" для автоматического обновления импорта при вставке: \"\"editor.pasteAs.preferences\": [ \"text.updateImports.jsts\" ]\".",
			"description": "Предоставляет широкую поддержку языка для JavaScript и TypeScript.",
			"displayName": "Возможности языков TypeScript и JavaScript",
			"format.indentSwitchCase": "Делайте отступ для предложений case в операторах switch. Требуется использование TypeScript 5.1+ в рабочей области.",
			"format.insertSpaceAfterCommaDelimiter": "Определяет метод обработки пробелов после разделителя-запятой.",
			"format.insertSpaceAfterConstructor": "Определяет метод обработки пробелов после ключевого слова constructor.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Определяет метод обработки пробелов после ключевого слова function у анонимных функций.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Определяет метод обработки пробелов после ключевых слов в операторе управления потоком выполнения.",
			"format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": "Определяет обработку пробелов после открывающей и перед закрывающей пустыми фигурными скобками.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Определяет метод обработки пробелов после открытия и до закрытия скобок выражения JSX.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Определяет метод обработки пробелов после открытия и до закрытия непустых фигурных скобок.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Определяет метод обработки пробелов после открытия и до закрытия непустых квадратных скобок.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Определяет метод обработки пробелов после открытия и до закрытия непустых круглых скобок.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Определяет метод обработки пробелов после открытия и до закрытия скобок в строке шаблона.",
			"format.insertSpaceAfterSemicolonInForStatements": "Определяет метод обработки пробелов после точки с запятой в операторе for.",
			"format.insertSpaceAfterTypeAssertion": "Определяет метод обработки пробелов после утверждений типа в TypeScript.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Определяет метод обработки пробелов после двоичного оператора.",
			"format.insertSpaceBeforeFunctionParenthesis": "Определяет метод обработки пробелов перед скобками аргумента функции.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Определяет, ставится ли открывающая фигурная скобка с новой строки в блоках управления.",
			"format.placeOpenBraceOnNewLineForFunctions": "Определяет, ставится ли открывающая фигурная скобка с новой строки в функциях.",
			"format.semicolons": "Определяет обработку необязательных символов точки с запятой.",
			"format.semicolons.ignore": "Не вставлять и не удалять точки с запятой.",
			"format.semicolons.insert": "Вставка запятых в конце оператора.",
			"format.semicolons.remove": "Удалите ненужные запятые.",
			"inlayHints.parameterNames.all": "Включение/отключение указаний имен параметров для литеральных и нелитеральных аргументов.",
			"inlayHints.parameterNames.literals": "Включение указаний имен параметров только для литеральных аргументов.",
			"inlayHints.parameterNames.none": "Отключение указаний имен параметров.",
			"javascript.format.enable": "Включение или отключение модуля форматирования JavaScript по умолчанию.",
			"javascript.goToProjectConfig.title": "Перейти к конфигурации проекта (jsconfig / tsconfig)",
			"javascript.preferences.jsxAttributeCompletionStyle.auto": "Вставьте \"={}\" или \"=\"\" после имен атрибутов на основе типа свойства. См. \"#javascript.preferences.quoteStyle#\" для управления типом кавычек, используемых для строковых атрибутов.",
			"javascript.preferences.organizeImports": "Дополнительные параметры, управляющие порядком импорта.",
			"javascript.referencesCodeLens.enabled": "Включить/отключить ссылки CodeLens для файлов JavaScript.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Включить/отключить ссылки CodeLens для всех функций в файлах JavaScript.",
			"javascript.suggestionActions.enabled": "Включить или отключить предложения диагностики для файлов JavaScript в редакторе.",
			"javascript.validate.enable": "Включение или отключение проверки JavaScript.",
			"reloadProjects.title": "Перезагрузить проект",
			"taskDefinition.tsconfig.description": "Файл tsconfig, который определяет сборку TS.",
			"typescript.autoClosingTags": "Включить или отключить автоматическое закрытие тегов JSX.",
			"typescript.check.npmIsInstalled": "Проверьте, установлен ли npm для [Автоматического получения типов](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.disableAutomaticTypeAcquisition": "Отключает [автоматическое получение типов](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Автоматическое получение типов извлекает пакеты @типов из npm для улучшения IntelliSense для внешних библиотек.",
			"typescript.enablePromptUseWorkspaceTsdk": "Включает вывод пользователям запросов на использование версии TypeScript, настроенной в рабочей области для IntelliSense.",
			"typescript.findAllFileReferences": "Поиск ссылок на файлы",
			"typescript.format.enable": "Включение или отключение модуля форматирования TypeScript по умолчанию.",
			"typescript.goToProjectConfig.title": "Перейти к конфигурации проекта (tsconfig)",
			"typescript.goToSourceDefinition": "Перейти к определению источника",
			"typescript.implementationsCodeLens.enabled": "Включить или отключить CodeLens для реализаций. В этом CodeLens отображаются реализации интерфейса.",
			"typescript.implementationsCodeLens.showOnInterfaceMethods": "Включить или отключить реализацию CodeLens в методах интерфейса.",
			"typescript.locale": "Устанавливает языковой стандарт, используемый для сообщений об ошибках JavaScript и TypeScript. По умолчанию используется языковой стандарт VS Code.",
			"typescript.locale.auto": "Используйте настроенный язык отображения VS Code.",
			"typescript.npm": "Указывает путь к исполняемому npm для [Автоматического получения типов](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.openTsServerLog.title": "Открыть журнал сервера TS",
			"typescript.preferences.autoImportFileExcludePatterns": "Укажите общие шаблоны файлов для исключения из автоматического импорта. Относительные пути разрешаются относительно корня рабочей области. Шаблоны оцениваются с использованием семантики tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude).",
			"typescript.preferences.autoImportSpecifierExcludeRegexes": "Укажите регулярные выражения, чтобы исключить автоматический импорт с соответствующими спецификациями импорта. Примеры:\r\n\r\n- `^node:`\r\n- `lib/internal` (косые черты не нужно экранировать...)\r\n- `/lib\\/internal/i` (...если только не включены окружающие косые черты для флагов “i“ или “u“)\r\n- `^lodash$` (разрешить только импорт подпутей из lodash)",
			"typescript.preferences.importModuleSpecifier": "Предпочтительный стиль пути для автоматического импорта.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Предпочитать неотносительный импорт на основе \"baseUrl\" или \"paths\", заданных в файле jsconfig.json/tsconfig.json.",
			"typescript.preferences.importModuleSpecifier.projectRelative": "Предпочитает безотносительный импорт, только если путь относительного импорта выходит за пределы каталога пакета или проекта.",
			"typescript.preferences.importModuleSpecifier.relative": "Предпочитать относительный путь к расположению импортируемого файла.",
			"typescript.preferences.importModuleSpecifier.shortest": "Предпочитать неотносительный импорт, только если доступен неотносительный импорт с меньшим числом сегментов пути, чем у относительного импорта.",
			"typescript.preferences.importModuleSpecifierEnding": "Предпочтительное окончание пути для автоматического импорта.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Используйте параметры проекта для выбора значения по умолчанию.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Сокращение \"./component/index.js\" до \"./component/index\".",
			"typescript.preferences.importModuleSpecifierEnding.js": "Не сокращайте окончания пути; включите расширение `.js` или `.ts`.",
			"typescript.preferences.importModuleSpecifierEnding.label.js": ".js / .ts",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Сократить `./component/index.js` до `./component`.",
			"typescript.preferences.includePackageJsonAutoImports": "Включение или выключение поиска зависимостей \"package.json\" для доступных операций автоматического импорта.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Поиск зависимостей на основе приблизительного влияния на производительность.",
			"typescript.preferences.includePackageJsonAutoImports.off": "Никогда не искать зависимости.",
			"typescript.preferences.includePackageJsonAutoImports.on": "Всегда искать зависимости.",
			"typescript.preferences.jsxAttributeCompletionStyle": "Предпочитаемый стиль для завершения атрибута JSX.",
			"typescript.preferences.jsxAttributeCompletionStyle.auto": "Вставьте \"={}\" или \"=\"\" после имен атрибутов на основе типа свойства. См. \"#typescript.preferences.quoteStyle#\" для управления типом кавычек, используемых для строковых атрибутов.",
			"typescript.preferences.jsxAttributeCompletionStyle.braces": "Вставить \"={}\" после имен атрибутов.",
			"typescript.preferences.jsxAttributeCompletionStyle.none": "Вставлять только имена атрибутов.",
			"typescript.preferences.organizeImports": "Дополнительные параметры, управляющие порядком импорта.",
			"typescript.preferences.organizeImports.accentCollation": "Требуется \"organizeImports.unicodeCollation: \"unicode\". Сравнивать символы с диакритическими знаками как неравные базовым символам.",
			"typescript.preferences.organizeImports.caseFirst": "Требуется \"organizeImports.unicodeCollation: \"unicode\"\", а \"organizeImports.caseSensitivity\" не является \"caseInsensitive\". Указывает, будут ли заглавные буквы сортироваться раньше строчных.",
			"typescript.preferences.organizeImports.caseFirst.default": "Порядок по умолчанию задается \"locale\".",
			"typescript.preferences.organizeImports.caseFirst.lower": "Строчные буквы ставятся перед заглавными. Например, \"а, А, я, Я\".",
			"typescript.preferences.organizeImports.caseFirst.upper": "Заглавные буквы ставятся перед строчными. Например, \"А, а, Б, б\".",
			"typescript.preferences.organizeImports.caseSensitivity": "Указывает, как следует сортировать импортируемые данные с учетом регистра. Если \"auto\" или не указано, мы определим чувствительность к регистру для каждого файла.",
			"typescript.preferences.organizeImports.caseSensitivity.auto": "Обнаруживать учет регистра для сортировки импорта.",
			"typescript.preferences.organizeImports.caseSensitivity.insensitive": "Сортировка импортов без учета регистра.",
			"typescript.preferences.organizeImports.caseSensitivity.sensitive": "Сортировка импортов с учетом регистра.",
			"typescript.preferences.organizeImports.locale": "Требуется \"organizeImports.unicodeCollation: \"unicode\". Переопределяет языковой стандарт, используемый для параметров сортировки. Укажите \"auto\", чтобы использовать языковой стандарт пользовательского интерфейса.",
			"typescript.preferences.organizeImports.numericCollation": "Требуется \"organizeImports.unicodeCollation: \"unicode\". Сортировать числовые строки по целочисленным значениям.",
			"typescript.preferences.organizeImports.typeOrder": "Укажите, как следует сортировать именованные импорты только по типу.",
			"typescript.preferences.organizeImports.typeOrder.auto": "Определить, где должны сортироваться импорты, именованные только по типу.",
			"typescript.preferences.organizeImports.typeOrder.first": "Импорты, именованные только по типу, сортируются в начало списка импорта. Например, \"import { type A, type Y, B, Z } from \"module\";\"",
			"typescript.preferences.organizeImports.typeOrder.inline": "Именованные импорты сортируются только по имени. Например, \"import { type A, B, type Y, Z } from \"module\";\"",
			"typescript.preferences.organizeImports.typeOrder.last": "Импорты, именованные только по типу, сортируются до конца списка импорта. Например, \"import { B, Z, type A, type Y } из \"module\";\"",
			"typescript.preferences.organizeImports.unicodeCollation": "Укажите, следует ли сортировать импорт с использованием параметров сортировки Юникод или порядкового номера.",
			"typescript.preferences.organizeImports.unicodeCollation.ordinal": "Сортировка импортов с использованием числового значения каждой кодовой точки.",
			"typescript.preferences.organizeImports.unicodeCollation.unicode": "Сортировать импорты с использованием параметров сортировки кода Юникода.",
			"typescript.preferences.preferTypeOnlyAutoImports": "По возможности включать ключевое слово \"type\" в автоматический импорт. Требуется использование TypeScript 5.3+ в рабочей области.",
			"typescript.preferences.quoteStyle": "Предпочитаемый стиль кавычек для быстрых исправлений.",
			"typescript.preferences.quoteStyle.auto": "Вывести тип кавычек из существующего кода",
			"typescript.preferences.quoteStyle.double": "Всегда использовать двойные кавычки: \"",
			"typescript.preferences.quoteStyle.single": "Всегда использовать одиночные кавычки: '",
			"typescript.preferences.renameMatchingJsxTags": "При использовании тега JSX попробуйте переименовать соответствующий тег вместо символа. Требуется использование TypeScript 5.1 и более поздних версий в рабочей области.",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "Параметр typescript.preferences.renameShorthandProperties объявлен нерекомендуемым, вместо него следует использовать typescript.preferences.useAliasesForRenames",
			"typescript.preferences.useAliasesForRenames": "Включение или отключение псевдонимов для собирательных свойств объекта во время переименований.",
			"typescript.problemMatchers.tsc.label": "Проблемы TypeScript",
			"typescript.problemMatchers.tscWatch.label": "Проблемы TypeScript (режим наблюдения)",
			"typescript.referencesCodeLens.enabled": "Включить/отключить ссылки CodeLens для файлов TypeScript.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Включить/отключить ссылки CodeLens для всех функций в файлах TypeScript.",
			"typescript.removeUnusedImports": "Удалить неиспользованные импортированные данные",
			"typescript.reportStyleChecksAsWarnings": "Отображать ошибки при проверке стиля в виде предупреждений.",
			"typescript.restartTsServer": "Перезапустить сервер TS",
			"typescript.selectTypeScriptVersion.title": "Выберите версию TypeScript...",
			"typescript.sortImports": "Сортировать импортированные данные",
			"typescript.suggest.enabled": "Включить/отключить предложения автозаполнения.",
			"typescript.suggestionActions.enabled": "Включить или отключить предложения диагностики для файлов TypeScript в редакторе.",
			"typescript.tsc.autoDetect": "Управляет автоматическим обнаружением заданий tsc.",
			"typescript.tsc.autoDetect.build": "Создавать только задачи компиляции для однократного запуска.",
			"typescript.tsc.autoDetect.off": "Отключить эту функцию.",
			"typescript.tsc.autoDetect.on": "Создавать задачи сборки и просмотра.",
			"typescript.tsc.autoDetect.watch": "Создавать только задачи компиляции и просмотра.",
			"typescript.tsdk.desc": "Указывает путь к файлам \"tsserver\" и \"lib*.d.ts\" в установке TypeScript, используемой для IntelliSense, например: ./node_modules/typescript/lib.\r\n\r\n— При указании в качестве пользовательского параметра версия TypeScript из файла typescript.tsdk автоматически заменяет встроенную версию TypeScript.\r\n— При указании в качестве параметра рабочей области typescript.tsdk позволяет переключиться на использование этой версии рабочей области TypeScript для IntelliSense с помощью команды \"TypeScript: выберите версию TypeScript\".\r\n\r\nДополнительные сведения об управлении версиями TypeScript см. в [документации по TypeScript](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions).",
			"typescript.tsserver.enableRegionDiagnostics": "Включает диагностику на основе региона в TypeScript. Требуется использование TypeScript 5.6+ в рабочей области.",
			"typescript.tsserver.enableTracing": "Включает трассировку производительности сервера TS в каталог. Эти файлы трассировки можно использовать для диагностики проблем с производительностью сервера TS. В журнале могут содержаться пути к файлам, исходный код и другие сведения из вашего проекта, в том числе носящие конфиденциальный характер.",
			"typescript.tsserver.log": "Включает ведение журнала для сервера TS. Этот журнал можно использовать для диагностики проблем сервера TS. В журнале могут содержаться пути к файлам, исходный код и другие сведения из вашего проекта, в том числе носящие конфиденциальный характер.",
			"typescript.tsserver.pluginPaths": "Дополнительные пути для обнаружения подключаемых модулей языковой службы TypeScript.",
			"typescript.tsserver.pluginPaths.item": "Абсолютный или относительный путь. Относительный путь должен быть указан относительно папок рабочей области.",
			"typescript.tsserver.trace": "Включает трассировку сообщений, отправляемых на сервер TS. Эту трассировку можно использовать для диагностики проблем сервера TS. Трассировка может содержать пути к файлам, исходный код и другие сведения из вашего проекта, в том числе конфиденциальные данные.",
			"typescript.updateImportsOnFileMove.enabled": "Включить или отключить автоматическое обновление путей импорта при переименовании или перемещении файла в VS Code.",
			"typescript.updateImportsOnFileMove.enabled.always": "Всегда обновлять пути автоматически.",
			"typescript.updateImportsOnFileMove.enabled.never": "Никогда не переименовывать пути и не выдавать запрос на переименование.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Выдавать запрос при каждом переименовании.",
			"typescript.validate.enable": "Включение или отключение проверки TypeScript.",
			"typescript.workspaceSymbols.excludeLibrarySymbols": "Исключить символы из библиотечных файлов в результатах \"Перейти к символу в рабочей области\". Требуется использование TypeScript 5.3+ в рабочей области.",
			"typescript.workspaceSymbols.scope": "Определяет, какие файлы ищутся при [переходе к символу в рабочей области](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Поиск символов во всех открытых проектах JavaScript или TypeScript.",
			"typescript.workspaceSymbols.scope.currentProject": "Поиск символов только в текущем проекте JavaScript или TypeScript.",
			"virtualWorkspaces": "В виртуальных рабочих областях разрешение и поиск ссылок в файлах не поддерживается.",
			"walkthroughs.nodejsWelcome.debugJsFile.altText": "Выполняйте отладку и запуск кода JavaScript в Node.js с помощью Visual Studio Code.",
			"walkthroughs.nodejsWelcome.debugJsFile.description": "После установки Node.js вы можете запустить программы JavaScript в терминале путем ввода \"node your-file-name.js\"\r\nЕще один простой способ запуска программ Node.js — использовать отладчик VS Code, который позволяет запускать код, приостанавливать работу в разных точках и предоставляет пошаговые инструкции для упрощения понимания происходящего.\r\n[Начать отладку](command:javascript-walkthrough.commands.debugJsFile)",
			"walkthroughs.nodejsWelcome.debugJsFile.title": "Запуск и отладка JavaScript",
			"walkthroughs.nodejsWelcome.description": "Используйте все отличные возможности JavaScript в Visual Studio Code.",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.description": "Node.js — это простой способ запуска кода JavaScript. С его помощью можно быстро создавать приложения командной строки и серверы. Он также содержит диспетчер пакетов npm, который упрощает повторное использование и совместное применение кода JavaScript.\r\n[Установить Node.js](https://nodejs.org/en/download/package-manager/)",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.title": "Установить Node.js",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.description": "Node.js — это простой способ запуска кода JavaScript. С его помощью можно быстро создавать приложения командной строки и серверы. Он также содержит диспетчер пакетов npm, который упрощает повторное использование и совместное применение кода JavaScript.\r\n[Установить Node.js](https://nodejs.org/en/download/)",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.title": "Установить Node.js",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.altText": "Дополнительные сведения о JavaScript и Node.js в Visual Studio Code.",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.description": "Хотите подробнее изучить JavaScript, Node.js и VS Code? Ознакомьтесь с нашими документами!\r\nУ нас много ресурсов для изучения [JavaScript](https://code.visualstudio.com/docs/nodejs/working-with-javascript) и [Node.js](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial).\r\n\r\n[Подробнее](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial)",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.title": "Другие возможности",
			"walkthroughs.nodejsWelcome.makeJsFile.description": "Давайте создадим первый файл JavaScript. Необходимо создать новый файл и сохранить его с расширением \".js\" в конце имени файла.\r\n[Создать файл JavaScript](command:javascript-walkthrough.commands.createJsFile)",
			"walkthroughs.nodejsWelcome.makeJsFile.title": "Создать файл JavaScript",
			"walkthroughs.nodejsWelcome.title": "Начало работы с JavaScript и Node.js",
			"workspaceTrust": "Расширение требует доверия рабочей области, когда используется версия рабочей области, так как она выполняет код, указанный рабочей областью."
		}
	}
}
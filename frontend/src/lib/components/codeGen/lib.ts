import { Configuration, OpenAIApi } from 'openai'
import type { SupportedLanguage } from '../../common'
import { scriptLangToEditorLang } from '../../scripts'

const config = new Configuration({
	apiKey: import.meta.env.VITE_OPENAI_API_KEY
})

export const openai = new OpenAIApi(config)

interface PromptGenerationOptions {
	language: SupportedLanguage
	description: string
}

interface ScriptGenerationOptions extends PromptGenerationOptions {}

function _generatePrompt({ language, description }: PromptGenerationOptions) {
	const lang = scriptLangToEditorLang(language)
	return `Write a function called main for ${lang}. It should ${description}. Export the function main.`
}

async function generateScript(scriptOptions: ScriptGenerationOptions) {
	const prompt = _generatePrompt(scriptOptions)
	const completion = await openai.createCompletion({
		model: 'text-davinci-003',
		prompt: prompt,
		max_tokens: 512
	})

	const result = completion.data.choices[0].text

	if (result === undefined) {
		throw new Error('No result from OpenAI')
	}

	return (
		'// WARNING: this code was generated by OpenAI, it might not be accurate. Use at your own risk.\n\n' +
		result.trim()
	)
}

export { generateScript }

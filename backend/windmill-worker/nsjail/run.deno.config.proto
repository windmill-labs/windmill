name: "deno run script"

mode: ONCE
hostname: "deno"
log_level: ERROR

rlimit_as: 16000
rlimit_cpu: 1000
rlimit_fsize: 1000
rlimit_nofile: 10000

cwd: "/tmp"


clone_newnet: false
clone_newuser: {CLONE_NEWUSER}

keep_caps: false
keep_env: true
mount_proc: true

mount {
    src: "/bin"
    dst: "/bin"
	is_bind: true
}

mount {
    src: "/lib"
    dst: "/lib"
	is_bind: true
}


mount {
    src: "/lib64"
    dst: "/lib64"
	is_bind: true
}


mount {
    src: "/usr"
    dst: "/usr"
	is_bind: true
}

mount {
	src: "/dev/null"
	dst: "/dev/null"
	is_bind: true
	rw: true
}

mount {
	dst: "/tmp"
	fstype: "tmpfs"
	rw: true
    options: "size=500000000"
}


mount {
    src: "{JOB_DIR}/inner.ts"
    dst: "/tmp/inner.ts"
    is_bind: true
}

mount {
    src: "{JOB_DIR}/main.ts"
    dst: "/tmp/main.ts"
    is_bind: true
}

mount {
    src: "{JOB_DIR}/import_map.json"
    dst: "/tmp/import_map.json"
    is_bind: true
}

mount {
    src: "{JOB_DIR}/lock.json"
    dst: "/tmp/lock.json"
    is_bind: true
}

mount {
    src: "{JOB_DIR}/args.json"
    dst: "/tmp/args.json"
    is_bind: true
}

mount {
    src: "{JOB_DIR}/result.json"
    dst: "/tmp/result.json"
    is_bind: true
    rw: true
}

mount {
    src: "/etc"
    dst: "/etc"
	is_bind: true
}

mount {
    src: "/dev/random"
    dst: "/dev/random"
    is_bind: true
}

mount {
    src: "/dev/urandom"
    dst: "/dev/urandom"
    is_bind: true
}

mount {
    src: "{CACHE_DIR}"
    dst: "/tmp/.cache/deno"
    is_bind: true
    rw: true
    mandatory: false
}

{SHARED_MOUNT}

iface_no_lo: true

envar: "DENO_DIR=/tmp/.cache/deno"
envar: "NO_COLOR=true"
envar: "HOME=/tmp"




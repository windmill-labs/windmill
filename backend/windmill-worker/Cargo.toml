[package]
name = "windmill-worker"
version.workspace = true
authors.workspace = true
edition.workspace = true

[lib]
name = "windmill_worker"
path = "src/lib.rs"

[features]
default = []
deno-lock = []
enterprise = ["windmill-queue/enterprise"]

[dependencies]
windmill-queue.workspace = true
windmill-audit.workspace = true # there isn't really a reason for audit-worth actions to happen in the worker.
windmill-common = { workspace = true, features = [
    "tokio",
    "sqlx",
    "prometheus",
    "tracing_init",
] }
windmill-api-client.workspace = true
windmill-parser.workspace = true
windmill-parser-ts.workspace = true
windmill-parser-go.workspace = true
windmill-parser-py.workspace = true
windmill-parser-py-imports.workspace = true
windmill-parser-bash.workspace = true
windmill-parser-sql.workspace = true
sqlx.workspace = true
uuid.workspace = true
tracing.workspace = true
tokio.workspace = true
serde.workspace = true
serde_json.workspace = true
futures.workspace = true
async-recursion.workspace = true
anyhow.workspace = true
itertools.workspace = true
regex.workspace = true
prometheus.workspace = true
lazy_static.workspace = true
chrono.workspace = true
dotenv.workspace = true
rand.workspace = true # TODO: Remove. only used by token creation hack.
const_format.workspace = true
git-version.workspace = true
dyn-iter.workspace = true
once_cell.workspace = true
rsmq_async.workspace = true
tokio-postgres.workspace = true
deno_fetch.workspace = true
deno_webidl.workspace = true
deno_web.workspace = true
deno_console.workspace = true
deno_url.workspace = true
deno_core.workspace = true
deno_ast.workspace = true
postgres-native-tls.workspace = true
native-tls.workspace = true

[build-dependencies]
deno_fetch.workspace = true
deno_webidl.workspace = true
deno_web.workspace = true
deno_console.workspace = true
deno_url.workspace = true
deno_core.workspace = true
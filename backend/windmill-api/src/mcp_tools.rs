// Auto-generated MCP tools from OpenAPI specification
// This file is generated by generate_mcp_tools.py - DO NOT EDIT MANUALLY

use std::borrow::Cow;

#[derive(Debug, Clone)]
pub struct EndpointTool {
    pub name: Cow<'static, str>,
    pub description: Cow<'static, str>,
    pub path: Cow<'static, str>,
    pub method: http::Method,
    pub path_params_schema: Option<serde_json::Value>,
    pub query_params_schema: Option<serde_json::Value>,
    pub body_schema: Option<serde_json::Value>,
}

pub fn all_tools() -> Vec<EndpointTool> {
    vec![
    EndpointTool {
        name: Cow::Borrowed("createResource"),
        description: Cow::Borrowed("create resource"),
        path: Cow::Borrowed("/w/{workspace}/resources/create"),
        method: http::Method::POST,
        path_params_schema: None,
        query_params_schema: Some(serde_json::json!({
        "type": "object",
        "properties": {
                "update_if_exists": {
                        "type": "boolean"
                }
        },
        "required": []
})),
        body_schema: Some(serde_json::json!({
        "type": "object",
        "properties": {
                "path": {
                        "type": "string"
                },
                "value": {},
                "description": {
                        "type": "string"
                },
                "resource_type": {
                        "type": "string"
                }
        },
        "required": [
                "path",
                "value",
                "resource_type"
        ]
})),
    },
    EndpointTool {
        name: Cow::Borrowed("listResource"),
        description: Cow::Borrowed("list resources"),
        path: Cow::Borrowed("/w/{workspace}/resources/list"),
        method: http::Method::GET,
        path_params_schema: None,
        query_params_schema: Some(serde_json::json!({
        "type": "object",
        "properties": {
                "page": {
                        "type": "integer",
                        "description": "which page to return (start at 1, default 1)"
                },
                "per_page": {
                        "type": "integer",
                        "description": "number of items to return for a given page (default 30, max 100)"
                },
                "resource_type": {
                        "type": "string",
                        "description": "resource_types to list from, separated by ',',"
                },
                "resource_type_exclude": {
                        "type": "string",
                        "description": "resource_types to not list from, separated by ',',"
                },
                "path_start": {
                        "type": "string"
                }
        },
        "required": []
})),
        body_schema: None,
    }
    ]
}

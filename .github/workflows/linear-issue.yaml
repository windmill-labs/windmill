name: External Aider Issue Fix

on:
  repository_dispatch:
    types: [external_issue_fix]

jobs:
  auto-fix:
    runs-on: ubicloud-standard-8
    permissions:
      contents: write
      pull-requests: write
      issues: write
    env:
      GEMINI_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      WINDMILL_TOKEN: ${{ secrets.WINDMILL_TOKEN }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Aider and Dependencies
        run: |
          python -m pip install aider-install; aider-install
          pip install -U google-generativeai
          sudo apt-get update && sudo apt-get install -y jq

      - name: Create Prompt for Aider
        id: create_prompt
        shell: bash
        run: |
          PROMPT_FILE_PATH=".github/aider/issue-prompt.txt"
          mkdir -p .github/aider

          ISSUE_TITLE="${{ github.event.client_payload.issue_title }}"
          INSTRUCTION="${{ github.event.client_payload.instruction }}"
          ISSUE_BODY=$(printf '%q' "${{ github.event.client_payload.issue_body }}")

          echo "Processing issue with title: $ISSUE_TITLE"

          JSON_PAYLOAD=$(jq -n \
            --arg title "$ISSUE_TITLE" \
            --arg body "$ISSUE_BODY" \
            '{"body":{"issue_title":$title,"issue_body":$body}}')

  run-aider:
    needs: check-and-prepare
    uses: ./.github/workflows/aider-common.yml
    with:
      issue_title: ${{ needs.check-and-prepare.outputs.issue_title }}
      issue_body: ${{ needs.check-and-prepare.outputs.issue_body }}
      instruction: ${{ needs.check-and-prepare.outputs.instruction }}
      issue_id: ${{ github.event.client_payload.issue_id }}
      rules_files: "CLAUDE.md backend/CLAUDE.md frontend/CLAUDE.md"
    secrets: inherit

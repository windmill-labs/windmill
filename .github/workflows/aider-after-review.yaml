name: Aider Auto-fix PR Review Change Requests

on:
  pull_request_review:
    types: [submitted]

jobs:
  check-and-prepare:
    if: github.event.review.state == 'changes_requested' && contains(github.event.pull_request.title, '[Aider PR]')
    runs-on: ubicloud-standard-2
    permissions:
      contents: write
      pull-requests: write
    outputs:
      prompt_content: ${{ steps.prepare_prompt.outputs.prompt_content }}
    env:
      GEMINI_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      WINDMILL_TOKEN: ${{ secrets.WINDMILL_TOKEN }}

    steps:
      - name: Acknowledge Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "Commenting on PR #${{ github.event.pull_request.number }} to acknowledge the /aider command."
          gh pr comment ${{ github.event.pull_request.number }} --body "ðŸ¤– Aider is starting to work on your request. Please be patient, this might take a few minutes." --repo $GITHUB_REPOSITORY

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout PR Branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "PR review trigger: Checking out PR branch..."
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_HEAD_REF=$(gh pr view $PR_NUMBER --json headRefName -q .headRefName --repo $GITHUB_REPOSITORY)
          if [[ -z "$PR_HEAD_REF" || "$PR_HEAD_REF" == "null" ]]; then
             echo "::error::Could not determine PR head branch for PR #$PR_NUMBER via gh CLI."
             exit 1
          fi
          echo "Checking out PR head branch: $PR_HEAD_REF for PR #$PR_NUMBER"
          git fetch origin "refs/heads/${PR_HEAD_REF}:refs/remotes/origin/${PR_HEAD_REF}" --no-tags
          git checkout "$PR_HEAD_REF"
          echo "Successfully checked out branch $(git rev-parse --abbrev-ref HEAD)"

      - name: Prepare prompt for Aider
        id: prepare_prompt
        shell: bash
        run: |
          # Get PR review body
          REVIEW_BODY="${{ github.event.review.body }}"
          REVIEW_BODY_Q=$(printf '%q' "$REVIEW_BODY")

          PR_NUMBER="${{ github.event.pull_request.number }}"

          # Get all PR review comments
          ALL_REVIEW_COMMENTS=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/$GITHUB_REPOSITORY/pulls/$PR_NUMBER/comments \
            | jq '[.[] | {diff_hunk: .diff_hunk, path: .path, body: .body}]')

          BASE_PROMPT="Fix the following issues in the PR based on the review feedback. The review body is prepended with REVIEW. The review comments are prepended with REVIEW_COMMENTS. The review body and comments are separated by a blank line."
          printf -v COMPLETE_PROMPT "%s\nREVIEW:\n%s\nREVIEW_COMMENTS:\n%s" \
            "$BASE_PROMPT" "$REVIEW_BODY_Q" "$ALL_REVIEW_COMMENTS"

          echo "$COMPLETE_PROMPT"

          # Use the proper multi-line output format
          echo "prompt_content<<EOF" >> $GITHUB_OUTPUT
          echo "$COMPLETE_PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  run-aider:
    needs: check-and-prepare
    uses: ./.github/workflows/aider-common.yml
    with:
      needs_processing: false
      base_prompt: ${{ needs.check-and-prepare.outputs.prompt_content }}
    secrets: inherit
